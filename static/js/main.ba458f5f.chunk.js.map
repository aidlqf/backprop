{"version":3,"sources":["components/def/Legend.js","components/def/Arrow.js","components/def/PlayGround.js","components/def/ScatterPlot.js","components/def/Loss.js","components/def/LinearFunction.js","components/def/NestedFunction.js","components/def/Explanation.js","nn/def/Neuron.js","nn/def/Loss.js","nn/def/NeuralNetwork.js","nn/def/Tools.js","App.js","reportWebVitals.js","index.js"],"names":["Legend","width","height","class","overflow","fill","fontFamily","fontSize","x","y","source","target","color","id","orient","markerWidth","markerHeight","refX","refY","d","markerEnd","strokeWidth","stroke","PlayGround","props","state","widths","zoom","macro","micro","bind","d3node","d3zoom","scaleZoom","duration","attr","array","flattendArray","i","length","e","push","model","this","mode","trans","flatten","children","l","weights","negWeight","posWeight","link","d3","playing","transform","className","links","map","Math","pow","rects","onClick","lin","connection","inputWeightComponent","input","weight","dInput","dWeight","add","relu","VerticalArrow","xStart","yStart","dirIsUp","vector","Arrow","notPlaying","backward","bshow","abs","dActStep","nshow","output","toFixed","toPrecision","neuron","inputs","dInputs","dWeights","bias","dBias","multStep","dSumStep","sumStep","actStep","dvalue","loss","Component","ScatterPlot","node","formattedPoints","selectAll","data","enter","append","style","a","padding","start","stop","container","svg","xScale","domain","range","yScale","xAxis","scale","yAxis","call","X","yhat","select","dataSet","remove","plotPoints","Loss","ticks","lossArray","lossMin","lossMax","LinearFunction","compute","setState","Box","display","minWidth","Card","variant","CardContent","Slider","value","onChange","n","Typography","NestedFunction","output1","output2","output3","biases","initParams","linfunc","w","b","arr","Array","random","genRandomArray","fixedInput","outputArr","justifyContent","strokeDasharray","CardActions","Button","size","Explanation","marginTop","gutterBottom","marginBottom","Neuron","array1","array2","item","dvalues","oppositeParameter","mult","reduce","numInputs","dSumArray","activation","sum","dSum","dInputsSum","MeanSquaredErrorLoss","subStep","squareStep","NeuralNetwork","shape","layer","dense","array1Length","array2Length","console","error","result","max","label","lastLayer","outputs","forward","ReLU","linear","zeros","dValues","dLinear","dReLU","lr","gd","dweight","newWeights","newBias","change","calcChange","formatWeightArray","uweights","increment","weightSet","t","toFunc2DArray","fixed","getRandomInt","floor","tensorToArray","tensor","from","dataSync","tools","App","anim","nn","timer","ms","Promise","res","setTimeout","subEpoch","direction","Infinity","curr","throttleForward","duringEpoch","epoch","biasesData","weightsData","curve","controls","speed","microShow","sliderVal","vSliderVal","vSliderConv","run","genTensorData","mutate","train","printParameters","reset","asyncPause","resetParameters","changeModelLr","initNeuralNetwork","flattenedWeights","rw","rh","layerProportion","ns","flatns","aaron","prevNeuron","lrChange","tf","log","key","subkey","inputShape","units","useBias","addModel","compile","optimizer","sgd","XTensor","yTensor","play","fit","epochs","yhatTensor","predict","meanSquaredError","eqn","scaled","getWeights","modelCompile","newShape","splice","dataSets","PlayButtonClick","Fab","background","disableTouchRipple","Stop","PlayArrow","controlsReg","Tooltip","title","arrow","IconButton","disabled","Replay","SlowMotionVideo","controlsBackProp","controlCenter","on","placement","open","formattedWeights","num","Chip","defaultValue","aria-labelledby","valueLabelDisplay","step","marks","min","scatter","marginLeft","AppBar","position","Toolbar","outlineColor","paddingBottom","shapedWeights","show","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"81BAsDeA,MAnDf,WACC,IACMC,EAAQ,IACd,OACC,8BACC,sBAAKA,MAAOA,EAAOC,OAJN,GAIsBC,MAAM,OAAOC,SAAS,UAAzD,UACC,sBACCC,KAAK,OACLC,WAAW,aACXC,SAAS,OACTC,EAAG,EACHC,GAAI,GALL,8BAUA,sBACCJ,KAAK,OACLC,WAAW,aACXC,SAAS,OACTC,EAAG,EACHC,GAAI,EALL,6BAUA,sBAAMF,SAAS,OAAOF,KAAK,OAAOG,GAAI,GAAKC,EAAG,GAA9C,eAGA,sBAAMF,SAAS,OAAOF,KAAK,OAAOG,GAAI,IAAKC,EAAG,GAA9C,oBAIA,sBAAMF,SAAS,OAAOF,KAAK,OAAOG,EAAGP,GAAeQ,EAAG,GAAvD,eAGA,sBAAMF,SAAS,OAAOF,KAAK,OAAOG,EAAGP,KAAiBQ,EAAG,GAAzD,eAIA,sBAAMF,SAAS,OAAOF,KAAK,OAAOG,EAAGP,GAAWQ,EAAG,GAAnD,eAGA,sBAAMF,SAAS,OAAOF,KAAK,OAAOG,EAAGP,KAAiBQ,EAAG,GAAzD,qBCrBWT,EAxBA,SAAC,GAAD,IAAGU,EAAH,EAAGA,OAAQC,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,MAAnB,OACd,8BACC,+BACC,wBACCC,GAAG,OACHC,OAAO,OACPC,YAAY,IACZC,aAAa,IACbC,KAAK,MACLC,KAAK,IANN,SAQC,sBAAMC,EAAE,iBAAiBd,KAAMO,QAGjC,sBACCC,GAAG,aACHO,UAAU,aACVC,YAAY,IACZhB,KAAK,OACLiB,OAAQV,EACRO,EAAC,WAAMT,EAAOF,EAAb,YAAkBE,EAAOD,EAAzB,aAA+BE,EAAOH,EAAtC,aAA4CG,EAAOF,SCocxCc,E,kDA7cd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZC,OAAQ,GACRC,KAAM,GACNC,OAAO,EACPC,OAAO,GAER,EAAKF,KAAO,EAAKA,KAAKG,KAAV,gBARM,E,wCAUnB,SAAKC,EAAQC,EAAQxB,EAAGC,EAAGwB,EAAWC,GACrCH,EAIEI,KACA,YALF,qBAMgB3B,EAAIyB,EANpB,cAOIxB,EAAIwB,EAPR,kBAQYA,EARZ,Q,qBAWD,SAAQG,GAEP,IADA,IAAIC,EAAgB,GACXC,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,IACjC,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAME,GAAGC,OAAQC,IACpCH,EAAcI,KAAKL,EAAME,GAAGE,IAG9B,OAAOH,I,oBAGR,WAAU,IAAD,OACJK,EAAQ,GACZ,GAAIC,KAAKnB,MAAMoB,KAAM,CAAC,IACbC,EAAUF,KAAKnB,MAAfqB,MAERH,EAAQC,KAAKG,QAAQD,EAAMH,OALpB,IAQAK,EAAaJ,KAAKnB,MAAlBuB,SAEJC,EAAIL,KAAKnB,MAAMyB,QAAQV,OACrBW,EAAY,UACZC,EAAY,UAEZC,EAAOC,MAEX7C,GAAE,SAACW,GAAD,OAAOA,EAAEX,KACXC,GAAE,SAACU,GAAD,OAAOA,EAAEV,KACP6C,EACL,qBAAKzC,GAAG,IAAIZ,MAAM,MAAMC,OAAO,MAAME,SAAS,UAA9C,SACC,oBAAGmD,UAAW,WAAd,UACC,sBACCpC,EAAE,wBACFG,OAAa,GAAL0B,EAAS,QAAU,UAC3BQ,UAAWb,KAAKnB,MAAM8B,UAEvB,sBACCnC,EAAGiC,EAAK,CACP1C,OAAQ,CAAEF,EAAG,IAAKC,EAAG,KACrBE,OAAQ,CAAEH,EAAG,IAAKC,EAAG,OAEtBa,OAAa,GAAL0B,EAAS,QAAU,UAC3B3C,KAAK,OACLmD,UAAWb,KAAKnB,MAAM8B,UAEvB,sBACCnC,EAAGiC,EAAK,CACP1C,OAAQ,CAAEF,EAAG,IAAKC,EAAG,KACrBE,OAAQ,CAAEH,EAAG,IAAKC,EAAG,OAEtBa,OAAa,GAAL0B,EAAS,QAAU,UAC3B3C,KAAK,OACLmD,UAAWb,KAAKnB,MAAM8B,UAEtBX,KAAKnB,MAAMiC,MAAMC,KAAI,SAACvC,EAAGmB,GAAJ,OACrB,sBAECnB,EAAGA,EACHqC,UAAW,EAAKhC,MAAM8B,QACtBjC,YACO,IAAN2B,EACG,EACAW,KAAKC,IAAI,EAAKpC,MAAMyB,QAAQX,GAAI,GAAK,GAEzChB,OACO,IAAN0B,EACG,EAAKxB,MAAMyB,QAAQX,GAAK,EACvBa,EACAD,EACD,UAEJ7C,KAAK,QAfAiC,MAkBNK,KAAKnB,MAAMqC,MAAMH,KAAI,SAACvC,EAAGmB,GAAJ,OACrB,sBAEC9B,EAAGW,EAAEX,EACLC,EAAGU,EAAEV,EACLR,MAAO,EAAKwB,MAAMC,OAClBxB,OAAQ,EAAKuB,MAAMC,OACnBoC,QAAS,WACR,EAAKtC,MAAMsC,WAEZzD,KAAK,aARAiC,MAYP,sBACC9B,EAAG,IACHC,EAAG,IACHR,MAAO,GACPC,OAAQ,GACRG,KAAK,OACLiB,OAAO,UAER,sBACChB,WAAW,aACXC,SAAS,OACTC,EAAG,IACHC,EAAG,IAJJ,uBAaCF,EAAW,MACTwD,EAAMV,MAUNW,EAAa,SAACxD,EAAGC,EAAGG,GAAP,OAClB,sBAAMO,EAAG4C,EAAI,CAACvD,EAAGC,IAAKa,OAAQV,EAAOS,YAAY,SAG5C4C,EAAuB,SAACC,EAAOC,EAAQC,EAAQC,GAAxB,OAC5B,8BACEL,EAAW,CAAC,EAAG,KAAO,CAAC,EAAG,KAAO,SACjCA,EAAW,CAAC,EAAG,MAAO,CAAC,EAAG,MAAO,SACjCA,EAAW,CAAC,EAAG,KAAO,CAAC,EAAG,KAAM,SAChCA,EAAW,CAAC,EAAG,MAAO,CAAC,EAAG,KAAM,UAjBrBxD,EAkBN,EAlBSC,EAkBN,GAjBV,sBAAKD,EAAGA,EAAGC,EAAGA,EAAGR,MAAO,EAAGC,OAAQ,EAAnC,UACC,sBAAMD,MAAO,EAAGC,OAAQ,EAAGM,EAAG,EAAGC,EAAG,EAAGJ,KAAK,UAC5C,sBAAME,SAAS,MAAMC,EAAG,GAAKC,EAAG,EAAhC,sBAHW,IAACD,EAAGC,GAsBX6D,EAAM,SAAC9D,EAAGC,GAAJ,OACX,sBAAKD,EAAGA,EAAGC,EAAGA,EAAGR,MAAO,EAAGC,OAAQ,EAAnC,UACC,sBAAMD,MAAO,EAAGC,OAAQ,EAAGM,EAAG,EAAGC,EAAG,EAAGJ,KAAK,UAC5C,sBAAME,SAAS,MAAMC,EAAG,GAAKC,EAAG,IAAhC,mBAKI8D,EAAO,SAAC/D,EAAGC,GAAJ,OACZ,sBAAKD,EAAGA,EAAGC,EAAGA,EAAGR,MAAO,EAAGC,OAAQ,EAAnC,UACC,sBAAMD,MAAO,EAAGC,OAAQ,EAAGM,EAAG,EAAGC,EAAG,EAAGJ,KAAK,UAC5C,sBAAME,SAAS,QAAQC,EAAG,IAAMC,EAAG,GAAnC,kBAGCuD,EAAW,CAAC,EAAG,KAAM,CAAC,EAAG,KAAM,SAC/BA,EAAW,CAAC,EAAG,KAAM,CAAC,EAAG,IAAM,aA6J5BQ,EAAgB,SAACC,EAAQC,EAAQnC,EAAQoC,EAAS/D,GACvD,IAAMgE,EAASD,GAAWpC,EAASA,EACnC,OACC,cAACsC,EAAD,CACCnE,OAAQ,CAAEF,EAAGiE,EAAQhE,EAAGiE,GACxB/D,OAAQ,CAAEH,EAAGiE,EAAQhE,EAAGiE,EAASE,GACjChE,MAAOA,KAIJkE,EACL,qBAAKjE,GAAG,KAAKZ,MAAM,MAAMC,OAAO,MAAhC,SACC,oBAAGW,GAAG,MAAN,UACC,sBACCM,EAAE,wBACFG,OAAO,QACPkC,UAAWb,KAAKnB,MAAMuD,WAGtBpC,KAAKnB,MAAMiC,MAAMC,KAAI,SAACvC,EAAGmB,GAAJ,OACrB,sBAECnB,EAAGA,EACHqC,UAAW,EAAKhC,MAAMuD,SACtB1D,YACCsC,KAAKC,IAAI,EAAKpC,MAAMyB,QAAQX,GAAI,GAAK,IAEtChB,OAC+B,IAA9B,EAAKE,MAAMyB,QAAQV,OAChB,EAAKf,MAAMyB,QAAQX,GAAK,EACvBa,EACAD,EACD,UAEJ7C,KAAK,QAbAiC,MAiBNK,KAAKnB,MAAMqC,MAAMH,KAAI,SAACvC,EAAGmB,GAAJ,OACrB,oBAAGzB,GAAG,OAAN,UACC,sBACCL,EAAGW,EAAEX,EACLC,EAAGU,EAAEV,EACLR,MAAO,EAAKwB,MAAMC,OAClBxB,OAAQ,EAAKuB,MAAMC,OACnBoC,QAAS,aAgBTzD,KAAK,cAEY,IAAjBqC,EAAMH,QAAgBD,EAAI,EAAKd,MAAMwD,OACnC1C,EAAI,EACHkC,EACArD,EAAEX,EAAI,GACNW,EAAEV,EAAI,GACNkD,KAAKsB,IACJ,IAAMvC,EAAMJ,EAAI,GAAG4C,UAEpBxC,EAAMJ,EAAI,GAAG4C,SAAW,EACxB,QAGD,GACH,sBAAM7E,KAAK,UAAUG,EAAGW,EAAEX,EAAI,GAAIC,EAAGU,EAAEV,EAAI,GAA3C,SACmB,IAAjBiC,EAAMH,QAAgBD,EAAI,EAAKd,MAAM2D,MACnC7C,EAAI,EACHI,EAAMJ,EAAI,GAAG8C,OAAOC,QAAQ,GAC5B,EAAK7D,MAAM0C,MACZ,KAEJ,sBAAM7D,KAAK,UAAUG,EAAGW,EAAEX,EAAI,GAAIC,EAAGU,EAAEV,EAAI,GAA3C,SACmB,IAAjBiC,EAAMH,QAAgBD,EAAI,EAAKd,MAAMwD,OACnC1C,EAAI,EACHI,EAAMJ,EAAI,GAAG4C,SAASI,YAAY,GAEnC,KAEHhD,EAAI,GAAK,EAAKb,MAAMI,OAnPXrB,EAqPPW,EAAEX,EAAI,EArPIC,EAsPVU,EAAEV,EAtPW8E,EAuPb7C,EAAMH,OAAS,EAAIG,EAAMJ,EAAI,GAAK,GAtPzC,sBAAKrC,MAAO,GAAIC,OAAQ,GAAIM,EAAGA,EAAGC,EAAGA,EAArC,UACmB,GAAjB8E,EAAOhD,OACL,GACAgD,EAAOC,OAAO9B,KAAI,SAACvC,EAAGmB,GAAJ,OAClB,8BACC,sBAAKrC,MAAO,GAAIC,OAAQ,EAAGM,EAAG,EAAGC,EAAO,IAAJ6B,EAApC,UACC,sBAAM/B,SAAUA,EAAUC,EAAG,EAAGC,EAAG,EAAnC,eAGA,sBAAMF,SAAU,QAASC,EAAG,GAAKC,EAAG,IAApC,SACE6B,IAEF,sBAAM/B,SAAUA,EAAUC,EAAG,EAAGC,EAAG,IAAnC,eAGA,sBAAMF,SAAU,QAASC,EAAG,GAAKC,EAAG,IAApC,SACE6B,IAED0B,EAAW,CAAC,EAAG,KAAM,CAAC,GAAI,KAAM,SAChCC,OAEDD,EACA,CAAC,GAAQ,IAAJ1B,EAAU,KACf,CAAC,MAAO,IACR,SAEAiD,EAAOC,OAAO9B,KAAI,SAACvC,EAAGmB,GAAJ,OAClB,sBACC/B,SAAU,SACVF,KAAK,OACLG,EAAG,EACHC,EAAG,GAAM,IAAM6B,EAJhB,SAMEnB,EAAEkE,QAAQ,QAGZE,EAAOE,QAAQ/B,KAAI,SAACvC,EAAGmB,GAAJ,OACnB,sBACC/B,SAAU,SACVF,KAAK,MACLG,EAAG,EACHC,EAAG,IAAM,IAAM6B,EAJhB,SAMEnB,EAAEkE,QAAQ,QAIZE,EAAOtC,QAAQS,KAAI,SAACvC,EAAGmB,GAAJ,OACnB,sBACC/B,SAAU,SACVF,KAAK,OACLG,EAAG,EACHC,EAAG,IAAM,IAAM6B,EAJhB,SAMEnB,EAAEkE,QAAQ,QAGZE,EAAOG,SAAShC,KAAI,SAACvC,EAAGmB,GAAJ,OACpB,sBACC/B,SAAU,SACVF,KAAK,MACLG,EAAG,EACHC,EAAG,IAAM,IAAM6B,EAJhB,SAMEnB,EAAEkE,QAAQ,QAIb,sBACC9E,SAAU,SACVF,KAAK,OACLG,EAAG,EACHC,EAAG,KAJJ,SAME8E,EAAOI,KAAKN,QAAQ,KAEtB,sBACC9E,SAAU,SACVF,KAAK,MACLG,EAAG,EACHC,EAAG,KAJJ,SAME8E,EAAOK,MAAMP,QAAQ,KAEtBE,EAAOM,SAASnC,KAAI,SAACvC,EAAGmB,GAAJ,OACpB,sBACC/B,SAAU,SACVF,KAAK,OACLG,EAAG,KACHC,EAAG,IAAM,IAAM6B,EAJhB,SAMEnB,EAAEkE,QAAQ,QAGZE,EAAOO,SAASpC,KAAI,SAACvC,EAAGmB,GAAJ,OACpB,sBACC/B,SAAU,SACVF,KAAK,MACLG,EAAG,KACHC,EAAG,IAAM,IAAM6B,EAJhB,SAMEnB,EAAEkE,QAAQ,QAIb,sBACC9E,SAAU,SACVF,KAAK,OACLG,EAAG,KACHC,EAAG,GAJJ,SAME8E,EAAOQ,QAAQV,QAAQ,KAEzB,sBACC9E,SAAU,SACVF,KAAK,MACLG,EAAG,KACHC,EAAG,KAJJ,SAME8E,EAAOL,SAASG,QAAQ,KAE1B,sBACC9E,SAAU,SACVF,KAAK,OACLG,EAAG,KACHC,EAAG,GAJJ,SAME8E,EAAOS,QAAQX,QAAQ,KAEzB,sBACC9E,SAAU,SACVF,KAAK,MACLG,EAAG,KACHC,EAAG,KAJJ,SAME8E,EAAOU,OAAOZ,QAAQ,OAnIjB/C,MAwIX,sBAAM/B,SAAUA,EAAUC,EAAG,EAAGC,EAAG,GAAnC,eAGCuD,EAAW,CAAC,IAAM,OAAQ,CAAC,GAAI,OAAQ,SACvCA,EAAW,CAAC,GAAI,OAAQ,CAAC,MAAO,IAAK,SAErCA,EAAW,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,SAC/BM,EAAI,GAAI,IACRC,EAAK,GAAI,QAoGJ,KAzDcjC,GAhMR,IAAC9B,EAAGC,EAAG8E,KA4PlB,sBACC/E,EAAG,IACHC,EAAG,IACHR,MAAO,GACPC,OAAQ,GACRG,KAAK,OACLiB,OAAO,UAER,sBACChB,WAAW,aACXC,SAAS,OACTC,EAAG,IACHC,EAAG,IAJJ,kBAQA,sBAAMD,EAAG,IAAKC,EAAG,IAAjB,SACEkC,KAAKnB,MAAMoB,MAAQD,KAAKnB,MAAM2D,MAAQ,GACpCxC,KAAKnB,MAAMqB,MAAMqD,KAAKd,OAAOE,YAAY,GACzC,UAKP,OACC,sBAAKzE,GAAG,KAAR,UACEkC,EACCJ,KAAKnB,MAAMoB,KAAiBkC,EAAVxB,EACpB,cAAC,EAAD,W,GAxcqB6C,aCmIVC,E,kDAzId,WAAY5E,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,GAFK,E,8CAKnB,SAAW4E,EAAMC,GAEhBD,EAAKE,UAAU,UACbC,KAAKF,GACLG,QACAC,OAAO,UACPvE,KAAK,MAAM,SAAChB,GAAD,OAAOA,EAAEX,KACpB2B,KAAK,MAAM,SAAChB,GAAD,OAAOA,EAAEV,KACpB0B,KAAK,IAAK,GACVwE,MAAM,OAAQ,U,sEAGjB,kDAAAC,EAAA,wDACiDjE,KAAKnB,MAA7CvB,EADT,EACSA,MAAOC,EADhB,EACgBA,OAAQ2G,EADxB,EACwBA,QAASC,EADjC,EACiCA,MAAOC,EADxC,EACwCA,KACjCC,EAAY3D,IAAU,UAEtB4D,EAAMD,EACVN,OAAO,OACPvE,KAAK,QAASlC,GACdkC,KAAK,SAAUjC,GACfyG,MAAM,WAAY,YAChBD,OAAO,QACTvE,KAAK,QAASlC,GACdkC,KAAK,SAAUjC,GACfiC,KAAK,QAAS,QACZ+E,EAAS7D,MAEX8D,OAAO,CAACL,EAAOC,IACfK,MAAM,CAAC,EAAGnH,EAAQ,EAAI4G,IAEpBQ,EAAShE,MAEX8D,OAAO,CAACL,EAAOC,IACfK,MAAM,CAAClH,EAAS,EAAI2G,EAAS,IAE3BS,EAAQjE,MAAgBkE,MAAML,GAC9BM,EAAQnE,MAAekE,MAAMF,GACjCJ,EAAIP,OAAO,KACTvE,KAAK,QAAS,QACdA,KAAK,YAFP,sBAEmCjC,EAAS,EAAI2G,EAFhD,MAGEY,KAAKH,GAEPL,EAAIP,OAAO,KACTvE,KAAK,QAAS,QACdA,KAAK,YAAa,cAAgBlC,EAAQ,EAAI4G,GAAW,OACzDY,KAAKD,GAEPP,EAAIP,OAAO,QACTvE,KAAK,KAAM,GACXA,KAAK,MAAOjC,EAAS,GAAK,GAC1BiC,KAAK,KAAMlC,GACXkC,KAAK,MAAOjC,EAAS,GAAK,GAC1BiC,KAAK,QAAS,SAChB8E,EAAIP,OAAO,QACTvE,KAAK,MAAOlC,EAAQ,GAAK,GACzBkC,KAAK,KAAM,GACXA,KAAK,MAAOlC,EAAQ,GAAK,GACzBkC,KAAK,KAAMjC,GACXiC,KAAK,QAAS,SAEhB8E,EAAIP,OAAO,QACTvE,KAAK,KAAM,QACXA,KAAK,SAAU,QACfA,KAAK,OAAQ,QAnDhB,iD,sFAqDA,WAaC,IAbqB,IAAD,EACwCQ,KAAKnB,MAAzDvB,EADY,EACZA,MAAOC,EADK,EACLA,OAAQ2G,EADH,EACGA,QAASC,EADZ,EACYA,MAAOC,EADnB,EACmBA,KAAMW,EADzB,EACyBA,EAAGjH,EAD5B,EAC4BA,EAAGkH,EAD/B,EAC+BA,KAC/CT,EAAS7D,MAEX8D,OAAO,CAACL,EAAOC,IACfK,MAAM,CAAC,EAAGnH,EAAQ,EAAI4G,IAEpBQ,EAAShE,MAEX8D,OAAO,CAACL,EAAOC,IACfK,MAAM,CAAClH,EAAS,EAAI2G,EAAS,IACzBI,EAAM5D,IAAU,SAASuE,OAAO,OAClCC,EAAU,GACLvF,EAAI,EAAGA,EAAIoF,EAAEnF,OAAQD,IAC7BuF,EAAQpF,KAAK,CACZjC,EAAG0G,EAAOQ,EAAEpF,IACZ7B,EAAG4G,EAAO5G,EAAE6B,MAId,IADA,IAAIsE,EAAI,GACCtE,EAAI,EAAGA,EAAIoF,EAAEnF,OAAQD,IAC7BsE,EAAEnE,KAAK,CAACyE,EAAOQ,EAAEpF,IAAK+E,EAAOM,EAAKrF,MAEnC2E,EAAIV,UAAU,UAAUuB,SACxBnF,KAAKoF,WAAWd,EAAKY,GAErBZ,EAAIW,OAAO,SACTzF,KAAK,IAAKkB,MAAUuD,IACpBzE,KAAK,SAAU,SACfA,KAAK,OAAQ,U,oBAiChB,WACC,OAAO,qBAAKtB,GAAG,a,GAtISsF,aC2FX6B,E,kDA1Fd,WAAYxG,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,GAFK,E,qDAInB,WACC,IAAMuF,EAAY3D,IAAU,UACtBnD,EAAS,IACTD,EAAQ,IAEViH,EAAS7D,MAEX8D,OAAO,CAAC,GAAI,IACZC,MAAM,CAAC,EAAGnH,MAERoH,EAAShE,MAEX8D,OAAO,CAAC,EAAG,IACXC,MAAM,CAAClH,IAAsB,IACzB+G,EAAMD,EACVN,OAAO,OACPvE,KAAK,QAASlC,GACdkC,KAAK,SAAUjC,GACfyG,MAAM,WAAY,WAEpBM,EAAIP,OAAO,QACTvE,KAAK,QAASlC,GACdkC,KAAK,SAAUjC,GACfiC,KAAK,QAAS,QAChB,IAAImF,EAAQjE,MAAgBkE,MAAML,GAC9BM,EAAQnE,MAAekE,MAAMF,GACjCJ,EAAIP,OAAO,KACTvE,KAAK,QAAS,QACdA,KAAK,KAAM,KACXA,KAAK,YAHP,sBAGmCjC,IAHnC,MAIEuH,KAAKH,GAEPL,EAAIP,OAAO,KACTvE,KAAK,QAAS,QACdA,KAAK,KAAM,KACXA,KAAK,YAAa,oBAClBsF,KAAKD,EAAMS,MAAM,IACnBhB,EAAIP,OAAO,QACTvE,KAAK,KAAM,QACXA,KAAK,SAAU,QACfA,KAAK,OAAQ,U,gCAGhB,WAoBC,IApBqB,IAAD,EACQQ,KAAKnB,MAAzB0G,EADY,EACZA,UAIFnB,GALc,EACDb,KAINgC,EAAU3F,OAAS,GAE5B2E,EAAS7D,MAEX8D,OAAO,CALK,EAKGJ,IACfK,MAAM,CAAC,EAAGnH,MAERkI,EAAU9E,IAAO6E,GACjBE,EAAU/E,IAAO6E,GACjBb,EAAShE,MAEX8D,OAAO,CAACgB,EAASC,IACjBhB,MAAM,CAAClH,IAAsB,IACzB+G,EAAM5D,IAAU,UAAUuE,OAAO,OACnChB,EAAI,GACCtE,EAAI,EAAGA,EAAI4F,EAAU3F,OAAQD,IACrCsE,EAAEnE,KAAK,CAACyE,EAAO5E,GAAI+E,EAAOa,EAAU5F,MAGrC,IAAIgF,EAAQjE,MAAgBkE,MAAML,GAC9BM,EAAQnE,MAAekE,MAAMF,GACjCJ,EAAIW,OAAO,MACTzF,KAAK,YADP,sBACmCjC,IADnC,MAEEuH,KAAKH,EAAMW,MAAM,IAEnBhB,EAAIW,OAAO,MACTzF,KAAK,YAAa,oBAClBsF,KAAKD,EAAMS,MAAM,IACnBhB,EAAIW,OAAO,SACTzF,KAAK,IAAKkB,MAAUuD,IACpBzE,KAAK,SAAU,SACfA,KAAK,OAAQ,U,oBAEhB,WACC,OAAO,qBAAKtB,GAAG,c,GAvFEsF,aC8DJkC,E,kDAvDd,WAAY7G,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZyC,MAAO,EACPkB,OAAQ,GAET,EAAKkD,QAAU,EAAKA,QAAQxG,KAAb,gBANG,E,2CAQnB,SAAQoC,GACP,IACMkB,EADiB,EACAlB,EADQ,EAE/BvB,KAAK4F,SAAS,CAAErE,QAAOkB,a,+BAExB,WACCzC,KAAK2F,QAAQ,M,oBAGd,WAAU,IAAD,OACR,OACC,cAACE,EAAA,EAAD,CAAKC,QAAQ,OAAb,SACC,cAACD,EAAA,EAAD,CAAKE,SAAU,IAAf,SACC,cAACC,EAAA,EAAD,CAAMC,QAAQ,WAAd,SACC,eAACC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,CACCC,MAAOpG,KAAKlB,MAAMyC,MAClB8E,SAAU,SAACxG,EAAGyG,GACb,EAAKX,QAAQW,IAEdrI,MAAM,cAEP,eAACsI,EAAA,EAAD,CAAYN,QAAQ,KAApB,eAEC,cAACM,EAAA,EAAD,CAAYtI,MAAM,YAAYgI,QAAQ,SAAtC,SACEjG,KAAKlB,MAAMyC,QAHd,SAMC,cAACgF,EAAA,EAAD,CAAYtI,MAAM,YAAYgI,QAAQ,SAAtC,SACEjG,KAAKlB,MAAMyC,QAPd,UASS,IACR,cAACgF,EAAA,EAAD,CACCvC,MAAO,CAAE/F,MAAO,WAChBgI,QAAQ,SAFT,SAIEjG,KAAKlB,MAAM2D,yB,GA7CQe,aC6MdgD,E,kDA3Md,WAAY3H,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZyC,MAAO,EACPkF,QAAS,EACTC,QAAS,EACTC,QAAS,EACTrG,QAAS,GACTsG,OAAQ,IAET,EAAKjB,QAAU,EAAKA,QAAQxG,KAAb,gBACf,EAAK0H,WAAa,EAAKA,WAAW1H,KAAhB,gBAXA,E,2CAanB,SAAQoC,GAAQ,IAAD,EACcvB,KAAKlB,MAAzBwB,EADM,EACNA,QAASsG,EADH,EACGA,OACXE,EAAU,SAACjJ,EAAGkJ,EAAGC,GAAP,OAAaD,EAAIlJ,EAAImJ,GAG/BP,EAAUK,EAAQvF,EAAOjB,EAAQ,GAAIsG,EAAO,IAAIlE,QAAQ,GACxDgE,EAAUI,EAAQL,EAASnG,EAAQ,GAAIsG,EAAO,IAAIlE,QAAQ,GAC1DiE,EAAUG,EAAQJ,EAASpG,EAAQ,GAAIsG,EAAO,IAAIlE,QAAQ,GAChE1C,KAAK4F,SAAS,CAAErE,QAAOkF,UAASC,UAASC,c,4BAE1C,SAAe/G,GAEd,IADA,IAAIqH,EAAM,IAAIC,MAAMtH,GACXD,EAAI,EAAGA,EAAIsH,EAAIrH,OAAQD,IAC/BsH,EAAItH,IAAMqB,KAAKmG,SAASzE,QAAQ,GAEjC,OAAOuE,I,+DAER,8BAAAhD,EAAA,sDACO3D,EAAUN,KAAKoH,eAAe,GAC9BR,EAAS5G,KAAKoH,eAAe,GACnCpH,KAAK4F,SAAS,CAAEtF,UAASsG,WAH1B,gD,4HAKA,sBAAA3C,EAAA,sEACOjE,KAAK6G,aADZ,OAEC7G,KAAK2F,QAAQ,IAFd,gD,0EAKA,WAAU,IAAD,SAQJ3F,KAAKlB,MANRyC,EAFO,EAEPA,MACAkF,EAHO,EAGPA,QACAC,EAJO,EAIPA,QACAC,EALO,EAKPA,QACArG,EANO,EAMPA,QACAsG,EAPO,EAOPA,OAEKS,EAAa9F,EAAMmB,QAAQ,GAC3B4E,EAAY,CACjB,CAAE7E,OAAQgE,EAASxI,MAAO,WAC1B,CAAEwE,OAAQiE,EAASzI,MAAO,WAC1B,CAAEwE,OAAQkE,EAAS1I,MAAO,SAE3B,OACC,cAAC4H,EAAA,EAAD,CAAKC,QAAQ,OAAb,SACC,cAACD,EAAA,EAAD,CAAKvI,MAAO,IAAZ,SACC,eAAC0I,EAAA,EAAD,CAAMC,QAAQ,WAAd,UACC,eAACC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,CACCC,MAAOpG,KAAKlB,MAAMyC,MAClB8E,SAAU,SAACxG,EAAGyG,GACb,EAAKX,QAAQW,IAEdrI,MAAM,cAGP,cAAC4H,EAAA,EAAD,CAAKC,QAAQ,OAAOyB,eAAe,SAAnC,SACC,cAAC1B,EAAA,EAAD,CAAK0B,eAAe,SAApB,SACC,sBAAKjK,MAAO,IAAKC,OAAQ,GAAzB,UACC,sBACCiB,EAAC,WAAM,GAAN,QAAgB,IAAhB,OACDG,OAAQ,UACR6I,gBAAgB,QAChB9I,YAAa,EAAI4B,EAAQ,GAAK,KAE/B,sBAAMzC,EAAG,GAAIC,EAAG,GAAIJ,KAAM,UAA1B,SACE2J,IAEDC,EAAUvG,KAAI,SAACvC,EAAGmB,GAAJ,OACd,8BACC,sBACC9B,EAAG,IAAM,IAAM8B,EACf7B,EAAG,EACHR,MAAO,GACPC,OAAQ,GACRG,KAAK,cAEN,sBAAMG,EAAG,IAAM,IAAM8B,EAAG7B,EAAG,GAA3B,SACE6B,EAAI,IAEN,sBACCnB,EAAC,WAAM,IAAM,IAAMmB,EAAlB,gBACA,IAAM,IAAMA,EADZ,OAGDhB,OAAQH,EAAEP,MACVuJ,gBAAgB,QAChB9I,YACCiB,EAAI,EACD,EACAW,EACCX,EAAI,GAEL,GACA,IAGL,sBACC9B,EAAG,IAAM,IAAM8B,EACf7B,EAAG,GACHJ,KAAMc,EAAEP,MAHT,SAKEO,EAAEiE,sBAOT,eAAC8D,EAAA,EAAD,CAAYN,QAAQ,KAApB,qBAEC,cAACM,EAAA,EAAD,CAAYtI,MAAM,YAAYgI,QAAQ,SAAtC,SACEoB,IAHH,OAKM/G,EAAQ,GALd,IAMC,cAACiG,EAAA,EAAD,CAAYtI,MAAM,YAAYgI,QAAQ,SAAtC,SACEoB,IAPH,OASMT,EAAO,GATb,KASmB,IAClB,cAACL,EAAA,EAAD,CACCvC,MAAO,CAAE/F,MAAO,WAChBgI,QAAQ,SAFT,SAIEjG,KAAKlB,MAAM2H,aAId,eAACF,EAAA,EAAD,CAAYN,QAAQ,KAApB,qBAEC,cAACM,EAAA,EAAD,CACCvC,MAAO,CAAE/F,MAAO,WAChBgI,QAAQ,SAFT,SAIEjG,KAAKlB,MAAM2H,UANd,OAQMnG,EAAQ,GARd,IASC,cAACiG,EAAA,EAAD,CACCvC,MAAO,CAAE/F,MAAO,WAChBgI,QAAQ,SAFT,SAIEjG,KAAKlB,MAAM2H,UAbd,OAeMG,EAAO,GAfb,KAemB,IAClB,cAACL,EAAA,EAAD,CACCvC,MAAO,CAAE/F,MAAO,WAChBgI,QAAQ,SAFT,SAIEjG,KAAKlB,MAAM4H,aAGd,eAACH,EAAA,EAAD,CAAYN,QAAQ,KAApB,qBAEC,cAACM,EAAA,EAAD,CACCvC,MAAO,CAAE/F,MAAO,WAChBgI,QAAQ,SAFT,SAIEjG,KAAKlB,MAAM4H,UANd,OAQMpG,EAAQ,GARd,IASC,cAACiG,EAAA,EAAD,CACCvC,MAAO,CAAE/F,MAAO,WAChBgI,QAAQ,SAFT,SAIEjG,KAAKlB,MAAM4H,UAbd,OAeME,EAAO,GAfb,IAekB,IACjB,cAACL,EAAA,EAAD,CACCvC,MAAO,CAAE/F,MAAO,QAChBgI,QAAQ,SAFT,SAIEjG,KAAKlB,MAAM6H,gBAIf,cAACc,EAAA,EAAD,UACC,cAACC,EAAA,EAAD,CACCC,KAAK,QACLxG,QAAO,sBAAE,sBAAA8C,EAAA,sEACF,EAAK4C,aADH,2CAFV,iD,GA3LsBrD,aCwHdoE,EA/HK,kBACnB,cAAC/B,EAAA,EAAD,CAAK0B,eAAe,SAASzB,QAAQ,OAAO+B,UAAW,EAAvD,SACC,cAAChC,EAAA,EAAD,CAAKvI,MAAO,IAAZ,SACC,eAAC0I,EAAA,EAAD,CAAMhC,MAAO,CAAEE,QAAS,OAAxB,UACC,eAACgC,EAAA,EAAD,WACC,eAACK,EAAA,EAAD,CAAYN,QAAQ,KAAK6B,cAAY,EAArC,qBACS,gDADT,OAGA,cAACvB,EAAA,EAAD,CAAYN,QAAQ,YAAY6B,cAAY,EAA5C,+EAKD,eAAC5B,EAAA,EAAD,WACC,cAACK,EAAA,EAAD,CAAYN,QAAQ,KAAK6B,cAAY,EAArC,sBAIA,cAACvB,EAAA,EAAD,CAAYN,QAAQ,KAAK6B,cAAY,EAArC,6CAGA,cAACvB,EAAA,EAAD,CAAYN,QAAQ,KAAK6B,cAAY,EAArC,oCAGA,eAACvB,EAAA,EAAD,CAAYN,QAAQ,KAAK6B,cAAY,EAArC,qDAC0C,IACzC,gDAFD,OAIA,cAACvB,EAAA,EAAD,CAAYN,QAAQ,KAAK6B,cAAY,EAArC,0CAID,eAAC5B,EAAA,EAAD,WACC,cAACK,EAAA,EAAD,CAAYN,QAAQ,KAAK6B,cAAY,EAArC,oCAGA,eAACvB,EAAA,EAAD,CAAYN,QAAQ,QAAQ6B,cAAY,EAAxC,eACG,wCADH,mDAEY,yCAFZ,OAIA,cAACvB,EAAA,EAAD,CAAYN,QAAQ,QAAQ6B,cAAY,EAAxC,8JAKA,cAACjC,EAAA,EAAD,CAAKC,QAAQ,OAAOyB,eAAe,SAASM,UAAW,EAAvD,SACC,cAAC,EAAD,MAED,cAAChC,EAAA,EAAD,CACCC,QAAQ,OACRyB,eAAe,SACfQ,aAAc,EAHf,SAKC,cAACxB,EAAA,EAAD,CAAYN,QAAQ,UAApB,oDAID,eAACM,EAAA,EAAD,CAAYN,QAAQ,QAAQ6B,cAAY,EAAxC,uHAEoD,IACnD,mDAHD,OAKA,eAACvB,EAAA,EAAD,CAAYN,QAAQ,QAAQ6B,cAAY,EAAxC,UACC,cAACvB,EAAA,EAAD,CAAYN,QAAQ,SAASjC,MAAO,CAAE/F,MAAO,QAA7C,wCADD,qGAOA,cAACsI,EAAA,EAAD,CAAYN,QAAQ,QAAQ6B,cAAY,EAAxC,wQAOA,cAACvB,EAAA,EAAD,CAAYN,QAAQ,QAAQ6B,cAAY,EAAxC,4QAQA,cAACjC,EAAA,EAAD,CAAKC,QAAQ,OAAOyB,eAAe,SAASM,UAAW,EAAvD,SACC,cAAC,EAAD,MAED,cAAChC,EAAA,EAAD,CACCC,QAAQ,OACRyB,eAAe,SACfQ,aAAc,EAHf,SAKC,cAACxB,EAAA,EAAD,CAAYN,QAAQ,UAApB,uEAMD,cAACM,EAAA,EAAD,CAAYN,QAAQ,QAAQ6B,cAAY,EAAxC,yVAUD,cAAC5B,EAAA,EAAD,UACC,cAACK,EAAA,EAAD,CAAYN,QAAQ,KAAK6B,cAAY,EAArC,6BAID,cAAC5B,EAAA,EAAD,UACC,eAACK,EAAA,EAAD,CAAYN,QAAQ,KAAK6B,cAAY,EAArC,qBACS,gDADT,SAID,cAAC5B,EAAA,EAAD,UACC,cAACK,EAAA,EAAD,CAAYN,QAAQ,KAAK6B,cAAY,EAArC,2CCtHQE,EAAb,WACC,WAAY1H,EAAS0C,GAAO,oBAC3BhD,KAAKM,QAAUA,EACfN,KAAKgD,KAAOA,EAHd,wCAMC,SAAKiF,EAAQC,GACZ,OAAOD,EAAOlH,KAAI,SAACoH,EAAMxI,GACxB,OAAOwI,EAAOD,EAAOvI,QARxB,mBAWC,SAAMyI,EAASC,GACd,OAAOrI,KAAKsI,KAAKF,EAASC,KAZ5B,iBAcC,SAAI5I,GACH,OAAOA,EAAM8I,QAAO,SAACtE,EAAG+C,GAAJ,OAAU/C,EAAI+C,OAfpC,kBAiBC,SAAK1D,EAAQkF,GAEZ,IADA,IAAIC,EAAY,GACP9I,EAAI,EAAGA,EAAI6I,EAAW7I,IAC9B8I,EAAU3I,KAAKwD,GAEhB,OAAOmF,IAtBT,oBAwBC,SAAOlH,GACN,OAAOA,IAzBT,qBAiCC,SAAQsB,EAAQ6F,GAAY,IAEnBpI,EAAkBN,KAAlBM,QAAS0C,EAAShD,KAATgD,KACTsF,EAActI,KAAdsI,KAAMK,EAAQ3I,KAAR2I,IAERzF,EAAWoF,EAAKzF,EAAQvC,GACxB8C,EAAUuF,EAAIzF,GAAYF,EAC1BK,EAAUqF,EAAWtF,GAG3BpD,KAAK6C,OAASA,EACd7C,KAAKkD,SAAWA,EAChBlD,KAAKoD,QAAUA,EACfpD,KAAKqD,QAAUA,EACfrD,KAAKyC,OAASY,IA/ChB,sBAuDC,SAASC,EAAQoF,GAAY,IAEpB7F,EAA6B7C,KAA7B6C,OAAQvC,EAAqBN,KAArBM,QAAS+C,EAAYrD,KAAZqD,QACjBuF,EAAoB5I,KAApB4I,KAAMN,EAActI,KAAdsI,KAAMK,EAAQ3I,KAAR2I,IAEdpG,EAAWmG,EAAWrF,GAAWC,EACjCH,EAAWyF,EAAKrG,EAAUM,EAAOjD,QACjCqD,EAAQV,EACRQ,EAAWuF,EAAKnF,EAAUN,GAC1BC,EAAUwF,EAAKnF,EAAU7C,GACzBuI,EAAaF,EAAI7F,GAGvB9C,KAAKsD,OAASA,EACdtD,KAAKuC,SAAWA,EAChBvC,KAAKmD,SAAWA,EAChBnD,KAAKiD,MAAQA,EACbjD,KAAK+C,SAAWA,EAChB/C,KAAK8C,QAAUA,EACf9C,KAAK6I,WAAaA,MA1EpB,KCCaC,EAAb,uFAMC,SAAQ9D,EAAMlH,GACb,IAAMiL,EAAU/D,EAAOlH,EACjBkL,EAAchJ,KAAKyC,OAASzB,KAAKC,IAAI+D,EAAOlH,EAAG,GAErDkC,KAAK+I,QAAUA,EACf/I,KAAKgJ,WAAaA,EAClBhJ,KAAKyC,OAASuG,IAZhB,sBAkBC,WACChJ,KAAK8C,QAAU,EAAI9C,KAAK+I,YAnB1B,KCGaE,EAAb,WAEC,WAAYC,EAAO5I,EAASsG,GAAS,oBACpC5G,KAAKD,MAAQ,GACbC,KAAKuD,KAAO,IAAIuF,EAChB9I,KAAKkJ,MAAQA,EAGb,IAAK,IAAIC,EAAQ,EAAGA,EAAQ7I,EAAQV,OAAQuJ,IAAS,CAEpD,IADA,IAAIC,EAAQ,GACHxG,EAAS,EAAGA,EAAStC,EAAQ6I,GAAOvJ,OAAQgD,IACpDwG,EAAMtJ,KACL,IAAIkI,EAAO1H,EAAQ6I,GAAOvG,GAASgE,EAAOuC,GAAOvG,KAGnD5C,KAAKD,MAAMD,KAAKsJ,IAfnB,uCAmBC,SAAI3J,GACH,OAAOA,EAAM8I,QAAO,SAACtE,EAAG+C,GAAJ,OAAU/C,EAAI+C,OApBpC,iBAsBC,SAAIiB,EAAQC,GACX,IAAMmB,EAAepB,EAAOrI,OACtB0J,EAAepB,EAAOtI,OAC5B,GAAI0J,GAAgBD,EAInB,OAHAE,QAAQC,MAAR,UACIH,EADJ,2BACmCC,EADnC,8BAGO,GAGP,IADA,IAAIG,EAAS,IAAIvC,MAAMmC,GACd1J,EAAI,EAAGA,EAAIsI,EAAOrI,OAAQD,IAClC8J,EAAO9J,GAAKsI,EAAOtI,GAAKuI,EAAOvI,GAEhC,OAAO8J,IAnCV,mBAsCC,SAAM7J,GAEL,IADA,IAAI6J,EAAS,IAAIvC,MAAMtH,GACdD,EAAI,EAAGA,EAAIC,EAAQD,IAC3B8J,EAAO9J,GAAK,EAEb,OAAO8J,IA3CT,mBA6CC,SAAMlI,GACL,OAAOA,EAAQ,EAAI,EAAI,IA9CzB,qBAgDC,SAAQA,GACP,OAAO,IAjDT,kBAoDC,SAAKA,GACJ,OAAOP,KAAK0I,IAAI,EAAGnI,KArDrB,oBAwDC,SAAOA,GACN,OAAOA,IAzDT,qBAiEC,SAAQA,EAAOoI,GAKd,IAJA,IAAI9G,EAAS,CAACtB,GACRqI,EAAY5J,KAAKD,MAAMH,OAGpBuJ,EAAQ,EAAGA,EAAQS,EAAY,EAAGT,IAAS,CAGnD,IADA,IAAIU,EAAU,GACLjH,EAAS,EAAGA,EAAS5C,KAAKD,MAAMoJ,GAAOvJ,OAAQgD,IAEvD5C,KAAKD,MAAMoJ,GAAOvG,GAAQkH,QAAQjH,EAAQ7C,KAAK+J,MAC/CF,EAAQ/J,KAAKE,KAAKD,MAAMoJ,GAAOvG,GAAQH,QAIxCI,EAASgH,EAEV7J,KAAKD,MAAM6J,EAAY,GAAG,GAAGE,QAAQjH,EAAQ7C,KAAKgK,QAClDhK,KAAKgF,KAAOhF,KAAKD,MAAM6J,EAAY,GAfd,GAe+BnH,OACpDzC,KAAKuD,KAAKuG,QAAQ9J,KAAKgF,KAAM2E,KApF/B,sBAyFC,WAC6B3J,KAApB2I,IADG,IACEhH,EAAe3B,KAAf2B,IAAKsI,EAAUjK,KAAViK,MAClBjK,KAAKuD,KAAKnB,WACV,IAAI8H,EAAU,CAAClK,KAAKuD,KAAKT,SACnB8G,EAAY5J,KAAKD,MAAMH,OAG7BI,KAAKD,MAAM6J,EAAY,GADF,GACmBxH,SACvC8H,EAFoB,GAGpBlK,KAAKmK,SAEND,EAAUlK,KAAKD,MAAM6J,EAAY,GALZ,GAK6B9G,QAmBlD,IAAK,IAAIqG,EAAQS,EAAY,EAAGT,GAAS,EAAGA,IAAS,CAEpD,IADA,IAAIrG,EAAUmH,EAAMjK,KAAKD,MAAMoJ,GAAO,GAAGtG,OAAOjD,QACvCgD,EAAS,EAAGA,EAAS5C,KAAKD,MAAMoJ,GAAOvJ,OAAQgD,IACvD5C,KAAKD,MAAMoJ,GAAOvG,GAAQR,SAAS8H,EAAQtH,GAAS5C,KAAKoK,OACzDtH,EAAUnB,EAAImB,EAAS9C,KAAKD,MAAMoJ,GAAOvG,GAAQE,SAElDoH,EAAUpH,KA7Hb,oBAoIC,SAAOuH,GAIN,IAFA,IAAMC,EAAK,SAAC9I,EAAQ6I,EAAIE,GAAb,OAAyB/I,EAAS6I,EAAKE,GAEzCpB,EAAQ,EAAGA,EAAQnJ,KAAKD,MAAMH,OAAQuJ,IAC9C,IAAK,IAAIvG,EAAS,EAAGA,EAAS5C,KAAKD,MAAMoJ,GAAOvJ,OAAQgD,IACvD,IACC,IAAIjD,EAAI,EACRA,EAAIK,KAAKD,MAAMoJ,GAAOvG,GAAQG,SAASnD,OACvCD,IACC,CACD,IAAM6K,EAAaF,EAClBtK,KAAKD,MAAMoJ,GAAOvG,GAAQtC,QAAQX,GAClC0K,EACArK,KAAKD,MAAMoJ,GAAOvG,GAAQG,SAASpD,IAE9B8K,EAAUH,EACftK,KAAKD,MAAMoJ,GAAOvG,GAAQI,KAC1BqH,EACArK,KAAKD,MAAMoJ,GAAOvG,GAAQK,OAI3BjD,KAAKD,MAAMoJ,GAAOvG,GAAQtC,QAAQX,GAAK6K,EACvCxK,KAAKD,MAAMoJ,GAAOvG,GAAQI,KAAKrD,GAAK8K,KA5JzC,6BAkKC,SAAgB7H,EAAQuG,EAAOuB,EAAQf,GAEtC,IAAMgB,EAAa3K,KAAKD,MAAMoJ,GAAOvG,GAAQH,OAASiI,EACtD1K,KAAKD,MAAMoJ,GAAOvG,GAAQH,OAASkI,EAInC,IADA,IAAI9H,EAAS,GACJyD,EAAI,EAAGA,EAAItG,KAAKD,MAAMoJ,GAAOvJ,OAAQ0G,IAC7CzD,EAAO/C,KAAKE,KAAKD,MAAMoJ,GAAO7C,GAAG7D,QAIlC,IADA,IAAMmH,EAAY5J,KAAKD,MAAMH,OACpBS,EAAI8I,EAAQ,EAAG9I,EAAIuJ,EAAY,EAAGvJ,IAAK,CAG/C,IADA,IAAIwJ,EAAU,GACLvD,EAAI,EAAGA,EAAItG,KAAKD,MAAMM,GAAGT,OAAQ0G,IAEzCtG,KAAKD,MAAMM,GAAGiG,GAAGwD,QAAQjH,EAAQ7C,KAAK+J,MACtCF,EAAQ/J,KAAKE,KAAKD,MAAMM,GAAGiG,GAAG7D,QAI/BI,EAASgH,EAEV7J,KAAKD,MAAM6J,EAAY,GAAG,GAAGE,QAAQjH,EAAQ7C,KAAKgK,QAClDhK,KAAKgF,KAAOhF,KAAKD,MAAM6J,EAAY,GAAG,GAAGnH,OACzCzC,KAAKuD,KAAKuG,QAAQ9J,KAAKgF,KAAM2E,OA5L/B,KCEO,SAASiB,EAAkBC,EAAU3B,GAG3C,IAFA,IAAIC,EAAQ,GAEH9I,EAAI,EAAGA,EAAIwK,EAASjL,OAAQS,IAAK,CAKzC,IAHA,IAAIyK,EAAY5B,EAAM7I,EAAI,GACtB0K,EAAY,GAEPC,EAAI,EAAGA,EAAIF,EAAWE,IAAK,CAGnC,IAFA,IAAI1K,EAAU,GAELyG,EAAIiE,EAAGjE,EAAI8D,EAASxK,GAAGT,OAAQmH,GAAK+D,EAC5CxK,EAAQR,KAAK+K,EAASxK,GAAG0G,IAE1BgE,EAAUjL,KAAKQ,GAEhB6I,EAAMrJ,KAAKiL,GAEZ,OAAO5B,EAQD,SAAS8B,EAAchE,EAAKiE,GAClC,IAAK,IAAIvL,EAAI,EAAGA,EAAIsH,EAAIrH,OAAQD,IAC/B,IAAK,IAAIE,EAAI,EAAGA,EAAIoH,EAAItH,GAAGC,OAAQC,IAClCoH,EAAItH,GAAGE,IAAMoH,EAAItH,GAAGE,GAAG6C,QAAQwI,GAGjC,OAAOjE,EAQD,SAAS9G,EAAQV,GAEvB,IADA,IAAIC,EAAgB,GACXC,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,IACjC,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAME,GAAGC,OAAQC,IACpCH,EAAcI,KAAKL,EAAME,GAAGE,IAG9B,OAAOH,EAQD,SAASyL,EAAazB,GAC5B,OAAO1I,KAAKoK,MAAMpK,KAAKmG,SAAWnG,KAAKoK,MAAM1B,IAQvC,SAAS2B,EAAcC,GAC7B,OAAOpE,MAAMqE,KAAKD,EAAOE,Y,WC3ClBrL,GAA8CsL,EAA9CtL,QAASyK,GAAqCa,EAArCb,kBAAmBS,GAAkBI,EAAlBJ,cAq0BrBK,G,kDAl0Bd,WAAY7M,GAAQ,IAAD,8BAClB,cAAMA,IAyDP8M,KA1DmB,uCA0DZ,WAAOC,GAAP,+BAAA3H,EAAA,6DACA4H,EAAQ,SAACC,GAAD,OAAQ,IAAIC,SAAQ,SAACC,GAAD,OAASC,WAAWD,EAAKF,OACrDA,EAAK,IACLzL,EAAI,EAAKvB,MAAMoK,MAAMX,QAAO,SAACtE,EAAG+C,GAAJ,OAAU/C,EAAI+C,KAAK,EAErD,EAAKpB,SAAL,2BACI,EAAK9G,OADT,IAECoN,SAAU,UACVC,UAAW,cACX3J,MAAO,EACPH,MAAO+J,OAVF,SAYAP,EAAMC,GAZN,OAcN,EAAKlG,SAAS,CAAEpD,MAAO,IACnB7C,EAAI,EAfF,YAgBC,EAAKb,MAAM0D,MAAQnC,GAhBpB,wBAiBDgM,EAAO,EAAKvN,MAAMoK,MAAMvJ,GAjBvB,UAkBCkM,EAAMC,GAlBP,QAmBL,EAAKlG,SAAS,CACbpD,MAAQ,EAAK1D,MAAM0D,OAAS6J,IAE7B1M,IAtBK,wCAwBAkM,EAAMC,GAxBN,eAyBN,EAAKlG,SAAS,CACbpD,MAAQ,EAAK1D,MAAM0D,OAAS,IA1BvB,UA4BAqJ,EAAMC,GA5BN,eA6BN,EAAKlG,SAAS,CACbpD,MAAQ,EAAK1D,MAAM0D,OAAS,IAG7B,EAAKoD,SAAS,CAAEvD,MAAO+J,MAEvB,EAAKxG,SAAL,2BACI,EAAK9G,OADT,IAECqN,UAAW,eACXD,SAAU,cAtCL,UAyCAL,EAAMC,GAzCN,QA0CN,EAAKlG,SAAS,CAAEvD,MAAOhC,IAed8I,EAAQyC,EAAG7L,MAAMH,OAAS,EAzD7B,aAyDgCuJ,GAAS,GAzDzC,iBA2DAvG,EAASgJ,EAAG7L,MAAMoJ,GAAOvJ,OAAS,EA3DlC,aA4DJgD,GAAU,GA5DN,iBA+DKjD,EAAI,EA/DT,aA+DYA,EAAI,KA/DhB,wBAgEHiM,EAAGU,gBAAgB1J,EAAQuG,EAAOxJ,EAAG,EAAKb,MAAM+E,KAAK/F,EAAE,IACvD,EAAK8H,SAAS,CACb1F,MAAO0L,IAlEL,UAoEGC,EAAM,GApET,QA+DsBlM,GAAK,KA/D3B,wBAsEKA,EAAI,IAtET,aAsEeA,EAAI,GAtEnB,wBAuEHiM,EAAGU,gBAAgB1J,EAAQuG,GAAQxJ,EAAG,EAAKb,MAAM+E,KAAK/F,EAAE,IACxD,EAAK8H,SAAS,CACb1F,MAAO0L,IAzEL,UA2EGC,EAAM,GA3ET,QAsEsBlM,GAAK,KAtE3B,yCA6EEkM,EAAM,GA7ER,QA8EJ,EAAKjG,SAAS,CACbvD,MAAQ,EAAKvD,MAAMuD,OAAS,IA/EzB,QA6DJO,IA7DI,wBAyD4CuG,IAzD5C,yCAoFA0C,EAAM,KApFN,QAqFN,EAAKjG,SAAS,CAAEuG,UAAW,eArFrB,4CA1DY,sDAGlB,EAAKrN,MAAQ,CACZyE,KAAM,KACNgJ,aAAa,EACbrD,MAAO,CAAC,EAAG,EAAG,EAAG,GACjBsD,MAAO,EACPxH,KAAM,GACNyH,WAAY,GACZC,YAAa,GACbrC,GAAI,IACJxG,KAAM,CACLkB,EAAG,GACHjH,EAAG,IAEJ8G,MAAO,EACP+H,MAAO,MACPC,SAAU,CACTjM,SAAS,EACTkM,MAAO,GAERrK,MAAO,EACPH,MAAO+J,IACPU,UAAW,EACX5L,MAAO,GACPZ,QAAS,GACTQ,MAAO,GACP8K,GAAI,KACJ3L,MAAM,EACNC,MAAO,KACPjB,OAAO,EACPkN,UAAW,aACXD,SAAU,UACVa,UAAW,EACXC,WAAY,EACZC,YAAa,EACb1H,UAAW,IAKZ,EAAK2H,IAAM,EAAKA,IAAI/N,KAAT,gBAEX,EAAKgO,cAAgB,EAAKA,cAAchO,KAAnB,gBAErB,EAAKiO,OAAS,EAAKA,OAAOjO,KAAZ,gBAEd,EAAKkO,MAAQ,EAAKA,MAAMlO,KAAX,gBACb,EAAKmO,gBAAkB,EAAKA,gBAAgBnO,KAArB,gBACvB,EAAKoO,MAAQ,EAAKA,MAAMpO,KAAX,gBACb,EAAKqO,WAAa,EAAKA,WAAWrO,KAAhB,gBAClB,EAAKsO,gBAAkB,EAAKA,gBAAgBtO,KAArB,gBACvB,EAAKuO,cAAgB,EAAKA,cAAcvO,KAAnB,gBACrB,EAAKwO,kBAAoB,EAAKA,kBAAkBxO,KAAvB,gBACzB,EAAKwM,KAAO,EAAKA,KAAKxM,KAAV,gBAvDM,E,qDAiJnB,SAAkB+J,GACjB,GAAKlJ,KAAKlB,MAAM8N,SAASjM,SAyFlB,GAAIX,KAAKlB,MAAM8N,SAASjM,QAAS,CACvC,IAAIiN,EAAmBzN,GAAQH,KAAKlB,MAAM4N,aAC1C1M,KAAK4F,SAAS,CAAEtF,QAASsN,SA3FQ,CACjC,IAEIrJ,EAAS7D,MAAiB8D,OAAO,CAAC,EAAG,MAAMC,MAAM,CAAC,GAAI,MACtDC,EAAShE,MAAiB8D,OAAO,CAAC,EAAG,MAAMC,MAAM,CAAC,IAAK,IACvDN,EAAQ,CAAEtG,EAAG,GAAaC,EAAG,KAC7BsG,EAAO,CAAEvG,EAAG,IAAcC,EAAG,KAC3B2C,EAAOC,MAEX7C,GAAE,SAACW,GAAD,OAAOA,EAAEX,EAAIgQ,MACf/P,GAAE,SAACU,GAAD,OAAOA,EAAEV,EAAIgQ,MAGXC,EAAkB,CAAC,EAAG,GAAI,GAAI,GAAI,GACpCC,EAAK,GACLC,EAAS,GACbD,EAAGlO,KAAK,CAACqE,IACT8J,EAAOnO,KAAKqE,GACZ,IAAK,IAAIgF,EAAQ,EAAGA,EAAQD,EAAMtJ,OAAS,EAAGuJ,IAAS,CAEtD,IADA,IAAIC,EAAQ,GACHxG,EAAS,EAAGA,EAASsG,EAAMC,GAAQvG,IAAU,CAErD,IAAIsL,EAAQ,CACXrQ,EAAG0G,EAAOwJ,EAAgB5E,IAAU0E,GACpC/P,EAAG4G,EAAO,GAAc,GAAT9B,GAAekL,IAE/B1E,EAAMtJ,KAAKoO,GACXD,EAAOnO,KAAKoO,GAEbF,EAAGlO,KAAKsJ,GAET6E,EAAOnO,KAAKsE,GACZ4J,EAAGlO,KAAK,CAACsE,IAELpE,KAAKlB,MAAMmB,KAiCd,IADA,IAAIa,EAAQ,GACHqI,EAAQD,EAAMtJ,OAAS,EAAGuJ,EAAQ,EAAGA,IAE7C,IADA,IAEKgF,EAAa,EACjBA,EAAajF,EAAMC,EAAQ,GAC3BgF,IACC,CACD,IAAK,IAAIvL,EAAS,EAAGA,EAASsG,EAAMC,GAAQvG,IAC3C9B,EAAMhB,KACLW,EAAK,CACJ1C,OAAQiQ,EAAG7E,EAAQ,GAAGgF,GACtBnQ,OAAQgQ,EAAG7E,GAAOvG,MAIT,IAId5C,KAAK4F,SAAS,CAAE1E,MAAO+M,IACvBjO,KAAK4F,SAAS,CAAE9E,a,2BAQnB,SAAcsN,GAAW,IAAD,OACvBC,KAAQ,WACP,EAAKzI,SAAS,CAAEyE,GAAI+D,S,wDAItB,4BAAAnK,EAAA,yDACKtD,GAAWX,KAAKlB,MAAM8N,SAASjM,QACnCX,KAAKoN,OAAO,WAAY,UAAWzM,IACnB,IAAZA,EAHL,gCAIQX,KAAKqN,MAAMrN,KAAKlB,MAAM+E,KAAKkB,EAAG/E,KAAKlB,MAAM+E,KAAK/F,GAJtD,OAKEyL,QAAQ+E,IAAI,QALd,gD,0EASA,SAAOC,EAAKC,EAAQpI,GAAQ,IAAD,OAE1BiI,KAAQ,WACP,IAAIvP,EAAK,eAAQ,EAAKA,OAElByP,KAAOzP,GAAS0P,KAAU1P,EAAMyP,IAEnCzP,EAAMyP,GAAKC,GAAUpI,EACrB,EAAKR,SAAS,CAAE9G,WAEhByK,QAAQC,MAAM,oC,sBAMjB,SAASzJ,GAAQ,IAAD,OACf,OAAOsO,KAAQ,WACd,IAAInF,EAAQ,EAAKpK,MAAMoK,MACvBnJ,EAAM4B,IACL0M,IAAUjF,MAAM,CACfqF,WAAY,CAAC,GACbC,MAAOxF,EAAM,GACbR,WAAY,OACZiG,SAAS,KAGX,IAAK,IAAIxF,EAAQ,EAAGA,EAAQD,EAAMtJ,OAAS,EAAGuJ,IAC7CpJ,EAAM4B,IACL0M,IAAUjF,MAAM,CACfsF,MAAOxF,EAAMC,GACbT,WAAY,OACZiG,SAAS,KAYZ,OARA5O,EAAM4B,IACL0M,IAAUjF,MAAM,CACfsF,MAAO,EACPhG,WAAY,SACZiG,SAAS,KAIJ5O,O,0BAGT,SAAasK,GACZ,IAAItK,EAAQsO,MAMZ,OALArO,KAAK4O,SAAS7O,GACdA,EAAM8O,QAAQ,CACbC,UAAWT,IAASU,IAAI1E,GACxB9G,KAAM,qBAEAxD,I,0DAER,WAAYgF,EAAGjH,GAAf,gCAAAmG,EAAA,sDACO+K,EAAUX,KAAQ,WACvB,OAAOA,IAAUtJ,MAEZkK,EAAUZ,KAAQ,WACvB,OAAOA,IAAUvQ,MAGZiC,EAAQsO,KAAQ,WACrB,OAAO,EAAKvP,MAAM8M,MAEbC,EAAQ,SAACC,GAAD,OAAQ,IAAIC,SAAQ,SAACC,GAAD,OAASC,WAAWD,EAAKF,OAEvDoD,EAAOlP,KAAKlB,MAAM8N,SAASjM,QAbhC,WAeiB,IAATuO,EAfR,wBAgBElP,KAAK4F,SAAS,CAAE2G,aAAa,IACrB5L,EAAwBX,KAAKlB,MAAM8N,SAAnCjM,QACRuO,EAAOvO,EAlBT,UAmBQZ,EAAMoP,IAAIH,EAASC,EAAS,CACjCG,OAAQ,IApBX,eAsBEf,KAAQ,WACP,IAAIgB,EAAatP,EAAMuP,QAAQN,GAC3BhK,EAAOqG,GAAcgE,GACrB9L,EAAO8K,IAAUkB,iBAAiBzR,EAAGkH,GAAMwG,WAAW,GAC1D,EAAK8B,gBAAgBvN,EAAOwD,EAAMyB,EAAM,EAAKlG,MAAM0N,MAAQ,MAG5DxM,KAAK4F,SAAS,CAAE2G,aAAa,IA7B/B,UA8BQV,EAAM7L,KAAKlB,MAAM8N,SAASC,OA9BlC,+BAgCC7M,KAAK4F,SAAS,CAAEgG,GAAI7L,IACpBsO,IAAWW,GACXX,IAAWY,GAlCZ,iD,2HAoCA,WAAoBO,EAAKC,GAAzB,oBAAAxL,EAAA,sEACOoK,MADP,OAECA,KAAQ,WACP,IACIY,EADAD,EAAUX,KAAa,EAAKvP,MAAM8F,MAAO,EAAK9F,MAAM8F,MAAO,IAE/DqK,EAAUZ,IAAOmB,EAAIR,GAAUS,GAC/B,IAAIJ,EAAahB,IAAaW,GAC1BjK,EAAIsG,GAAc2D,GAClBlR,EAAIuN,GAAc4D,GAClBjK,EAAOqG,GAAcgE,GACzB,EAAKzJ,SAAL,2BACI,EAAK9G,OADT,IAEC+E,KAAM,CAAEkB,IAAGjH,KACXkH,aAbH,2C,sFAkBA,SAAgBjF,EAAOwD,EAAMyB,EAAMwH,GAGlC,IAFA,IAAIE,EAAc,GACdD,EAAa,GACR9M,EAAI,EAAGA,EAAII,EAAM2P,aAAa9P,OAAQD,KAC7CA,EAAI,IAAM,EAAI+M,EAAcD,GAAY3M,KACxCoH,MAAMqE,KAAKxL,EAAM2P,aAAa/P,GAAG6L,aAInC,IAAIjG,EAAS,sBAAOvF,KAAKlB,MAAMyG,WAAlB,CAA6BhC,IAC1CvD,KAAK4F,SAAS,CACb6G,aACAC,cACAnJ,OACAyB,OACAwH,QACAjH,cAEDvF,KAAK2N,kBAAkB3N,KAAKlB,MAAMoK,S,+DAEnC,sBAAAjF,EAAA,sDACCjE,KAAK4F,SAAS,CAAEgH,SAAS,2BAAM5M,KAAKlB,MAAM8N,UAAlB,IAA4BjM,SAAS,MAD9D,gD,0HAGA,WAAsBiE,GAAtB,0BAAAX,EAAA,6DACCoK,IAAWrO,KAAKlB,MAAM8M,IACde,EAAU3M,KAAKlB,MAAf6N,MAGR0B,KAAQ,WACO,QAAV1B,EACH6C,EAAMnB,IACc,SAAV1B,EACV6C,EAAMnB,IACc,QAAV1B,IACV6C,EAAMnB,QAXT,SAgBOrO,KAAKmN,cAAcqC,EAAK5K,GAhB/B,OAiBO7E,EAAQsO,KAAQ,WACrB,OAAO,EAAKsB,aAAa,EAAK7Q,MAAMuL,OAErCrK,KAAK4F,SAAL,2BACI5F,KAAKlB,OADT,IAEC0N,MAAO,EACPjJ,KAAM,KACNjD,QAAS,GACTsL,GAAI7L,EACJwF,UAAW,MAEZ8I,IA5BD,2D,iHA+BA,WAAYzJ,GAAZ,SAAAX,EAAA,sDACCjE,KAAKwN,aACLxN,KAAKyN,gBAAgB7I,GAFtB,gD,6HAIA,mCAAAX,EAAA,sDACCoK,IAAc,OACdrO,KAAKmN,cAAckB,IAAQrO,KAAKlB,MAAM8F,OACtC5E,KAAK2N,kBAAkB3N,KAAKlB,MAAMoK,OAC5BnJ,EAAQsO,KAAQ,WACrB,OAAO,EAAKsB,aAAa,QAE1B3P,KAAK4F,SAAS,CAAEgG,GAAI7L,IAPrB,gD,yFASA,WACC,OAAIC,KAAKlB,MAAMyN,c,oBAOhB,WAAU,IAAD,SAmBJvM,KAAKlB,MAhBRoK,EAHO,EAGPA,MACAtE,EAJO,EAIPA,MACA1E,EALO,EAKPA,MACAwM,EANO,EAMPA,YACAD,EAPO,EAOPA,WACAzH,EARO,EAQPA,KACA9D,EATO,EASPA,MACAJ,EAVO,EAUPA,MACAR,EAXO,EAWPA,QACAL,EAZO,EAYPA,KACAuM,EAbO,EAaPA,MACAG,EAdO,EAcPA,MACAtC,EAfO,EAePA,GACA9G,EAhBO,EAgBPA,KACAqJ,EAjBO,EAiBPA,SACA/I,EAlBO,EAkBPA,KAEOlD,EAAmBiM,EAAnBjM,QAASkM,EAAUD,EAAVC,MACT9H,EAASlB,EAATkB,EAAGjH,EAAM+F,EAAN/F,EAEP8R,EAAQ,YAAO1G,GACnB0G,EAASC,OAAO,EAAG,GACnBD,EAASC,OAAOD,EAAShQ,OAAS,EAAG,GACrC,IACMkQ,EAAW,CAChB,CAAEnG,MAAO,MAAO6F,IAAKnB,IAAQzJ,MAAO,GACpC,CAAE+E,MAAO,MAAO6F,IAAKnB,IAAQzJ,MAAO,GACpC,CAAE+E,MAAO,OAAQ6F,IAAKnB,IAASzJ,MAAO,IAIjCmL,EAEL,cAACC,EAAA,EAAD,CACChM,MAAO,CACNiM,WAAajQ,KAAKlB,MAAM8N,SAASjM,QAE9B,UADA,UAEH1C,MAAO,SAERiS,oBAAkB,EAClB/O,QAAS,kBAAM,EAAK+L,OARrB,SAUGvM,EAA0B,cAACwP,EAAA,EAAD,IAAhB,cAACC,EAAA,EAAD,MAGRC,EACL,eAAC5I,EAAA,EAAD,WACC,cAAC6I,EAAA,EAAD,CAASC,MAAM,QAAQC,OAAK,EAA5B,SACC,cAACC,EAAA,EAAD,CACCC,SAAU/P,EACVQ,QAAS,WACR,EAAKoM,MAAM3I,IAHb,SAMC,cAAC+L,EAAA,EAAD,QAGDZ,EACD,cAACO,EAAA,EAAD,CAASC,MAAM,QAAQC,OAAK,EAA5B,SACC,cAACC,EAAA,EAAD,CACCzM,MAAO,CACN/F,MAAiB,IAAV4O,EAAc,OAAS,WAE/B1L,QAAS,WACR,EAAKyE,SAAS,CACbgH,SAAS,2BACLA,GADI,IAEPC,MAAiB,IAAVA,EAAc,IAAM,OAR/B,SAaC,cAAC+D,EAAA,EAAD,WAKEC,GACL,cAACpJ,EAAA,EAAD,UACC,cAACC,EAAA,EAAD,CACCvG,QAAO,sBAAE,sBAAA8C,EAAA,sEACF,EAAK0H,KAAK,EAAK7M,MAAMoB,OADnB,2CADV,sBAUI4Q,GACL,eAACjL,EAAA,EAAD,CAAKvI,MAAO,IAAZ,UACC,cAAC0I,EAAA,EAAD,CAAMC,QAAQ,WAAd,SACC,eAACC,EAAA,EAAD,WACC,cAACK,EAAA,EAAD,CACCN,QAAQ,UACRjC,MAAO,CACN/F,MAAO,WAHT,4BAQA,qBAAK8S,IAAE,IACP,cAACT,EAAA,EAAD,CACCC,MACC,cAAChK,EAAA,EAAD,CAAYN,QAAQ,KAApB,SACEjG,KAAKlB,MAAMmB,KACT,mBACA,iCAGLuQ,OAAK,EACLQ,UAAU,cACVC,KAAyB,MAAnBjR,KAAKlB,MAAMyE,KAVlB,SAYC,cAACmE,EAAA,EAAD,CACCgJ,SAA6B,MAAnB1Q,KAAKlB,MAAMyE,KACrBpC,QAAO,sBAAE,gCAAA8C,EAAA,6DACF4H,EAAQ,SAACC,GAAD,OACb,IAAIC,SAAQ,SAACC,GAAD,OACXC,WAAWD,EAAKF,OAEdoF,EAAmBtG,GACtB8B,EACAxD,IAEG0C,EAAK,IAAI3C,EACZC,EACAgI,EACAzE,IAGE3C,QAAQ/E,EAAE,GAAIjH,EAAE,IACnB8N,EAAGxJ,WACH,EAAKwD,SAAL,2BACI,EAAK9G,OADT,IAECoB,MAAO0L,EACP3L,MAAOA,EACP2M,SAAS,2BACL,EAAK9N,MAAM8N,UADP,IAEPjM,SAAS,OAvBH,SA0BFkL,EAAM,KA1BJ,cA2BR,EAAKjG,SAAS,CAAEpD,MAAO,IA3Bf,UA4BF,EAAKmJ,KAAKC,GA5BR,4CAFV,SAiCC,eAACrF,EAAA,EAAD,CAAYN,QAAQ,KAApB,oBACSuG,SAIX,eAACjG,EAAA,EAAD,CAAYN,QAAQ,KAApB,kBAEU,MAAR1C,EAAe,GAAKA,EAAKZ,YAAY,MAEtC3C,KAAKlB,MAAMmB,KAAO4Q,GAAmBR,EACtC,cAAC5I,EAAA,EAAD,SAIF,cAAC5B,EAAA,EAAD,CAAKgC,UAAW,EAAhB,SACC,cAAC7B,EAAA,EAAD,CAAMC,QAAQ,WAAd,SACC,eAACC,EAAA,EAAD,WACC,cAACK,EAAA,EAAD,CACCN,QAAQ,UACRjC,MAAO,CACN/F,MAAO,WAHT,2BAQA,eAACwJ,EAAA,EAAD,WACC,cAAClB,EAAA,EAAD,CAAYN,QAAQ,UAApB,2BAvJM,CAAC,KAAO,KAAO,IAAM,IAAM,IA0J5BlF,KAAI,SAACoQ,EAAKxR,GAAN,OACR,cAACyR,EAAA,EAAD,CACCV,SAAU/P,EAEVgJ,MAAK,UAAKwH,GACVnN,MAAO,CACN/F,MACCoM,IAAO8G,EAAM,QAAU,OACxBlB,WACC5F,IAAO8G,EACJ,UACA,aAELhQ,QAAS,WACRkN,KAAQ,WACP,EAAKX,cAAcyD,GACnB,EAAK5D,MAAM3I,QAbRjF,SAoBR,eAAC8H,EAAA,EAAD,WACC,cAAClB,EAAA,EAAD,CAAYN,QAAQ,UAApB,sBAGC6J,EAAS/O,KAAI,SAACoH,EAAMxI,GAAP,OACb,cAACyR,EAAA,EAAD,CACCV,SAAU/P,EAEVgJ,MAAOxB,EAAKwB,MACZ3F,MAAO,CACN/F,MACC0O,IAAUxE,EAAKwB,MACZ,QACA,OACJsG,WACCtD,IAAUxE,EAAKwB,MACZ,UACA,aAELxI,QAAS,WACR,EAAKyE,SAAS,CACbsD,QACAyD,MAAOxE,EAAKwB,QAEb,EAAK4D,MAAM3I,GACXyJ,KAAQ,WACP,EAAKlB,cACJhF,EAAKqH,IACLrH,EAAKvD,YArBHjF,SA6BR,eAAC8H,EAAA,EAAD,WACC,cAAClB,EAAA,EAAD,CAAYN,QAAQ,UAApB,qBAIA,cAACE,EAAA,EAAD,CACCnC,MAAO,CAAE/F,MAAO,WAChBoT,aAAc,EACdX,SAAU/P,EACV2Q,kBAAgB,kBAChBC,kBAAkB,OAClBC,KAAM,EACNC,OAAK,EACLpL,SAAU,SAACxG,EAAGyG,GACb,EAAKV,SAAS,CAAEmH,UAAWzG,KAE5BoL,IAAK,EACLhI,IAAK,IAEN,cAAChC,EAAA,EAAD,CACCgJ,SAAU/P,EACVQ,QAAS,WACR,IAAI8C,EAAIiF,EACRK,QAAQ+E,IAAIrK,EAAErE,QACVqE,EAAErE,OAAS,IACdqE,EACCA,EAAErE,OAAS,GACR,EAAKd,MAAMiO,UACf9I,EAAEnE,KAAK,GACP,EAAK8F,SAAS,CAAEsD,MAAOjF,IACvB,EAAK0J,kBAAkB1J,GACvB,EAAKsJ,MAAM3I,KAZd,eAmBA,cAAC8C,EAAA,EAAD,CACCgJ,SAAU/P,EACVQ,QAAS,WACR,IAAI8C,EAAIiF,EACRK,QAAQ+E,IAAIrK,EAAErE,QACVqE,EAAErE,OAAS,IACdqE,EAAE4L,OAAO5L,EAAErE,OAAS,EAAG,GACvB,EAAKgG,SAAS,CAAEsD,MAAOjF,IACvB,EAAK0J,kBAAkB1J,GACvB,EAAKsJ,MAAM3I,KATd,iCAqBA+M,GACL,eAAC9L,EAAA,EAAD,CAAK+L,WAAY,GAAjB,UACC,cAAC/L,EAAA,EAAD,UACC,cAAC,EAAD,CACCvI,MAAO,IACPC,OAAQ,IACR2G,QAAS,EACTC,OAAQS,EACRR,KAAMQ,EACNG,EAAGA,EACHjH,EAAGA,EACHkH,KAAMA,MAGR,cAACa,EAAA,EAAD,CAAKgC,UAAW,GAAhB,SACC,cAAC,EAAD,CAAMtC,UAAWvF,KAAKlB,MAAMyG,UAAWhC,KAAMA,SAKhD,OACC,sBAAKrF,GAAG,MAAR,UACC,sBAAK2C,UAAU,UAAf,UACC,cAACgR,EAAA,EAAD,CACCC,SAAS,QACT7L,QAAQ,WACRjC,MAAO,CACNiM,WAAgC,UAChChS,MAAO,SALT,SAQC,cAAC8T,EAAA,EAAD,UACC,cAACxL,EAAA,EAAD,CAAYN,QAAQ,KAApB,2CAMF,cAACD,EAAA,EAAD,CACCC,QAAQ,WACRjC,MAAO,CACNiM,WAAY,UACZ+B,aAAc,QACdC,cAAe,OALjB,SAQC,cAAC/L,EAAA,EAAD,UACC,eAACL,EAAA,EAAD,CACChF,UAAU,UACViF,QAAQ,OACRyB,eAAe,SACfM,UAAW,GAJZ,UAMEiJ,GACD,cAACjL,EAAA,EAAD,CAAK+L,WAAY,GAAjB,SACC,cAAC,EAAD,CACC1R,MAAOA,EACPqB,MAAOwD,EAAE,GACT4E,MAAO7L,EAAE,GACToU,cAAexF,EACfxD,MAAOA,EACPtC,OAAQ6F,EACRnM,QAASA,EACTY,MAAOA,EACPJ,MAAOA,EACPH,QACCA,EACa,IAAVkM,EACC,cACA,aACD,aAEJsF,KAAMxR,EACN6B,MAAOxC,KAAKlB,MAAM0D,MAClBH,MAAOrC,KAAKlB,MAAMuD,MAClByK,UAAW9M,KAAKlB,MAAMgO,UACtB7M,KAAMA,EACNmC,SAAUpC,KAAKlB,MAAMqN,UACrBhL,QAAS,WACR,EAAKqM,kBAIPmE,aAML,cAAC,EAAD,W,GA7zBcnO,aCvBH4O,I,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCDdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,GAAD,MAEDC,SAASC,eAAe,SAMzBb,O","file":"static/js/main.ba458f5f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./d3.css\";\n\nfunction Legend() {\n\tconst height = 10;\n\tconst width = 100;\n\treturn (\n\t\t<div>\n\t\t\t<svg width={width} height={height} class=\"grad\" overflow=\"visible\">\n\t\t\t\t<text\n\t\t\t\t\tfill=\"grey\"\n\t\t\t\t\tfontFamily=\"sans-serif\"\n\t\t\t\t\tfontSize=\"10px\"\n\t\t\t\t\tx={0}\n\t\t\t\t\ty={-13}\n\t\t\t\t>\n\t\t\t\t\tColor and stroke\n\t\t\t\t</text>\n\n\t\t\t\t<text\n\t\t\t\t\tfill=\"grey\"\n\t\t\t\t\tfontFamily=\"sans-serif\"\n\t\t\t\t\tfontSize=\"10px\"\n\t\t\t\t\tx={0}\n\t\t\t\t\ty={-4}\n\t\t\t\t>\n\t\t\t\t\tindicate weight\n\t\t\t\t</text>\n\n\t\t\t\t<text fontSize=\"12px\" fill=\"grey\" x={-0.5} y={18}>\n\t\t\t\t\t|\n\t\t\t\t</text>\n\t\t\t\t<text fontSize=\"13px\" fill=\"grey\" x={-2.5} y={28}>\n\t\t\t\t\t–\n\t\t\t\t</text>\n\n\t\t\t\t<text fontSize=\"12px\" fill=\"grey\" x={width / 2 - 2} y={18}>\n\t\t\t\t\t|\n\t\t\t\t</text>\n\t\t\t\t<text fontSize=\"13px\" fill=\"grey\" x={width / 2 - 4.5} y={30}>\n\t\t\t\t\t0\n\t\t\t\t</text>\n\n\t\t\t\t<text fontSize=\"12px\" fill=\"grey\" x={width - 2} y={18}>\n\t\t\t\t\t|\n\t\t\t\t</text>\n\t\t\t\t<text fontSize=\"13px\" fill=\"grey\" x={width - 3 - 1.5} y={28}>\n\t\t\t\t\t+\n\t\t\t\t</text>\n\t\t\t</svg>\n\t\t</div>\n\t);\n}\n\nexport default Legend;\n","import React from \"react\";\nconst Legend = ({ source, target, color }) => (\n\t<g>\n\t\t<defs>\n\t\t\t<marker\n\t\t\t\tid=\"head\"\n\t\t\t\torient=\"auto\"\n\t\t\t\tmarkerWidth=\"3\"\n\t\t\t\tmarkerHeight=\"4\"\n\t\t\t\trefX=\"0.1\"\n\t\t\t\trefY=\"2\"\n\t\t\t>\n\t\t\t\t<path d=\"M0,0 V4 L2,2 Z\" fill={color} />\n\t\t\t</marker>\n\t\t</defs>\n\t\t<path\n\t\t\tid=\"arrow-line\"\n\t\t\tmarkerEnd=\"url(#head)\"\n\t\t\tstrokeWidth=\"3\"\n\t\t\tfill=\"none\"\n\t\t\tstroke={color}\n\t\t\td={`M${source.x},${source.y}, ${target.x}, ${target.y}`}\n\t\t/>\n\t</g>\n);\nexport default Legend;\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tNeural Network component that is what the user interacts with\n*/\nimport React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport Legend from \"./Legend\";\nimport Arrow from \"./Arrow\";\nimport \"./d3.css\";\n\nclass PlayGround extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\twidths: 32,\n\t\t\tzoom: 15,\n\t\t\tmacro: false,\n\t\t\tmicro: false,\n\t\t};\n\t\tthis.zoom = this.zoom.bind(this);\n\t}\n\tzoom(d3node, d3zoom, x, y, scaleZoom, duration) {\n\t\td3node\n\t\t\t//.transition()\n\t\t\t//.duration(duration)\n\t\t\t//.ease(d3zoom)\n\t\t\t.attr(\n\t\t\t\t\"transform\",\n\t\t\t\t`translate(${-x * scaleZoom}, ${\n\t\t\t\t\t-y * scaleZoom\n\t\t\t\t})scale(${scaleZoom})`\n\t\t\t);\n\t}\n\tflatten(array) {\n\t\tlet flattendArray = [];\n\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\tfor (let e = 0; e < array[i].length; e++) {\n\t\t\t\tflattendArray.push(array[i][e]);\n\t\t\t}\n\t\t}\n\t\treturn flattendArray;\n\t}\n\n\trender() {\n\t\tlet model = [];\n\t\tif (this.props.mode) {\n\t\t\tconst { trans } = this.props;\n\t\t\t//console.log(trans);\n\t\t\tmodel = this.flatten(trans.model);\n\t\t\t/* Now create array of output values from each neuron */\n\t\t}\n\t\tconst { children } = this.props;\n\n\t\tlet l = this.props.weights.length;\n\t\tconst negWeight = \"#D62839\";\n\t\tconst posWeight = \"#4BA3C3\";\n\n\t\tconst link = d3\n\t\t\t.linkHorizontal()\n\t\t\t.x((d) => d.x)\n\t\t\t.y((d) => d.y);\n\t\tconst playing = (\n\t\t\t<svg id=\"p\" width=\"810\" height=\"500\" overflow=\"visible\">\n\t\t\t\t<g transform={\"scale(1)\"}>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M 750, 234 L 750, 300\"\n\t\t\t\t\t\tstroke={l != 0 ? \"black\" : \"#ededed\"}\n\t\t\t\t\t\tclassName={this.props.playing}\n\t\t\t\t\t></path>\n\t\t\t\t\t<path\n\t\t\t\t\t\td={link({\n\t\t\t\t\t\t\tsource: { x: 766, y: 315 },\n\t\t\t\t\t\t\ttarget: { x: 890, y: 430 },\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tstroke={l != 0 ? \"black\" : \"#ededed\"}\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tclassName={this.props.playing}\n\t\t\t\t\t></path>\n\t\t\t\t\t<path\n\t\t\t\t\t\td={link({\n\t\t\t\t\t\t\tsource: { x: 766, y: 250 },\n\t\t\t\t\t\t\ttarget: { x: 890, y: 150 },\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tstroke={l != 0 ? \"black\" : \"#ededed\"}\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tclassName={this.props.playing}\n\t\t\t\t\t></path>\n\t\t\t\t\t{this.props.links.map((d, i) => (\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\td={d}\n\t\t\t\t\t\t\tclassName={this.props.playing}\n\t\t\t\t\t\t\tstrokeWidth={\n\t\t\t\t\t\t\t\tl === 0\n\t\t\t\t\t\t\t\t\t? 1\n\t\t\t\t\t\t\t\t\t: Math.pow(this.props.weights[i], 2) + 0.1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstroke={\n\t\t\t\t\t\t\t\tl !== 0\n\t\t\t\t\t\t\t\t\t? this.props.weights[i] > 0\n\t\t\t\t\t\t\t\t\t\t? posWeight\n\t\t\t\t\t\t\t\t\t\t: negWeight\n\t\t\t\t\t\t\t\t\t: \"#ededed\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t></path>\n\t\t\t\t\t))}\n\t\t\t\t\t{this.props.rects.map((d, i) => (\n\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tx={d.x}\n\t\t\t\t\t\t\ty={d.y}\n\t\t\t\t\t\t\twidth={this.state.widths}\n\t\t\t\t\t\t\theight={this.state.widths}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.props.onClick();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tfill=\"lightgrey\"\n\t\t\t\t\t\t></rect>\n\t\t\t\t\t))}\n\n\t\t\t\t\t<rect\n\t\t\t\t\t\tx={734}\n\t\t\t\t\t\ty={300}\n\t\t\t\t\t\twidth={32}\n\t\t\t\t\t\theight={32}\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tstroke=\"black\"\n\t\t\t\t\t></rect>\n\t\t\t\t\t<text\n\t\t\t\t\t\tfontFamily=\"sans-serif\"\n\t\t\t\t\t\tfontSize=\"12px\"\n\t\t\t\t\t\tx={739}\n\t\t\t\t\t\ty={318}\n\t\t\t\t\t>\n\t\t\t\t\t\tloss\n\t\t\t\t\t</text>\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t);\n\n\t\t//Lets create the computational graph\n\t\tlet fontSize = \"1px\";\n\t\tconst lin = d3.line();\n\n\t\tconst mult = (x, y) => (\n\t\t\t<svg x={x} y={y} width={2} height={2}>\n\t\t\t\t<rect width={2} height={2} x={0} y={0} fill=\"white\"></rect>\n\t\t\t\t<text fontSize=\"2px\" x={0.5} y={2}>\n\t\t\t\t\t*\n\t\t\t\t</text>\n\t\t\t</svg>\n\t\t);\n\t\tconst connection = (x, y, color) => (\n\t\t\t<path d={lin([x, y])} stroke={color} strokeWidth=\"0.1\"></path>\n\t\t);\n\n\t\tconst inputWeightComponent = (input, weight, dInput, dWeight) => (\n\t\t\t<g>\n\t\t\t\t{connection([1, 0.75], [4, 0.75], \"black\")}\n\t\t\t\t{connection([1, 2.25], [4, 2.25], \"black\")}\n\t\t\t\t{connection([4, 0.75], [6, 1.5], \"black\")}\n\t\t\t\t{connection([4, 2.25], [6, 1.5], \"black\")}\n\t\t\t\t{mult(5, 0.5)}\n\t\t\t</g>\n\t\t);\n\n\t\tconst add = (x, y) => (\n\t\t\t<svg x={x} y={y} width={2} height={2}>\n\t\t\t\t<rect width={2} height={2} x={0} y={0} fill=\"white\"></rect>\n\t\t\t\t<text fontSize=\"2px\" x={0.5} y={1.5}>\n\t\t\t\t\t+\n\t\t\t\t</text>\n\t\t\t</svg>\n\t\t);\n\t\tconst relu = (x, y) => (\n\t\t\t<svg x={x} y={y} width={2} height={2}>\n\t\t\t\t<rect width={2} height={2} x={0} y={0} fill=\"white\"></rect>\n\t\t\t\t<text fontSize=\"0.5px\" x={0.25} y={0.5}>\n\t\t\t\t\tReLU\n\t\t\t\t</text>\n\t\t\t\t{connection([0, 1.5], [1, 1.5], \"black\")}\n\t\t\t\t{connection([1, 1.5], [2, 0.5], \"black\")}\n\t\t\t</svg>\n\t\t);\n\n\t\tconst graph = (x, y, neuron) => (\n\t\t\t<svg width={32} height={32} x={x} y={y}>\n\t\t\t\t{neuron.length == 0\n\t\t\t\t\t? \"\"\n\t\t\t\t\t: neuron.inputs.map((d, i) => (\n\t\t\t\t\t\t\t<g key={i}>\n\t\t\t\t\t\t\t\t<svg width={10} height={4} x={0} y={i * 3.5}>\n\t\t\t\t\t\t\t\t\t<text fontSize={fontSize} x={0} y={1}>\n\t\t\t\t\t\t\t\t\t\tx\n\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t<text fontSize={\"0.5px\"} x={0.5} y={1.2}>\n\t\t\t\t\t\t\t\t\t\t{i}\n\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t<text fontSize={fontSize} x={0} y={2.5}>\n\t\t\t\t\t\t\t\t\t\tw\n\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t<text fontSize={\"0.5px\"} x={0.6} y={2.7}>\n\t\t\t\t\t\t\t\t\t\t{i}\n\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t{connection([6, 1.5], [10, 1.5], \"black\")}\n\t\t\t\t\t\t\t\t\t{inputWeightComponent(1, 1, 1, 1)}\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t{connection(\n\t\t\t\t\t\t\t\t\t[10, i * 3.5 + 1.5],\n\t\t\t\t\t\t\t\t\t[18.25, 16],\n\t\t\t\t\t\t\t\t\t\"black\"\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{neuron.inputs.map((d, i) => (\n\t\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\t\tfill=\"blue\"\n\t\t\t\t\t\t\t\t\t\tx={1}\n\t\t\t\t\t\t\t\t\t\ty={0.7 + 3.5 * i}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{d.toFixed(4)}\n\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t{neuron.dInputs.map((d, i) => (\n\t\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\t\tfill=\"red\"\n\t\t\t\t\t\t\t\t\t\tx={1}\n\t\t\t\t\t\t\t\t\t\ty={1.4 + 3.5 * i}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{d.toFixed(4)}\n\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t\t{neuron.weights.map((d, i) => (\n\t\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\t\tfill=\"blue\"\n\t\t\t\t\t\t\t\t\t\tx={1}\n\t\t\t\t\t\t\t\t\t\ty={2.2 + 3.5 * i}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{d.toFixed(4)}\n\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t{neuron.dWeights.map((d, i) => (\n\t\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\t\tfill=\"red\"\n\t\t\t\t\t\t\t\t\t\tx={1}\n\t\t\t\t\t\t\t\t\t\ty={2.9 + 3.5 * i}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{d.toFixed(4)}\n\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\tfill=\"blue\"\n\t\t\t\t\t\t\t\t\tx={1}\n\t\t\t\t\t\t\t\t\ty={29.7}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{neuron.bias.toFixed(4)}\n\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\tfill=\"red\"\n\t\t\t\t\t\t\t\t\tx={1}\n\t\t\t\t\t\t\t\t\ty={30.4}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{neuron.dBias.toFixed(4)}\n\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t{neuron.multStep.map((d, i) => (\n\t\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\t\tfill=\"blue\"\n\t\t\t\t\t\t\t\t\t\tx={7.25}\n\t\t\t\t\t\t\t\t\t\ty={1.4 + 3.5 * i}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{d.toFixed(4)}\n\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t{neuron.dSumStep.map((d, i) => (\n\t\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\t\tfill=\"red\"\n\t\t\t\t\t\t\t\t\t\tx={7.25}\n\t\t\t\t\t\t\t\t\t\ty={2.1 + 3.5 * i}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{d.toFixed(4)}\n\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\tfill=\"blue\"\n\t\t\t\t\t\t\t\t\tx={20.1}\n\t\t\t\t\t\t\t\t\ty={16}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{neuron.sumStep.toFixed(4)}\n\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\tfill=\"red\"\n\t\t\t\t\t\t\t\t\tx={20.1}\n\t\t\t\t\t\t\t\t\ty={16.7}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{neuron.dActStep.toFixed(4)}\n\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\tfill=\"blue\"\n\t\t\t\t\t\t\t\t\tx={26.2}\n\t\t\t\t\t\t\t\t\ty={16}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{neuron.actStep.toFixed(4)}\n\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\tfill=\"red\"\n\t\t\t\t\t\t\t\t\tx={26.2}\n\t\t\t\t\t\t\t\t\ty={16.7}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{neuron.dvalue.toFixed(4)}\n\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t</g>\n\t\t\t\t\t  ))}\n\n\t\t\t\t<text fontSize={fontSize} x={0} y={30}>\n\t\t\t\t\tb\n\t\t\t\t</text>\n\t\t\t\t{connection([0.75, 29.75], [10, 29.75], \"black\")}\n\t\t\t\t{connection([10, 29.75], [18.25, 16], \"black\")}\n\n\t\t\t\t{connection([19, 16], [30, 16], \"black\")}\n\t\t\t\t{add(18, 15)}\n\t\t\t\t{relu(24, 15)}\n\t\t\t</svg>\n\t\t);\n\n\t\tconst VerticalArrow = (xStart, yStart, length, dirIsUp, color) => {\n\t\t\tconst vector = dirIsUp ? -length : length;\n\t\t\treturn (\n\t\t\t\t<Arrow\n\t\t\t\t\tsource={{ x: xStart, y: yStart }}\n\t\t\t\t\ttarget={{ x: xStart, y: yStart + vector }}\n\t\t\t\t\tcolor={color}\n\t\t\t\t/>\n\t\t\t);\n\t\t};\n\t\tconst notPlaying = (\n\t\t\t<svg id=\"pp\" width=\"810\" height=\"500\">\n\t\t\t\t<g id=\"gpp\">\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M 750, 234 L 750, 300\"\n\t\t\t\t\t\tstroke=\"black\"\n\t\t\t\t\t\tclassName={this.props.backward}\n\t\t\t\t\t></path>\n\n\t\t\t\t\t{this.props.links.map((d, i) => (\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\td={d}\n\t\t\t\t\t\t\tclassName={this.props.backward}\n\t\t\t\t\t\t\tstrokeWidth={\n\t\t\t\t\t\t\t\tMath.pow(this.props.weights[i], 2) + 0.05\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstroke={\n\t\t\t\t\t\t\t\tthis.props.weights.length !== 0\n\t\t\t\t\t\t\t\t\t? this.props.weights[i] > 0\n\t\t\t\t\t\t\t\t\t\t? posWeight\n\t\t\t\t\t\t\t\t\t\t: negWeight\n\t\t\t\t\t\t\t\t\t: \"#ededed\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t></path>\n\t\t\t\t\t))}\n\n\t\t\t\t\t{this.props.rects.map((d, i) => (\n\t\t\t\t\t\t<g id=\"ggpp\" key={i}>\n\t\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\t\tx={d.x}\n\t\t\t\t\t\t\t\ty={d.y}\n\t\t\t\t\t\t\t\twidth={this.state.widths}\n\t\t\t\t\t\t\t\theight={this.state.widths}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t//console.log(model[i]);\n\t\t\t\t\t\t\t\t\t//console.log(d);\n\t\t\t\t\t\t\t\t\t//const svgGroup = d3\n\t\t\t\t\t\t\t\t\t//.select(\"#pp\")\n\t\t\t\t\t\t\t\t\t//.select(\"g\");\n\t\t\t\t\t\t\t\t\t//this.zoom(\n\t\t\t\t\t\t\t\t\t//svgGroup,\n\t\t\t\t\t\t\t\t\t//d3.easeExpInOut,\n\t\t\t\t\t\t\t\t\t//d.x - 16,\n\t\t\t\t\t\t\t\t\t//d.y,\n\t\t\t\t\t\t\t\t\t//this.state.zoom,\n\t\t\t\t\t\t\t\t\t//1500\n\t\t\t\t\t\t\t\t\t//);\n\t\t\t\t\t\t\t\t\t//this.setState({ micro: true });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tfill=\"lightgrey\"\n\t\t\t\t\t\t\t></rect>\n\t\t\t\t\t\t\t{model.length !== 0 && i > this.props.bshow\n\t\t\t\t\t\t\t\t? i > 0\n\t\t\t\t\t\t\t\t\t? VerticalArrow(\n\t\t\t\t\t\t\t\t\t\t\td.x + 16,\n\t\t\t\t\t\t\t\t\t\t\td.y + 16,\n\t\t\t\t\t\t\t\t\t\t\tMath.abs(\n\t\t\t\t\t\t\t\t\t\t\t\t1.2 * model[i - 1].dActStep\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\tmodel[i - 1].dActStep < 0,\n\t\t\t\t\t\t\t\t\t\t\t\"grey\"\n\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t\t<text fill=\"#8db600\" x={d.x + 34} y={d.y + 12}>\n\t\t\t\t\t\t\t\t{model.length !== 0 && i < this.props.nshow\n\t\t\t\t\t\t\t\t\t? i > 0\n\t\t\t\t\t\t\t\t\t\t? model[i - 1].output.toFixed(2)\n\t\t\t\t\t\t\t\t\t\t: this.props.input\n\t\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t<text fill=\"#F50657\" x={d.x + 34} y={d.y + 28}>\n\t\t\t\t\t\t\t\t{model.length !== 0 && i > this.props.bshow\n\t\t\t\t\t\t\t\t\t? i > 0\n\t\t\t\t\t\t\t\t\t\t? model[i - 1].dActStep.toPrecision(3)\n\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t{i > 0 && this.state.micro\n\t\t\t\t\t\t\t\t? graph(\n\t\t\t\t\t\t\t\t\t\td.x + 2,\n\t\t\t\t\t\t\t\t\t\td.y,\n\t\t\t\t\t\t\t\t\t\tmodel.length > 0 ? model[i - 1] : []\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t</g>\n\t\t\t\t\t))}\n\t\t\t\t\t<rect\n\t\t\t\t\t\tx={734}\n\t\t\t\t\t\ty={300}\n\t\t\t\t\t\twidth={32}\n\t\t\t\t\t\theight={32}\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tstroke=\"black\"\n\t\t\t\t\t></rect>\n\t\t\t\t\t<text\n\t\t\t\t\t\tfontFamily=\"sans-serif\"\n\t\t\t\t\t\tfontSize=\"13px\"\n\t\t\t\t\t\tx={738}\n\t\t\t\t\t\ty={318}\n\t\t\t\t\t>\n\t\t\t\t\t\tLoss\n\t\t\t\t\t</text>\n\t\t\t\t\t<text x={734} y={350}>\n\t\t\t\t\t\t{this.props.mode && this.props.nshow > 18\n\t\t\t\t\t\t\t? this.props.trans.loss.output.toPrecision(3)\n\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t</text>\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t);\n\t\treturn (\n\t\t\t<div id=\"nn\">\n\t\t\t\t{children}\n\t\t\t\t{!this.props.mode ? playing : notPlaying}\n\t\t\t\t<Legend />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PlayGround;\n","import React, { Component } from \"react\";\nimport \"./d3.css\";\nimport * as d3 from \"d3\";\n\nclass ScatterPlot extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\tplotPoints(node, formattedPoints) {\n\t\t/* Now need to plot said data */\n\t\tnode.selectAll(\"circle\")\n\t\t\t.data(formattedPoints)\n\t\t\t.enter()\n\t\t\t.append(\"circle\")\n\t\t\t.attr(\"cx\", (d) => d.x)\n\t\t\t.attr(\"cy\", (d) => d.y)\n\t\t\t.attr(\"r\", 2)\n\t\t\t.style(\"fill\", \"grey\");\n\t}\n\t/* This is where we initialize the Scatter Plot */\n\tasync componentDidMount() {\n\t\tconst { width, height, padding, start, stop } = this.props;\n\t\tconst container = d3.select(\"#nice\");\n\n\t\tconst svg = container\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.style(\"overflow\", \"visible\");\n\t\tsvg.append(\"rect\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.attr(\"class\", \"cord\");\n\t\tlet xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([0, width - 2 * padding]);\n\n\t\tlet yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([height - 2 * padding, 0]);\n\n\t\tlet xAxis = d3.axisBottom().scale(xScale);\n\t\tlet yAxis = d3.axisRight().scale(yScale);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"transform\", `translate(0,${height - 2 * padding})`)\n\t\t\t.call(xAxis);\n\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"transform\", \"translate(\" + (width - 2 * padding) + \",0)\")\n\t\t\t.call(yAxis);\n\n\t\tsvg.append(\"line\")\n\t\t\t.attr(\"x1\", 0)\n\t\t\t.attr(\"y1\", (height + 1) / 2)\n\t\t\t.attr(\"x2\", width)\n\t\t\t.attr(\"y2\", (height + 1) / 2)\n\t\t\t.attr(\"class\", \"split\");\n\t\tsvg.append(\"line\")\n\t\t\t.attr(\"x1\", (width + 1) / 2)\n\t\t\t.attr(\"y1\", 0)\n\t\t\t.attr(\"x2\", (width + 1) / 2)\n\t\t\t.attr(\"y2\", height)\n\t\t\t.attr(\"class\", \"split\");\n\n\t\tsvg.append(\"path\")\n\t\t\t.attr(\"id\", \"epic\")\n\t\t\t.attr(\"stroke\", \"none\")\n\t\t\t.attr(\"fill\", \"none\");\n\t}\n\tcomponentDidUpdate() {\n\t\tconst { width, height, padding, start, stop, X, y, yhat } = this.props;\n\t\tlet xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([0, width - 2 * padding]);\n\n\t\tlet yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([height - 2 * padding, 0]);\n\t\tconst svg = d3.select(\"#nice\").select(\"svg\");\n\t\tlet dataSet = [];\n\t\tfor (let i = 0; i < X.length; i++) {\n\t\t\tdataSet.push({\n\t\t\t\tx: xScale(X[i]),\n\t\t\t\ty: yScale(y[i]),\n\t\t\t});\n\t\t}\n\t\tlet a = [];\n\t\tfor (let i = 0; i < X.length; i++) {\n\t\t\ta.push([xScale(X[i]), yScale(yhat[i])]);\n\t\t}\n\t\tsvg.selectAll(\"circle\").remove();\n\t\tthis.plotPoints(svg, dataSet);\n\n\t\tsvg.select(\"#epic\")\n\t\t\t.attr(\"d\", d3.line()(a))\n\t\t\t.attr(\"stroke\", \"black\")\n\t\t\t.attr(\"fill\", \"none\");\n\t}\n\t//componentDidUpdate() {\n\t//const { width, height, padding, start, stop, X, y } = this.props;\n\t//console.log(X);\n\t//console.log(y);\n\t//let xScale = d3\n\t//.scaleLinear()\n\t//.domain([start, stop])\n\t//.range([0, width - 2 * padding]);\n\n\t//let yScale = d3\n\t//.scaleLinear()\n\t//.domain([start, stop])\n\t//.range([height - 2 * padding, 0]);\n\t//const svg = d3.select(\"#nice\").select(\"svg\");\n\t//let dataSet = [];\n\t//for (let i = 0; i < X.length; i++) {\n\t//dataSet.push({\n\t//x: xScale(X[i]),\n\t//y: yScale(y[i]),\n\t//});\n\t//}\n\t///* Now need to plot said data */\n\t//svg.selectAll(\"circle\")\n\t//.data(dataSet)\n\t//.enter()\n\t//.append(\"circle\")\n\t//.attr(\"cx\", (d) => d.x)\n\t//.attr(\"cy\", (d) => d.y)\n\t//.attr(\"r\", 2)\n\t//.style(\"fill\", \"#F50257\");\n\t//}\n\trender() {\n\t\treturn <div id=\"nice\"></div>;\n\t}\n}\n\nexport default ScatterPlot;\n","import React, { Component } from \"react\";\nimport \"./d3.css\";\nimport * as d3 from \"d3\";\n\nclass Loss extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\tcomponentDidMount() {\n\t\tconst container = d3.select(\"#sweet\");\n\t\tconst height = 100;\n\t\tconst width = 300;\n\t\tconst padding = 0;\n\t\tlet xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([0, -1])\n\t\t\t.range([0, width - 2 * padding]);\n\n\t\tlet yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([1, 1])\n\t\t\t.range([height - 2 * padding, 0]);\n\t\tconst svg = container\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.style(\"overflow\", \"visible\");\n\n\t\tsvg.append(\"rect\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.attr(\"class\", \"cord\");\n\t\tlet xAxis = d3.axisBottom().scale(xScale);\n\t\tlet yAxis = d3.axisRight().scale(yScale);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"id\", \"x\")\n\t\t\t.attr(\"transform\", `translate(0,${height - 2 * padding})`)\n\t\t\t.call(xAxis);\n\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"id\", \"y\")\n\t\t\t.attr(\"transform\", \"translate(\" + (width - 2 * padding) + \",0)\")\n\t\t\t.call(yAxis.ticks(0));\n\t\tsvg.append(\"path\")\n\t\t\t.attr(\"id\", \"line\")\n\t\t\t.attr(\"stroke\", \"none\")\n\t\t\t.attr(\"fill\", \"none\");\n\t\t//svg.append(\"text\").attr(\"x\", 1).attr(\"y\", -5).text(\"loss:\");\n\t}\n\tcomponentDidUpdate() {\n\t\tconst { lossArray, loss } = this.props;\n\t\tconst height = 100;\n\t\tconst width = 300;\n\t\tconst start = 0;\n\t\tconst stop = lossArray.length - 1;\n\t\tconst padding = 0;\n\t\tlet xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([1, width - 2 * padding]);\n\n\t\tlet lossMin = d3.min(lossArray);\n\t\tlet lossMax = d3.max(lossArray);\n\t\tlet yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([lossMin, lossMax])\n\t\t\t.range([height - 2 * padding, 0]);\n\t\tconst svg = d3.select(\"#sweet\").select(\"svg\");\n\t\tlet a = [];\n\t\tfor (let i = 0; i < lossArray.length; i++) {\n\t\t\ta.push([xScale(i), yScale(lossArray[i])]);\n\t\t}\n\n\t\tlet xAxis = d3.axisBottom().scale(xScale);\n\t\tlet yAxis = d3.axisRight().scale(yScale);\n\t\tsvg.select(\"#x\")\n\t\t\t.attr(\"transform\", `translate(0,${height - 2 * padding})`)\n\t\t\t.call(xAxis.ticks(5));\n\n\t\tsvg.select(\"#y\")\n\t\t\t.attr(\"transform\", \"translate(\" + (width - 2 * padding) + \",0)\")\n\t\t\t.call(yAxis.ticks(5));\n\t\tsvg.select(\"#line\")\n\t\t\t.attr(\"d\", d3.line()(a))\n\t\t\t.attr(\"stroke\", \"black\")\n\t\t\t.attr(\"fill\", \"none\");\n\t}\n\trender() {\n\t\treturn <div id=\"sweet\"></div>;\n\t}\n}\n\nexport default Loss;\n","import React, { Component } from \"react\";\nimport {\n\tTypography,\n\tSlider,\n\tBox,\n\tCard,\n\tCardContent,\n\tCardActions,\n} from \"@material-ui/core\";\n\nclass LinearFunction extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tinput: 0,\n\t\t\toutput: 0,\n\t\t};\n\t\tthis.compute = this.compute.bind(this);\n\t}\n\tcompute(input) {\n\t\tconst linfunc = (x) => 2 * x + 1;\n\t\tconst output = linfunc(input);\n\t\tthis.setState({ input, output });\n\t}\n\tcomponentDidMount() {\n\t\tthis.compute(34);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Box display=\"flex\">\n\t\t\t\t<Box minWidth={300}>\n\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\tvalue={this.state.input}\n\t\t\t\t\t\t\t\tonChange={(e, n) => {\n\t\t\t\t\t\t\t\t\tthis.compute(n);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t></Slider>\n\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\tf(\n\t\t\t\t\t\t\t\t<Typography color=\"secondary\" variant=\"inline\">\n\t\t\t\t\t\t\t\t\t{this.state.input}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) = 2(\n\t\t\t\t\t\t\t\t<Typography color=\"secondary\" variant=\"inline\">\n\t\t\t\t\t\t\t\t\t{this.state.input}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) + 1 ={\" \"}\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#8db600\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t}\n}\n\nexport default LinearFunction;\n","import React, { Component } from \"react\";\nimport {\n\tTypography,\n\tSlider,\n\tBox,\n\tCard,\n\tCardContent,\n\tCardActions,\n\tButton,\n} from \"@material-ui/core\";\n\nclass NestedFunction extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tinput: 0,\n\t\t\toutput1: 0,\n\t\t\toutput2: 0,\n\t\t\toutput3: 0,\n\t\t\tweights: [],\n\t\t\tbiases: [],\n\t\t};\n\t\tthis.compute = this.compute.bind(this);\n\t\tthis.initParams = this.initParams.bind(this);\n\t}\n\tcompute(input) {\n\t\tconst { weights, biases } = this.state;\n\t\tconst linfunc = (x, w, b) => w * x + b;\n\t\tconst relu = (x) => Math.max(0, x);\n\n\t\tconst output1 = linfunc(input, weights[0], biases[0]).toFixed(3);\n\t\tconst output2 = linfunc(output1, weights[1], biases[1]).toFixed(3);\n\t\tconst output3 = linfunc(output2, weights[2], biases[2]).toFixed(3);\n\t\tthis.setState({ input, output1, output2, output3 });\n\t}\n\tgenRandomArray(length) {\n\t\tlet arr = new Array(length);\n\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\tarr[i] = +Math.random().toFixed(2);\n\t\t}\n\t\treturn arr;\n\t}\n\tasync initParams() {\n\t\tconst weights = this.genRandomArray(3);\n\t\tconst biases = this.genRandomArray(3);\n\t\tthis.setState({ weights, biases });\n\t}\n\tasync componentDidMount() {\n\t\tawait this.initParams();\n\t\tthis.compute(34);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tinput,\n\t\t\toutput1,\n\t\t\toutput2,\n\t\t\toutput3,\n\t\t\tweights,\n\t\t\tbiases,\n\t\t} = this.state;\n\t\tconst fixedInput = input.toFixed(3);\n\t\tconst outputArr = [\n\t\t\t{ output: output1, color: \"#8db600\" },\n\t\t\t{ output: output2, color: \"#FF8F00\" },\n\t\t\t{ output: output3, color: \"blue\" },\n\t\t];\n\t\treturn (\n\t\t\t<Box display=\"flex\">\n\t\t\t\t<Box width={580}>\n\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\tvalue={this.state.input}\n\t\t\t\t\t\t\t\tonChange={(e, n) => {\n\t\t\t\t\t\t\t\t\tthis.compute(n);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t></Slider>\n\n\t\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t\t<Box justifyContent=\"center\">\n\t\t\t\t\t\t\t\t\t<svg width={500} height={64}>\n\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\td={`M${36} 16, ${100} 16`}\n\t\t\t\t\t\t\t\t\t\t\tstroke={\"#f50557\"}\n\t\t\t\t\t\t\t\t\t\t\tstrokeDasharray=\"25, 4\"\n\t\t\t\t\t\t\t\t\t\t\tstrokeWidth={3 * weights[0] + 0.2}\n\t\t\t\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t\t\t\t\t<text x={40} y={40} fill={\"#f50557\"}>\n\t\t\t\t\t\t\t\t\t\t\t{fixedInput}\n\t\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t\t{outputArr.map((d, i) => (\n\t\t\t\t\t\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\t\t\t\t\t\t\tx={100 + 100 * i}\n\t\t\t\t\t\t\t\t\t\t\t\t\ty={0}\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth={32}\n\t\t\t\t\t\t\t\t\t\t\t\t\theight={32}\n\t\t\t\t\t\t\t\t\t\t\t\t\tfill=\"lightgrey\"\n\t\t\t\t\t\t\t\t\t\t\t\t></rect>\n\t\t\t\t\t\t\t\t\t\t\t\t<text x={111 + 100 * i} y={22}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{i + 1}\n\t\t\t\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\t\t\td={`M${132 + 100 * i} 16, ${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t200 + 100 * i\n\t\t\t\t\t\t\t\t\t\t\t\t\t} 16`}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstroke={d.color}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstrokeDasharray=\"25, 4\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tstrokeWidth={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ti < 2\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 3 *\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tweights[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ti + 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t] +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  0.2\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\t\t\t\t\tx={140 + 100 * i}\n\t\t\t\t\t\t\t\t\t\t\t\t\ty={40}\n\t\t\t\t\t\t\t\t\t\t\t\t\tfill={d.color}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{d.output}\n\t\t\t\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\tneuron1(\n\t\t\t\t\t\t\t\t<Typography color=\"secondary\" variant=\"inline\">\n\t\t\t\t\t\t\t\t\t{fixedInput}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) = {weights[0]}(\n\t\t\t\t\t\t\t\t<Typography color=\"secondary\" variant=\"inline\">\n\t\t\t\t\t\t\t\t\t{fixedInput}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) + {biases[0]} ={\" \"}\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#8db600\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output1}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\tneuron2(\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#8db600\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output1}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) = {weights[1]}(\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#8db600\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output1}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) + {biases[1]} ={\" \"}\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#FF8F00\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output2}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\tneuron3(\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#FF8F00\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output2}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) = {weights[2]}(\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#FF8F00\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output2}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) + {biases[2]}={\" \"}\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"blue\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output3}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\tawait this.initParams();\n\t\t\t\t\t\t\t\t\t//this.compute(this.state.input);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tnew Weights and biases\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t</Card>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t}\n}\n\nexport default NestedFunction;\n","import React from \"react\";\nimport LinearFunction from \"./LinearFunction\";\nimport NestedFunction from \"./NestedFunction\";\nimport { Box, Card, CardContent, Typography } from \"@material-ui/core\";\nconst Explanation = () => (\n\t<Box justifyContent=\"center\" display=\"flex\" marginTop={5}>\n\t\t<Box width={800}>\n\t\t\t<Card style={{ padding: \"1em\" }}>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Typography variant=\"h3\" gutterBottom>\n\t\t\t\t\t\tWhat is <i>Backpropagation</i>?\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\n\t\t\t\t\t\tTLDR; Backpropagation tells us about how the loss is\n\t\t\t\t\t\taffected.\n\t\t\t\t\t</Typography>\n\t\t\t\t</CardContent>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Typography variant=\"h4\" gutterBottom>\n\t\t\t\t\t\tOverview\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<Typography variant=\"h6\" gutterBottom>\n\t\t\t\t\t\t&emsp;1. Neural Network Summary\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"h6\" gutterBottom>\n\t\t\t\t\t\t&emsp;2. What is Loss?\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"h6\" gutterBottom>\n\t\t\t\t\t\t&emsp;3. Answering the question: What is{\" \"}\n\t\t\t\t\t\t<i>Backpropagation</i>?\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"h6\" gutterBottom>\n\t\t\t\t\t\t&emsp;4. What comes next?\n\t\t\t\t\t</Typography>\n\t\t\t\t</CardContent>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Typography variant=\"h4\" gutterBottom>\n\t\t\t\t\t\tNeural Network Summary\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"body1\" gutterBottom>\n\t\t\t\t\t\tA <em>neural</em> network, as the name suggests, is a\n\t\t\t\t\t\tnetwork of <em>neurons</em>.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"body1\" gutterBottom>\n\t\t\t\t\t\tThink of a neuron as a function: we put a number in and\n\t\t\t\t\t\tspit a number out. And the easiest function to think\n\t\t\t\t\t\tabout is a line. e.g. f(x) = 2x + 1\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\" marginTop={2}>\n\t\t\t\t\t\t<LinearFunction />\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box\n\t\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\tmarginBottom={1}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t\tSlide to see how the output changes.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Typography variant=\"body1\" gutterBottom>\n\t\t\t\t\t\tThe main takeaway here is that by multiplying the input\n\t\t\t\t\t\tand adding a number we are changing the output and{\" \"}\n\t\t\t\t\t\t<em>adding complexity</em>.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"body1\" gutterBottom>\n\t\t\t\t\t\t<Typography variant=\"inline\" style={{ color: \"gold\" }}>\n\t\t\t\t\t\t\t&emsp;&emsp;&emsp;KEY IDEA\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t: The more complexity we add, the more different ways we\n\t\t\t\t\t\tcan change the output of the function.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"body1\" gutterBottom>\n\t\t\t\t\t\t&emsp;&emsp;&emsp;Each Neuron takes on one of these\n\t\t\t\t\t\tfunctions. We call the number multiplied by the input\n\t\t\t\t\t\tthe weight and the number that is added the bias. Every\n\t\t\t\t\t\tinput has its respective weight to add more complexity\n\t\t\t\t\t\tand there is one bias per neuron.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"body1\" gutterBottom>\n\t\t\t\t\t\t&emsp;&emsp;&emsp; Each neurons output can then be fed\n\t\t\t\t\t\tinto another neuron. And we can pass the output to\n\t\t\t\t\t\tmultiple neurons if we are feeling spicy. And to add\n\t\t\t\t\t\teven MORE complexity we can introduce activation\n\t\t\t\t\t\tfunctions which also introduces non-linearity.\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\" marginTop={2}>\n\t\t\t\t\t\t<NestedFunction />\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box\n\t\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\tmarginBottom={1}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t\tSlide to see how we can add complexity through\n\t\t\t\t\t\t\tnesting.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\n\t\t\t\t\t<Typography variant=\"body1\" gutterBottom>\n\t\t\t\t\t\tAs you can see in this three neuron network, we can\n\t\t\t\t\t\tchange the output alot by adding complexity to the\n\t\t\t\t\t\tnetwork. This will allow us to have more control of what\n\t\t\t\t\t\tthe output can be. But the next big question becomes,\n\t\t\t\t\t\thow do we leverage this and tune the weights and biases\n\t\t\t\t\t\t(the added complexity) in order to get the desired\n\t\t\t\t\t\tresult?\n\t\t\t\t\t</Typography>\n\t\t\t\t</CardContent>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Typography variant=\"h4\" gutterBottom>\n\t\t\t\t\t\tWhat is Loss?\n\t\t\t\t\t</Typography>\n\t\t\t\t</CardContent>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Typography variant=\"h4\" gutterBottom>\n\t\t\t\t\t\tWhat is <i>Backpropagation</i>?\n\t\t\t\t\t</Typography>\n\t\t\t\t</CardContent>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Typography variant=\"h4\" gutterBottom>\n\t\t\t\t\t\tWhat is Comes Next?\n\t\t\t\t\t</Typography>\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t</Box>\n\t</Box>\n);\nexport default Explanation;\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis is the class definiton and implmentation of Neuron for Nerual Network\n*/\nexport class Neuron {\n\tconstructor(weights, bias) {\n\t\tthis.weights = weights;\n\t\tthis.bias = bias;\n\t}\n\t/* Next functions are just helper functions for the operations */\n\tmult(array1, array2) {\n\t\treturn array1.map((item, i) => {\n\t\t\treturn item * array2[i];\n\t\t});\n\t}\n\tdMult(dvalues, oppositeParameter) {\n\t\treturn this.mult(dvalues, oppositeParameter);\n\t}\n\tsum(array) {\n\t\treturn array.reduce((a, b) => a + b);\n\t}\n\tdSum(dvalue, numInputs) {\n\t\tlet dSumArray = [];\n\t\tfor (let i = 0; i < numInputs; i++) {\n\t\t\tdSumArray.push(dvalue);\n\t\t}\n\t\treturn dSumArray;\n\t}\n\tlinear(input) {\n\t\treturn input;\n\t}\n\n\t/* \n\t\tPurpose: feed forward of single neuron\n\t\t@param: inputs, activation\n\t\t@store inputs, multStep, sumStep, actStep, output\n\t*/\n\tforward(inputs, activation) {\n\t\t/* Destructure the class values */\n\t\tconst { weights, bias } = this;\n\t\tconst { mult, sum } = this;\n\t\t/* propogate forward */\n\t\tconst multStep = mult(inputs, weights);\n\t\tconst sumStep = sum(multStep) + bias;\n\t\tconst actStep = activation(sumStep);\n\n\t\t/* Save values */\n\t\tthis.inputs = inputs;\n\t\tthis.multStep = multStep;\n\t\tthis.sumStep = sumStep;\n\t\tthis.actStep = actStep;\n\t\tthis.output = actStep;\n\t}\n\n\t/* \n\t\tPurpose: feed backward of single neuron\n\t\t@param: dvalue, activation\n\t\t@store inputs, multStep, sumStep, actStep, output\n\t*/\n\tbackward(dvalue, activation) {\n\t\t/* Destructure the class values */\n\t\tconst { inputs, weights, actStep } = this;\n\t\tconst { dSum, mult, sum } = this;\n\t\t/* propgate backwards */\n\t\tconst dActStep = activation(actStep) * dvalue;\n\t\tconst dSumStep = dSum(dActStep, inputs.length);\n\t\tconst dBias = dActStep;\n\t\tconst dWeights = mult(dSumStep, inputs);\n\t\tconst dInputs = mult(dSumStep, weights);\n\t\tconst dInputsSum = sum(dInputs);\n\n\t\t/* Save values */\n\t\tthis.dvalue = dvalue;\n\t\tthis.dActStep = dActStep;\n\t\tthis.dSumStep = dSumStep;\n\t\tthis.dBias = dBias;\n\t\tthis.dWeights = dWeights;\n\t\tthis.dInputs = dInputs;\n\t\tthis.dInputsSum = dInputsSum;\n\t}\n}\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\texports the losses to be used for the neural network\n\t\t\n*/\nexport class MeanSquaredErrorLoss {\n\t/* \n\t\tPurpose: feed forward of the nerual network\n\t\t@param yhat, y\n\t\t@stores y, yhat, subStep, squareStep, output\n\t*/\n\tforward(yhat, y) {\n\t\tconst subStep = yhat - y;\n\t\tconst squareStep = (this.output = Math.pow(yhat - y, 2));\n\n\t\tthis.subStep = subStep;\n\t\tthis.squareStep = squareStep;\n\t\tthis.output = squareStep;\n\t}\n\t/* \n\t\tPurpose: feed backward of the nerual network\n\t\t@stores dInputs\n\t*/\n\tbackward() {\n\t\tthis.dInputs = 2 * this.subStep;\n\t}\n}\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis creates the definiton and implemntation of the neural network in a non vectorized more manual way \n\t\tdesigned to show all the operations\n\tTODO: add the update that would update to the weights sgd style and compute forward once more to see difference\n*/\nimport { Neuron } from \"./Neuron\";\nimport { MeanSquaredErrorLoss } from \"./Loss\";\nexport class NeuralNetwork {\n\t/* here we construct the Neuron model */\n\tconstructor(shape, weights, biases) {\n\t\tthis.model = [];\n\t\tthis.loss = new MeanSquaredErrorLoss();\n\t\tthis.shape = shape;\n\n\t\t/* HERE WE CONSTRUCT THE MODEL ON CLASS CREATION */\n\t\tfor (let layer = 0; layer < weights.length; layer++) {\n\t\t\tlet dense = [];\n\t\t\tfor (let neuron = 0; neuron < weights[layer].length; neuron++) {\n\t\t\t\tdense.push(\n\t\t\t\t\tnew Neuron(weights[layer][neuron], biases[layer][neuron])\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.model.push(dense);\n\t\t}\n\t}\n\t/* Next are some helper functions */\n\tsum(array) {\n\t\treturn array.reduce((a, b) => a + b);\n\t}\n\tadd(array1, array2) {\n\t\tconst array1Length = array1.length;\n\t\tconst array2Length = array2.length;\n\t\tif (array2Length != array1Length) {\n\t\t\tconsole.error(\n\t\t\t\t`${array1Length} does not match ${array2Length}, so returned empty array`\n\t\t\t);\n\t\t\treturn [];\n\t\t} else {\n\t\t\tlet result = new Array(array1Length);\n\t\t\tfor (let i = 0; i < array1.length; i++) {\n\t\t\t\tresult[i] = array1[i] + array2[i];\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\tzeros(length) {\n\t\tlet result = new Array(length);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tresult[i] = 0;\n\t\t}\n\t\treturn result;\n\t}\n\tdReLU(input) {\n\t\treturn input > 0 ? 1 : 0;\n\t}\n\tdLinear(input) {\n\t\treturn 1;\n\t}\n\n\tReLU(input) {\n\t\treturn Math.max(0, input);\n\t}\n\n\tlinear(input) {\n\t\treturn input;\n\t}\n\n\t/* \n\t\tPurpose: to feed forward the entire layer\n\t\t@param input, label\n\t\t@store model, yhat, loss\n\t*/\n\tforward(input, label) {\n\t\tlet inputs = [input];\n\t\tconst lastLayer = this.model.length;\n\t\tconst outputNeuron = 0;\n\t\t/* First iterate through each layer */\n\t\tfor (let layer = 0; layer < lastLayer - 1; layer++) {\n\t\t\t/* Then iterate through each neuron in the layer */\n\t\t\tlet outputs = [];\n\t\t\tfor (let neuron = 0; neuron < this.model[layer].length; neuron++) {\n\t\t\t\t/* Then feed forward each individual neuron and push to output array */\n\t\t\t\tthis.model[layer][neuron].forward(inputs, this.ReLU);\n\t\t\t\toutputs.push(this.model[layer][neuron].output);\n\t\t\t}\n\n\t\t\t/* Then outputs will be the inputs for the next layer */\n\t\t\tinputs = outputs;\n\t\t}\n\t\tthis.model[lastLayer - 1][0].forward(inputs, this.linear);\n\t\tthis.yhat = this.model[lastLayer - 1][outputNeuron].output;\n\t\tthis.loss.forward(this.yhat, label);\n\t}\n\t/* \n\t\tPurpose: to feed backward the entire model per layer\n\t*/\n\tbackward() {\n\t\tconst { sum, add, zeros } = this;\n\t\tthis.loss.backward();\n\t\tlet dValues = [this.loss.dInputs];\n\t\tconst lastLayer = this.model.length;\n\t\t/* take care of output neuron */\n\t\tconst outputNeuron = 0;\n\t\tthis.model[lastLayer - 1][outputNeuron].backward(\n\t\t\tdValues[outputNeuron],\n\t\t\tthis.dLinear\n\t\t);\n\t\tdValues = this.model[lastLayer - 1][outputNeuron].dInputs;\n\t\t//dValues = [this.model[lastLayer - 1][0].dInputsSum];\n\t\t/* Iterate backwards */\n\t\t//for (let layer = lastLayer - 2; layer >= 0; layer--) {\n\t\t///* First sum the dvalues */\n\t\t//dValue = sum(dValues);\n\t\t//dValues = [];\n\t\t////dValues = zeros(this.model[layer].length);\n\t\t//for (let neuron = 0; neuron < this.model[layer].length; neuron++) {\n\t\t//this.model[layer][neuron].backward(dValue, this.dReLU);\n\t\t////this.model[layer][neuron].backward(dValues[], this.dReLU);\n\t\t//dValues.push(this.model[layer][neuron].dInputsSum);\n\t\t////dValues = add(dValues, this.model[layer][neuron].dInputs)\n\t\t//}\n\t\t//}\n\n\t\t/* We are given the dInputs from the previous output neuron in the form [neurons] called dValues */\n\n\t\t/* We want to start the second to last layer */\n\t\tfor (let layer = lastLayer - 2; layer >= 0; layer--) {\n\t\t\tlet dInputs = zeros(this.model[layer][0].inputs.length);\n\t\t\tfor (let neuron = 0; neuron < this.model[layer].length; neuron++) {\n\t\t\t\tthis.model[layer][neuron].backward(dValues[neuron], this.dReLU);\n\t\t\t\tdInputs = add(dInputs, this.model[layer][neuron].dInputs);\n\t\t\t}\n\t\t\tdValues = dInputs; //we transfer the dInputs into dValues for the next layer back\n\t\t}\n\t}\n\t/* \n\t\tPurpose: to update all the weights using gradient descent\n\t\t@param lr: learning rate\n\t*/\n\tupdate(lr) {\n\t\t/* First create the gradient descent */\n\t\tconst gd = (weight, lr, dweight) => weight - lr * dweight;\n\t\t/* Iterate over the model */\n\t\tfor (let layer = 0; layer < this.model.length; layer++) {\n\t\t\tfor (let neuron = 0; neuron < this.model[layer].length; neuron++) {\n\t\t\t\tfor (\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\ti < this.model[layer][neuron].dWeights.length;\n\t\t\t\t\ti++\n\t\t\t\t) {\n\t\t\t\t\tconst newWeights = gd(\n\t\t\t\t\t\tthis.model[layer][neuron].weights[i],\n\t\t\t\t\t\tlr,\n\t\t\t\t\t\tthis.model[layer][neuron].dWeights[i]\n\t\t\t\t\t);\n\t\t\t\t\tconst newBias = gd(\n\t\t\t\t\t\tthis.model[layer][neuron].bias,\n\t\t\t\t\t\tlr,\n\t\t\t\t\t\tthis.model[layer][neuron].dBias\n\t\t\t\t\t);\n\n\t\t\t\t\t/* Formally update the model weights */\n\t\t\t\t\tthis.model[layer][neuron].weights[i] = newWeights;\n\t\t\t\t\tthis.model[layer][neuron].bias[i] = newBias;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthrottleForward(neuron, layer, change, label) {\n\t\t/* First Change the value of the output of this neuron */\n\t\tconst calcChange = this.model[layer][neuron].output + change;\n\t\tthis.model[layer][neuron].output = calcChange;\n\n\t\t/* First construct the inputs for the next layer which is made out of the new outputs */\n\t\tlet inputs = [];\n\t\tfor (let n = 0; n < this.model[layer].length; n++) {\n\t\t\tinputs.push(this.model[layer][n].output);\n\t\t}\n\n\t\tconst lastLayer = this.model.length;\n\t\tfor (let l = layer + 1; l < lastLayer - 1; l++) {\n\t\t\t/* Then iterate through each neuron in the layer */\n\t\t\tlet outputs = [];\n\t\t\tfor (let n = 0; n < this.model[l].length; n++) {\n\t\t\t\t/* Then feed forward each individual neuron and push to output array */\n\t\t\t\tthis.model[l][n].forward(inputs, this.ReLU);\n\t\t\t\toutputs.push(this.model[l][n].output);\n\t\t\t}\n\n\t\t\t/* Then outputs will be the inputs for the next layer */\n\t\t\tinputs = outputs;\n\t\t}\n\t\tthis.model[lastLayer - 1][0].forward(inputs, this.linear);\n\t\tthis.yhat = this.model[lastLayer - 1][0].output;\n\t\tthis.loss.forward(this.yhat, label);\n\t}\n}\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tExports some tools that make it easier to deal with the data\n*/\n\n/* \n\tPurpose: format the weight array given from tensorflow\n\t@param uweights (unformatted weights), shape\n\t@return layer (formated weights per layer)\n*/\nexport function formatWeightArray(uweights, shape) {\n\tlet layer = [];\n\t/* Increment over each layer l */\n\tfor (let l = 0; l < uweights.length; l++) {\n\t\t/* First num in shape is input neuron which is why we skip here by adding 1 */\n\t\tlet increment = shape[l + 1];\n\t\tlet weightSet = [];\n\t\t/* Increment over each neuron */\n\t\tfor (let t = 0; t < increment; t++) {\n\t\t\tlet weights = [];\n\t\t\t/* Increment over each weight per neuron */\n\t\t\tfor (let w = t; w < uweights[l].length; w += increment) {\n\t\t\t\tweights.push(uweights[l][w]);\n\t\t\t}\n\t\t\tweightSet.push(weights);\n\t\t}\n\t\tlayer.push(weightSet);\n\t}\n\treturn layer;\n}\n\n/* \n\tPurpose: to turn a 2d array into the same array but fixed to a certian number of numbers/figures\n\t@param arr  (not fixed array), fixed\n\t@return arr (fixed array)\n*/\nexport function toFunc2DArray(arr, fixed) {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tfor (let e = 0; e < arr[i].length; e++) {\n\t\t\tarr[i][e] = +arr[i][e].toFixed(fixed);\n\t\t}\n\t}\n\treturn arr;\n}\n\n/* \n\tPurpose: Flattens the array\n\t@param array\n\t@return flattenedArray\n*/\nexport function flatten(array) {\n\tlet flattendArray = [];\n\tfor (let i = 0; i < array.length; i++) {\n\t\tfor (let e = 0; e < array[i].length; e++) {\n\t\t\tflattendArray.push(array[i][e]);\n\t\t}\n\t}\n\treturn flattendArray;\n}\n\n/* \n\tPurpose: generate random integer from 0 to given paramter\n\t@param max\n\t@return Number [0,max)\n*/\nexport function getRandomInt(max) {\n\treturn Math.floor(Math.random() * Math.floor(max));\n}\n\n/* \n\tPurpose: turn tensor to array\n\t@param tensor \n\t@return array\n*/\nexport function tensorToArray(tensor) {\n\treturn Array.from(tensor.dataSync());\n}\n","/* \n  Donny Bertucci: @xnought\n  Summary: \n    This file acts as the highest state and act as the controls \n    for the entire application\n*/\nimport React, { Component } from \"react\";\nimport {\n\tTypography,\n\tBox,\n\tAppBar,\n\tToolbar,\n\tCard,\n\tCardContent,\n\tIconButton,\n\tCardActions,\n\tChip,\n\tButton,\n\tFab,\n\tSlider,\n\tTooltip,\n} from \"@material-ui/core\";\nimport { Replay, SlowMotionVideo, PlayArrow, Stop } from \"@material-ui/icons\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as d3 from \"d3\";\nimport {\n\tPlayGround,\n\tScatterPlot,\n\tLoss,\n\tExplanation,\n} from \"./components/exports\";\nimport { NeuralNetwork, tools } from \"./nn/exports\";\nimport \"./App.css\";\nconst { flatten, formatWeightArray, tensorToArray } = tools;\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t/* Treat the app state as the global state */\n\t\tthis.state = {\n\t\t\tloss: null,\n\t\t\tduringEpoch: false,\n\t\t\tshape: [1, 8, 8, 1],\n\t\t\tepoch: 0,\n\t\t\tyhat: [],\n\t\t\tbiasesData: [],\n\t\t\tweightsData: [],\n\t\t\tlr: 0.01,\n\t\t\tdata: {\n\t\t\t\tX: [],\n\t\t\t\ty: [],\n\t\t\t},\n\t\t\tscale: 5,\n\t\t\tcurve: \"sin\",\n\t\t\tcontrols: {\n\t\t\t\tplaying: false,\n\t\t\t\tspeed: 0,\n\t\t\t},\n\t\t\tnshow: 0,\n\t\t\tbshow: Infinity,\n\t\t\tmicroShow: 0,\n\t\t\trects: [],\n\t\t\tweights: [],\n\t\t\tlinks: [],\n\t\t\tnn: null,\n\t\t\tmode: false,\n\t\t\ttrans: null,\n\t\t\tmacro: false,\n\t\t\tdirection: \"edgePaused\",\n\t\t\tsubEpoch: \"forward\",\n\t\t\tsliderVal: 2,\n\t\t\tvSliderVal: 2,\n\t\t\tvSliderConv: 6,\n\t\t\tlossArray: [],\n\t\t};\n\n\t\t/* Prototype: Functions Binds to \"this\" */\n\t\t/* Main Logic */\n\t\tthis.run = this.run.bind(this);\n\t\t/* Neural Network Logic */\n\t\tthis.genTensorData = this.genTensorData.bind(this);\n\t\t/* Mutators of State */\n\t\tthis.mutate = this.mutate.bind(this);\n\n\t\tthis.train = this.train.bind(this);\n\t\tthis.printParameters = this.printParameters.bind(this);\n\t\tthis.reset = this.reset.bind(this);\n\t\tthis.asyncPause = this.asyncPause.bind(this);\n\t\tthis.resetParameters = this.resetParameters.bind(this);\n\t\tthis.changeModelLr = this.changeModelLr.bind(this);\n\t\tthis.initNeuralNetwork = this.initNeuralNetwork.bind(this);\n\t\tthis.anim = this.anim.bind(this);\n\t}\n\n\tanim = async (nn) => {\n\t\tconst timer = (ms) => new Promise((res) => setTimeout(res, ms));\n\t\tconst ms = 500;\n\t\tconst l = this.state.shape.reduce((a, b) => a + b) - 1;\n\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tsubEpoch: \"forward\",\n\t\t\tdirection: \"edgeForward\",\n\t\t\tnshow: 0,\n\t\t\tbshow: Infinity,\n\t\t});\n\t\tawait timer(ms);\n\n\t\tthis.setState({ nshow: 1 });\n\t\tlet i = 1;\n\t\twhile (this.state.nshow < l) {\n\t\t\tlet curr = this.state.shape[i];\n\t\t\tawait timer(ms);\n\t\t\tthis.setState({\n\t\t\t\tnshow: (this.state.nshow += curr),\n\t\t\t});\n\t\t\ti++;\n\t\t}\n\t\tawait timer(ms);\n\t\tthis.setState({\n\t\t\tnshow: (this.state.nshow += 1),\n\t\t});\n\t\tawait timer(ms);\n\t\tthis.setState({\n\t\t\tnshow: (this.state.nshow += 1),\n\t\t});\n\n\t\tthis.setState({ bshow: Infinity });\n\t\t/* Pause! now go backward */\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tdirection: \"edgeBackward\",\n\t\t\tsubEpoch: \"backward\",\n\t\t});\n\n\t\tawait timer(ms);\n\t\tthis.setState({ bshow: l });\n\n\t\t//await timer(ms);\n\t\t//this.setState({ bshow: (this.state.bshow -= 1) });\n\n\t\t//let e = this.state.shape.length - 2;\n\t\t//while (this.state.bshow > 0) {\n\t\t//let curr = this.state.shape[e];\n\t\t//await timer(ms);\n\t\t//this.setState({\n\t\t//bshow: (this.state.bshow -= curr),\n\t\t//});\n\t\t//e--;\n\t\t//}\n\n\t\tfor (let layer = nn.model.length - 1; layer >= 0; layer--) {\n\t\t\tfor (\n\t\t\t\tlet neuron = nn.model[layer].length - 1;\n\t\t\t\tneuron >= 0;\n\t\t\t\tneuron--\n\t\t\t) {\n\t\t\t\tfor (let i = 0; i < 0.01; i += 0.001) {\n\t\t\t\t\tnn.throttleForward(neuron, layer, i, this.state.data.y[0]);\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\ttrans: nn,\n\t\t\t\t\t});\n\t\t\t\t\tawait timer(1);\n\t\t\t\t}\n\t\t\t\tfor (let i = 0.01; i > 0; i -= 0.001) {\n\t\t\t\t\tnn.throttleForward(neuron, layer, -i, this.state.data.y[0]);\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\ttrans: nn,\n\t\t\t\t\t});\n\t\t\t\t\tawait timer(1);\n\t\t\t\t}\n\t\t\t\tawait timer(1);\n\t\t\t\tthis.setState({\n\t\t\t\t\tbshow: (this.state.bshow -= 1),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tawait timer(1000);\n\t\tthis.setState({ direction: \"edgePaused\" });\n\t};\n\tinitNeuralNetwork(shape) {\n\t\tif (!this.state.controls.playing) {\n\t\t\tconst rw = 32;\n\t\t\tconst rh = 32;\n\t\t\tlet xScale = d3.scaleLinear().domain([0, 100]).range([50, 750]);\n\t\t\tlet yScale = d3.scaleLinear().domain([0, 100]).range([500, 0]);\n\t\t\tlet start = { x: 50 - rw / 2, y: 250 - rh / 2 };\n\t\t\tlet stop = { x: 750 - rw / 2, y: 250 - rh / 2 };\n\t\t\tconst link = d3\n\t\t\t\t.linkHorizontal()\n\t\t\t\t.x((d) => d.x + rw / 2)\n\t\t\t\t.y((d) => d.y + rh / 2);\n\t\t\t/* First we figure our how to create the neurons */\n\t\t\t/* GIVEN A SHAPE OF [1,2,2,1] */\n\t\t\tconst layerProportion = [0, 25, 50, 75, 0];\n\t\t\tlet ns = [];\n\t\t\tlet flatns = [];\n\t\t\tns.push([start]);\n\t\t\tflatns.push(start);\n\t\t\tfor (let layer = 1; layer < shape.length - 1; layer++) {\n\t\t\t\tlet dense = [];\n\t\t\t\tfor (let neuron = 0; neuron < shape[layer]; neuron++) {\n\t\t\t\t\t/* First generate neuron */\n\t\t\t\t\tlet aaron = {\n\t\t\t\t\t\tx: xScale(layerProportion[layer]) - rw / 2,\n\t\t\t\t\t\ty: yScale(92 - neuron * 12) - rh / 2,\n\t\t\t\t\t};\n\t\t\t\t\tdense.push(aaron);\n\t\t\t\t\tflatns.push(aaron);\n\t\t\t\t}\n\t\t\t\tns.push(dense);\n\t\t\t}\n\t\t\tflatns.push(stop);\n\t\t\tns.push([stop]);\n\n\t\t\tif (this.state.mode && false) {\n\t\t\t\t/* We start to iterate over ns */\n\t\t\t\tlet links = [];\n\t\t\t\tfor (let layer = shape.length - 1; layer > 0; layer--) {\n\t\t\t\t\tlet interval = -14.5;\n\t\t\t\t\tfor (\n\t\t\t\t\t\tlet prevNeuron = 0;\n\t\t\t\t\t\tprevNeuron < shape[layer - 1];\n\t\t\t\t\t\tprevNeuron++\n\t\t\t\t\t) {\n\t\t\t\t\t\tfor (let neuron = 0; neuron < shape[layer]; neuron++) {\n\t\t\t\t\t\t\tlinks.push(\n\t\t\t\t\t\t\t\tlink({\n\t\t\t\t\t\t\t\t\tsource: {\n\t\t\t\t\t\t\t\t\t\tx: ns[layer - 1][prevNeuron].x + 15.5,\n\t\t\t\t\t\t\t\t\t\ty: ns[layer - 1][prevNeuron].y,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\t\tx: ns[layer][neuron].x - 15,\n\t\t\t\t\t\t\t\t\t\ty: ns[layer][neuron].y + interval,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinterval += 3.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.setState({ rects: flatns });\n\t\t\t\tthis.setState({ links });\n\t\t\t} else {\n\t\t\t\t/* We start to iterate over ns */\n\t\t\t\tlet links = [];\n\t\t\t\tfor (let layer = shape.length - 1; layer > 0; layer--) {\n\t\t\t\t\tlet interval = -14.5;\n\t\t\t\t\tfor (\n\t\t\t\t\t\tlet prevNeuron = 0;\n\t\t\t\t\t\tprevNeuron < shape[layer - 1];\n\t\t\t\t\t\tprevNeuron++\n\t\t\t\t\t) {\n\t\t\t\t\t\tfor (let neuron = 0; neuron < shape[layer]; neuron++) {\n\t\t\t\t\t\t\tlinks.push(\n\t\t\t\t\t\t\t\tlink({\n\t\t\t\t\t\t\t\t\tsource: ns[layer - 1][prevNeuron],\n\t\t\t\t\t\t\t\t\ttarget: ns[layer][neuron],\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinterval += 3.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.setState({ rects: flatns });\n\t\t\t\tthis.setState({ links });\n\t\t\t}\n\t\t} else if (this.state.controls.playing) {\n\t\t\tlet flattenedWeights = flatten(this.state.weightsData);\n\t\t\tthis.setState({ weights: flattenedWeights });\n\t\t}\n\t}\n\n\tchangeModelLr(lrChange) {\n\t\ttf.tidy(() => {\n\t\t\tthis.setState({ lr: lrChange });\n\t\t\treturn undefined;\n\t\t});\n\t}\n\tasync run() {\n\t\tlet playing = !this.state.controls.playing;\n\t\tthis.mutate(\"controls\", \"playing\", playing);\n\t\tif (playing === true) {\n\t\t\tawait this.train(this.state.data.X, this.state.data.y);\n\t\t\tconsole.log(\"epic\");\n\t\t}\n\t}\n\n\tmutate(key, subkey, value) {\n\t\t/* copy of the state */\n\t\ttf.tidy(() => {\n\t\t\tlet state = { ...this.state };\n\t\t\t/* If this.state.key.subkey exists */\n\t\t\tif (key in state && subkey in state[key]) {\n\t\t\t\t/* Mutate the state */\n\t\t\t\tstate[key][subkey] = value;\n\t\t\t\tthis.setState({ state });\n\t\t\t} else {\n\t\t\t\tconsole.error(\"Could not be found in state\");\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\taddModel(model) {\n\t\treturn tf.tidy(() => {\n\t\t\tlet shape = this.state.shape;\n\t\t\tmodel.add(\n\t\t\t\ttf.layers.dense({\n\t\t\t\t\tinputShape: [1],\n\t\t\t\t\tunits: shape[1],\n\t\t\t\t\tactivation: \"relu\",\n\t\t\t\t\tuseBias: true,\n\t\t\t\t})\n\t\t\t);\n\t\t\tfor (let layer = 2; layer < shape.length - 1; layer++) {\n\t\t\t\tmodel.add(\n\t\t\t\t\ttf.layers.dense({\n\t\t\t\t\t\tunits: shape[layer],\n\t\t\t\t\t\tactivation: \"relu\",\n\t\t\t\t\t\tuseBias: true,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t\tmodel.add(\n\t\t\t\ttf.layers.dense({\n\t\t\t\t\tunits: 1,\n\t\t\t\t\tactivation: \"linear\",\n\t\t\t\t\tuseBias: true,\n\t\t\t\t})\n\t\t\t);\n\n\t\t\treturn model;\n\t\t});\n\t}\n\tmodelCompile(lr) {\n\t\tlet model = tf.sequential();\n\t\tthis.addModel(model);\n\t\tmodel.compile({\n\t\t\toptimizer: tf.train.sgd(lr),\n\t\t\tloss: \"meanSquaredError\",\n\t\t});\n\t\treturn model;\n\t}\n\tasync train(X, y) {\n\t\tconst XTensor = tf.tidy(() => {\n\t\t\treturn tf.tensor(X);\n\t\t});\n\t\tconst yTensor = tf.tidy(() => {\n\t\t\treturn tf.tensor(y);\n\t\t});\n\n\t\tconst model = tf.tidy(() => {\n\t\t\treturn this.state.nn;\n\t\t});\n\t\tconst timer = (ms) => new Promise((res) => setTimeout(res, ms));\n\t\t///* Until broken by user */\n\t\tlet play = this.state.controls.playing;\n\t\t////let epoch = 0;\n\t\twhile (play !== false) {\n\t\t\tthis.setState({ duringEpoch: true });\n\t\t\tconst { playing /* speed */ } = this.state.controls;\n\t\t\tplay = playing;\n\t\t\tawait model.fit(XTensor, yTensor, {\n\t\t\t\tepochs: 1,\n\t\t\t});\n\t\t\ttf.tidy(() => {\n\t\t\t\tlet yhatTensor = model.predict(XTensor);\n\t\t\t\tlet yhat = tensorToArray(yhatTensor);\n\t\t\t\tlet loss = tf.losses.meanSquaredError(y, yhat).dataSync()[0];\n\t\t\t\tthis.printParameters(model, loss, yhat, this.state.epoch + 1);\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t\tthis.setState({ duringEpoch: false });\n\t\t\tawait timer(this.state.controls.speed);\n\t\t}\n\t\tthis.setState({ nn: model });\n\t\ttf.dispose(XTensor);\n\t\ttf.dispose(yTensor);\n\t}\n\tasync genTensorData(eqn, scaled) {\n\t\tawait tf.ready();\n\t\ttf.tidy(() => {\n\t\t\tlet XTensor = tf.linspace(-this.state.scale, this.state.scale, 50);\n\t\t\tlet yTensor;\n\t\t\tyTensor = tf.mul(eqn(XTensor), scaled);\n\t\t\tlet yhatTensor = tf.zerosLike(XTensor);\n\t\t\tlet X = tensorToArray(XTensor);\n\t\t\tlet y = tensorToArray(yTensor);\n\t\t\tlet yhat = tensorToArray(yhatTensor);\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\tdata: { X, y },\n\t\t\t\tyhat,\n\t\t\t});\n\t\t\treturn undefined;\n\t\t});\n\t}\n\tprintParameters(model, loss, yhat, epoch) {\n\t\tlet weightsData = [];\n\t\tlet biasesData = [];\n\t\tfor (let i = 0; i < model.getWeights().length; i++) {\n\t\t\t(i % 2 === 0 ? weightsData : biasesData).push(\n\t\t\t\tArray.from(model.getWeights()[i].dataSync())\n\t\t\t);\n\t\t}\n\n\t\tlet lossArray = [...this.state.lossArray, loss];\n\t\tthis.setState({\n\t\t\tbiasesData,\n\t\t\tweightsData,\n\t\t\tloss,\n\t\t\tyhat,\n\t\t\tepoch,\n\t\t\tlossArray,\n\t\t});\n\t\tthis.initNeuralNetwork(this.state.shape);\n\t}\n\tasync asyncPause() {\n\t\tthis.setState({ controls: { ...this.state.controls, playing: false } });\n\t}\n\tasync resetParameters(scale) {\n\t\ttf.dispose(this.state.nn);\n\t\tconst { curve } = this.state;\n\t\tlet eqn;\n\t\tlet optimizer;\n\t\ttf.tidy(() => {\n\t\t\tif (curve === \"sin\") {\n\t\t\t\teqn = tf.sin;\n\t\t\t} else if (curve === \"tanh\") {\n\t\t\t\teqn = tf.tanh;\n\t\t\t} else if (curve === \"cos\") {\n\t\t\t\teqn = tf.cos;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t});\n\t\tawait this.genTensorData(eqn, scale);\n\t\tconst model = tf.tidy(() => {\n\t\t\treturn this.modelCompile(this.state.lr);\n\t\t});\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tepoch: 0,\n\t\t\tloss: null,\n\t\t\tweights: [],\n\t\t\tnn: model,\n\t\t\tlossArray: [],\n\t\t});\n\t\ttf.dispose(optimizer);\n\t}\n\n\tasync reset(scale) {\n\t\tthis.asyncPause();\n\t\tthis.resetParameters(scale);\n\t}\n\tasync componentDidMount() {\n\t\ttf.setBackend(\"cpu\");\n\t\tthis.genTensorData(tf.sin, this.state.scale);\n\t\tthis.initNeuralNetwork(this.state.shape);\n\t\tconst model = tf.tidy(() => {\n\t\t\treturn this.modelCompile(0.01);\n\t\t});\n\t\tthis.setState({ nn: model });\n\t}\n\tshouldComponentUpdate() {\n\t\tif (this.state.duringEpoch) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\trender() {\n\t\t/* Destructure State*/\n\t\tconst {\n\t\t\tshape,\n\t\t\tscale,\n\t\t\ttrans,\n\t\t\tweightsData,\n\t\t\tbiasesData,\n\t\t\tyhat,\n\t\t\trects,\n\t\t\tlinks,\n\t\t\tweights,\n\t\t\tmode,\n\t\t\tepoch,\n\t\t\tcurve,\n\t\t\tlr,\n\t\t\tloss,\n\t\t\tcontrols,\n\t\t\tdata,\n\t\t} = this.state;\n\t\tconst { playing, speed } = controls;\n\t\tconst { X, y } = data;\n\n\t\tlet newShape = [...shape];\n\t\tnewShape.splice(0, 1);\n\t\tnewShape.splice(newShape.length - 1, 1);\n\t\tconst lrs = [0.001, 0.005, 0.01, 0.05, 0.1];\n\t\tconst dataSets = [\n\t\t\t{ label: \"sin\", eqn: tf.sin, scale: 5 },\n\t\t\t{ label: \"cos\", eqn: tf.cos, scale: 5 },\n\t\t\t{ label: \"tanh\", eqn: tf.tanh, scale: 5 },\n\t\t];\n\n\t\t/* Destructure render */\n\t\tconst PlayButtonClick = (\n\t\t\t// eslint-disable-next-line\n\t\t\t<Fab\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: !this.state.controls.playing\n\t\t\t\t\t\t? \"#175676\"\n\t\t\t\t\t\t: \"#D62839\",\n\t\t\t\t\tcolor: \"white\",\n\t\t\t\t}}\n\t\t\t\tdisableTouchRipple\n\t\t\t\tonClick={() => this.run()}\n\t\t\t>\n\t\t\t\t{!playing ? <PlayArrow /> : <Stop />}\n\t\t\t</Fab>\n\t\t);\n\t\tconst controlsReg = (\n\t\t\t<CardActions>\n\t\t\t\t<Tooltip title=\"reset\" arrow>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tdisabled={playing}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Replay />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t\t{PlayButtonClick}\n\t\t\t\t<Tooltip title=\"slomo\" arrow>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: speed === 0 ? \"grey\" : \"#FFC006\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tcontrols: {\n\t\t\t\t\t\t\t\t\t...controls,\n\t\t\t\t\t\t\t\t\tspeed: speed === 0 ? 100 : 0,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SlowMotionVideo />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t</CardActions>\n\t\t);\n\t\tconst controlsBackProp = (\n\t\t\t<CardActions>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\tawait this.anim(this.state.trans);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tREPLAY\n\t\t\t\t</Button>\n\t\t\t</CardActions>\n\t\t);\n\n\t\tconst controlCenter = (\n\t\t\t<Box width={400}>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: \"#4BA3C3\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tControl Center\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<div on></div>\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t\t\t{this.state.mode\n\t\t\t\t\t\t\t\t\t\t? \"Click to go back\"\n\t\t\t\t\t\t\t\t\t\t: \"Click to see Backpropagation\"}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tarrow\n\t\t\t\t\t\t\tplacement=\"right-start\"\n\t\t\t\t\t\t\topen={this.state.loss != null}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tdisabled={this.state.loss == null}\n\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\tconst timer = (ms) =>\n\t\t\t\t\t\t\t\t\t\tnew Promise((res) =>\n\t\t\t\t\t\t\t\t\t\t\tsetTimeout(res, ms)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tlet formattedWeights = formatWeightArray(\n\t\t\t\t\t\t\t\t\t\tweightsData,\n\t\t\t\t\t\t\t\t\t\tshape\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tlet nn = new NeuralNetwork(\n\t\t\t\t\t\t\t\t\t\tshape,\n\t\t\t\t\t\t\t\t\t\tformattedWeights,\n\t\t\t\t\t\t\t\t\t\tbiasesData\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tnn.forward(X[0], y[0]);\n\t\t\t\t\t\t\t\t\tnn.backward();\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t...this.state,\n\t\t\t\t\t\t\t\t\t\ttrans: nn,\n\t\t\t\t\t\t\t\t\t\tmode: !mode,\n\t\t\t\t\t\t\t\t\t\tcontrols: {\n\t\t\t\t\t\t\t\t\t\t\t...this.state.controls,\n\t\t\t\t\t\t\t\t\t\t\tplaying: false,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tawait timer(1000);\n\t\t\t\t\t\t\t\t\tthis.setState({ nshow: 1 });\n\t\t\t\t\t\t\t\t\tawait this.anim(nn);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography variant=\"h4\">\n\t\t\t\t\t\t\t\t\tEpoch: {epoch}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\tloss:\n\t\t\t\t\t\t\t{loss == null ? \"\" : loss.toPrecision(6)}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t{this.state.mode ? controlsBackProp : controlsReg}\n\t\t\t\t\t\t<CardActions></CardActions>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\n\t\t\t\t<Box marginTop={5}>\n\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: \"#4BA3C3\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCustomization\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t\t\t\tLearning Rate\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t{lrs.map((num, i) => (\n\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\tdisabled={playing}\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tlabel={`${num}`}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\t\t\t\tlr === num ? \"white\" : \"grey\",\n\t\t\t\t\t\t\t\t\t\t\tbackground:\n\t\t\t\t\t\t\t\t\t\t\t\tlr === num\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"#175676\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"lightgrey\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\ttf.tidy(() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.changeModelLr(num);\n\t\t\t\t\t\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Chip>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t\t\t\tData Set\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t{dataSets.map((item, i) => (\n\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\tdisabled={playing}\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tlabel={item.label}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\t\t\t\tcurve === item.label\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"white\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"grey\",\n\t\t\t\t\t\t\t\t\t\t\tbackground:\n\t\t\t\t\t\t\t\t\t\t\t\tcurve === item.label\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"#175676\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"lightgrey\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\tshape,\n\t\t\t\t\t\t\t\t\t\t\t\tcurve: item.label,\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t\t\t\t\t\ttf.tidy(() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.genTensorData(\n\t\t\t\t\t\t\t\t\t\t\t\t\titem.eqn,\n\t\t\t\t\t\t\t\t\t\t\t\t\titem.scale\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Chip>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t\t\t\tNeurons\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#175676\" }}\n\t\t\t\t\t\t\t\t\tdefaultValue={2}\n\t\t\t\t\t\t\t\t\tdisabled={playing}\n\t\t\t\t\t\t\t\t\taria-labelledby=\"discrete-slider\"\n\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\t\t\tmarks\n\t\t\t\t\t\t\t\t\tonChange={(e, n) => {\n\t\t\t\t\t\t\t\t\t\tthis.setState({ sliderVal: n });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\t\tmax={8}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={playing}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tlet a = shape;\n\t\t\t\t\t\t\t\t\t\tconsole.log(a.length);\n\t\t\t\t\t\t\t\t\t\tif (a.length < 5) {\n\t\t\t\t\t\t\t\t\t\t\ta[\n\t\t\t\t\t\t\t\t\t\t\t\ta.length - 1\n\t\t\t\t\t\t\t\t\t\t\t] = this.state.sliderVal;\n\t\t\t\t\t\t\t\t\t\t\ta.push(1);\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ shape: a });\n\t\t\t\t\t\t\t\t\t\t\tthis.initNeuralNetwork(a);\n\t\t\t\t\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t+\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={playing}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tlet a = shape;\n\t\t\t\t\t\t\t\t\t\tconsole.log(a.length);\n\t\t\t\t\t\t\t\t\t\tif (a.length > 2) {\n\t\t\t\t\t\t\t\t\t\t\ta.splice(a.length - 2, 1);\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ shape: a });\n\t\t\t\t\t\t\t\t\t\t\tthis.initNeuralNetwork(a);\n\t\t\t\t\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t–\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t\tconst scatter = (\n\t\t\t<Box marginLeft={10}>\n\t\t\t\t<Box>\n\t\t\t\t\t<ScatterPlot\n\t\t\t\t\t\twidth={300}\n\t\t\t\t\t\theight={300}\n\t\t\t\t\t\tpadding={0}\n\t\t\t\t\t\tstart={-scale}\n\t\t\t\t\t\tstop={scale}\n\t\t\t\t\t\tX={X}\n\t\t\t\t\t\ty={y}\n\t\t\t\t\t\tyhat={yhat}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t\t<Box marginTop={10}>\n\t\t\t\t\t<Loss lossArray={this.state.lossArray} loss={loss} />\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\n\t\treturn (\n\t\t\t<div id=\"app\">\n\t\t\t\t<div className=\"regular\">\n\t\t\t\t\t<AppBar\n\t\t\t\t\t\tposition=\"fixed\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackground: false ? \"#f50257\" : \"#175676\",\n\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t\tBackpropagation Explainer\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</AppBar>\n\n\t\t\t\t\t<Card\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackground: \"#FAFAFA\",\n\t\t\t\t\t\t\toutlineColor: \"white\",\n\t\t\t\t\t\t\tpaddingBottom: \"1em\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tclassName=\"regular\"\n\t\t\t\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\t\t\tmarginTop={10}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{controlCenter}\n\t\t\t\t\t\t\t\t<Box marginLeft={10}>\n\t\t\t\t\t\t\t\t\t<PlayGround\n\t\t\t\t\t\t\t\t\t\ttrans={trans}\n\t\t\t\t\t\t\t\t\t\tinput={X[0]}\n\t\t\t\t\t\t\t\t\t\tlabel={y[0]}\n\t\t\t\t\t\t\t\t\t\tshapedWeights={weightsData}\n\t\t\t\t\t\t\t\t\t\tshape={shape}\n\t\t\t\t\t\t\t\t\t\tbiases={biasesData}\n\t\t\t\t\t\t\t\t\t\tweights={weights}\n\t\t\t\t\t\t\t\t\t\trects={rects}\n\t\t\t\t\t\t\t\t\t\tlinks={links}\n\t\t\t\t\t\t\t\t\t\tplaying={\n\t\t\t\t\t\t\t\t\t\t\tplaying\n\t\t\t\t\t\t\t\t\t\t\t\t? speed === 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"edgeForward\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"edgeSlowed\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"edgePaused\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tshow={playing}\n\t\t\t\t\t\t\t\t\t\tnshow={this.state.nshow}\n\t\t\t\t\t\t\t\t\t\tbshow={this.state.bshow}\n\t\t\t\t\t\t\t\t\t\tmicroShow={this.state.microShow}\n\t\t\t\t\t\t\t\t\t\tmode={mode}\n\t\t\t\t\t\t\t\t\t\tbackward={this.state.direction}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tthis.asyncPause();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></PlayGround>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t{scatter}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\n\t\t\t\t<Explanation />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}