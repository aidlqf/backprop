{"version":3,"sources":["components/implementations/subComponents/Arrow.js","components/implementations/subComponents/NeuralNetworkComponent.js","components/implementations/subComponents/ScatterPlot.js","components/implementations/subComponents/AnimatedScatterPlot.js","components/implementations/subComponents/Loss.js","components/implementations/article/Typeset.js","components/implementations/article/assets/navSVG/structMan.svg","components/implementations/article/assets/navSVG/structArt.svg","components/implementations/article/assets/navSVG/structNN.svg","components/implementations/article/assets/navSVG/structLin.svg","components/implementations/article/assets/navSVG/structAck.svg","components/implementations/article/Nav.js","components/implementations/article/ContourLoss.js","components/implementations/article/assets/autoKey.svg","components/implementations/article/AutoTool.js","components/implementations/article/ManualTool.js","components/implementations/article/NestedFunction.js","components/implementations/article/ToggleForward.js","components/implementations/article/assets/summary.svg","components/implementations/article/assets/diagramSVG/forward-key.svg","components/implementations/article/assets/diagramSVG/forward.svg","components/implementations/article/assets/diagramSVG/forwardComputation.svg","components/implementations/article/assets/diagramSVG/backward-key.svg","components/implementations/article/assets/diagramSVG/backward.svg","components/implementations/article/assets/diagramSVG/backwardComputation.svg","components/implementations/article/Article.js","components/implementations/article/assets/headerTitle.svg","components/implementations/article/Header.js","components/implementations/mainComponent/assets/singleSummary.svg","components/implementations/mainComponent/assets/epochMode.png","components/implementations/mainComponent/assets/key.svg","nnMiniLibrary/implementations/Neuron.js","nnMiniLibrary/implementations/Loss.js","nnMiniLibrary/implementations/NeuralNetwork.js","nnMiniLibrary/implementations/Tools.js","Utils/implementations/Draw.js","components/implementations/mainComponent/EPOCHTool.js","components/implementations/article/Acknowledge.js","App.js","reportWebVitals.js","index.js"],"names":["Arrow","source","target","color","isAnimating","id","orient","markerWidth","markerHeight","refX","refY","d","fill","className","markerEnd","stroke","x","y","NeuralNetworkComponent","props","isUndefined","val","isUndefined3d","array3d","i","j","k","VerticalArrow","xStart","yStart","length","dirIsUp","vector","subEpoch","playing","mode","shapedLinks","shapedWeights","shapedRects","miniNN","keyFrameLoss","keyFrameLayer","lr","colorOfMotion","graphConnectionColor","squareWidth","link","d3","nn","width","height","overflow","map","layer","neuron","moving","colorChange","currentWeight","sw","Math","abs","s","gradient","model","dWeights","gradientWithLr","select","transition","duration","ease","attr","strokeWidth","actColor","beforeUpdate","brighter","actStep","dActStep","fontFamily","fontSize","ScatterPlot","node","formattedPoints","selectAll","data","enter","append","_","style","start","stop","padding","xScale","domain","range","yScale","a","this","container","svg","generateScales","xAxis","scale","yAxis","call","X","yhat","dataSet","curve","push","remove","plotPoints","Component","AnimatedScatterPlot","pointValue","isSelected","index","selectIndex","selectStyle","defaultStyle","text","toFixed","array1","array2","potential","realYhat","zeroArray","potentialYhat","xNum","line","status","animateLineChange","updateAll","shouldNotRender","Loss","ticks","lossArray","lossMin","lossMax","$","inlineLaTeX","math","$$","blockLaTeX","Nav","backgroundColor","Box","display","justifyContent","Button","onClick","scroller","scrollTo","delay","smooth","alt","src","structArtSVG","offset","structManSVG","structLinSVG","structNNSVG","structAckSVG","ContourLoss","state","loss","m","b","summed","pow","darkness","n","values","Array","thresholds","contours","size","join","value","ms","SubTool","playButton","linreg","meanSquaredError","rsquared","hyperparams","learningRate","epochs","speed","tunableparams","generateData","bind","linearRegression","handleSlider","reset","setState","tf","yTensor","mean","dataSync","XTensor","yPred","h","len","shape","dlossdm","dlossdb","lossValue","y_pred","from","timer","Promise","res","setTimeout","upperBounds","changeSpeed","event","num","precision","marginTop","marginRight","Card","variant","CardContent","Typography","component","toPrecision","IconButton","Replay","Fab","background","disableTouchRipple","PlayArrow","Stop","SlowMotionVideo","autoKeySVG","isFinite","LinearScatter","weight","bias","show","biasColor","weightColor","lossColor","y_predTensor","output","array","increment","initDomain","initRange","computeLine","initLine","dataGenerator","filter","marginLeft","Slider","onChange","e","newLine","min","step","max","valueLabelDisplay","borderColor","NestedFunction","input","output1","output2","output3","weights","biases","compute","initParams","linfunc","w","arr","random","genRandomArray","fixedInput","outputArr","strokeDasharray","CardActions","ToggleForward","key","noKeySVG","keySVG","title","Explanation","href","content","orange","blue","orangeEM","blueEM","greenEM","pinkEM","definition","word","desc","Tooltip","placement","arrow","topic","subtopic","paper","name","disabled","ManualTool","rel","forwardNoKeySVG","forwardKeySVG","forwardComputationSVG","backwardNoKeySVG","backwardKeySVG","backwardComputationSVG","AutoTool","summarySVG","ArrowBackIos","Help","maxWidth","Header","headerTitleSVG","Neuron","item","dvalues","oppositeParameter","mult","reduce","dvalue","numInputs","dSumArray","inputs","activation","sum","multStep","sumStep","dSum","dSumStep","dBias","dInputs","dInputsSum","MeanSquaredErrorLoss","subStep","squareStep","NeuralNetwork","dense","array1Length","array2Length","console","error","result","label","lastLayer","outputs","forward","ReLU","linear","add","zeros","backward","dValues","dLinear","dReLU","gd","dweight","newWeights","newBias","formatWeightArray","uweights","l","weightSet","t","toFunc2DArray","fixed","flatten","flattendArray","getRandomInt","floor","tensorToArray","tensor","generateLinearScale","generateLink","adjustment","generateNeuronPlacement","layerProportion","startNeuron","stopNeuron","shapedNeurons","coordinate","generateLinksPlacement","linksGenerator","perLink","layerLinks","neuronLinks","nextNeuron","EPOCHTool","tensorFlowNN","epoch","cpyEpoch","biasesData","weightsData","direction","controls","stopRender","keyFrameScatter","lossSavings","lossDifference","singleInputExample","singleLabelExample","newOutput","controlCenterHelp","customizationHelp","neuralNetworkHelp","lossChange","singleInputIndex","zoom","initNeuralNetwork","run","genTensorData","mutate","train","printParameters","resetParameters","asyncPause","changeModelLr","anim","randExampleEpoch","randomInput","tools","formattedWeights","clone","update","updatedLoss","inputArray","inputArrayLength","outputArray","forwardAll","draw","splice","lrChange","subkey","inputShape","units","useBias","addModel","compile","optimizer","sgd","play","fit","batchSize","yhatTensor","predict","eqn","scaled","volume","getWeights","modelCompile","zoomFactor","document","body","clientWidth","correctZoom","dataSets","PlayButtonClick","controlsReg","FastForward","controlsBackProp","controlCenter","formatValue","Chip","scatter","times","neuralNetwork","position","bottom","left","dialogs","Dialog","PaperProps","open","DialogActions","Close","DialogContent","marginBottom","epochModePNG","Summary","singleSummarySVG","outlineColor","paddingBottom","transform","isPerson","Acknowledge","GitHub","App","ReactGa","initialize","pageview","Article","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"y1BAgCeA,EAxBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAA1B,OACb,8BACC,+BACC,wBACCC,GAAG,OACHC,OAAO,OACPC,YAAY,IACZC,aAAa,IACbC,KAAK,MACLC,KAAK,IANN,SAQC,sBAAMC,EAAE,iBAAiBC,KAAMT,QAGjC,sBACCU,UAAYT,EAAwB,SAAV,QAC1BC,GAAG,aACHS,UAAU,aACVF,KAAK,OACLG,OAAQZ,EACRQ,EAAC,WAAMV,EAAOe,EAAb,YAAkBf,EAAOgB,EAAzB,aAA+Bf,EAAOc,EAAtC,aAA4Cd,EAAOe,SC8PxCC,EA/QgB,SAACC,GAK/B,IAAMC,EAAc,SAACC,GAAD,MAAwB,qBAARA,GAM9BC,EAAgB,SAACC,EAASC,EAAGC,EAAGC,GACrC,OACCN,EAAYG,EAAQC,KACpBJ,EAAYG,EAAQC,GAAGC,KACvBL,EAAYG,EAAQC,GAAGC,GAAGC,KAOtBC,EAAgB,SAACC,EAAQC,EAAQC,EAAQC,EAAS5B,GACvD,IAAM6B,EAASD,GAAWD,EAASA,EACnC,OACC,cAAC,EAAD,CACC7B,OAAQ,CAAEe,EAAGY,EAAQX,EAAGY,GACxB3B,OAAQ,CAAEc,EAAGY,EAAQX,EAAGY,EAASG,GACjC7B,MAAOA,EACPC,YAA0B,eAAb6B,KAmBfC,EAWGf,EAXHe,QACAC,EAUGhB,EAVHgB,KACAC,EASGjB,EATHiB,YACAC,EAQGlB,EARHkB,cACAC,EAOGnB,EAPHmB,YACAC,EAMGpB,EANHoB,OACAN,EAKGd,EALHc,SACAO,EAIGrB,EAJHqB,aACAC,EAGGtB,EAHHsB,cACAC,EAEGvB,EAFHuB,GACAtC,EACGe,EADHf,YAGKuC,EAAgB,SAGhBC,EAAuB,QACvBC,EAAc,GACdC,EAAOC,MAEX/B,GAAE,SAACL,GAAD,OAAOA,EAAEK,KACXC,GAAE,SAACN,GAAD,OAAOA,EAAEM,KAGP+B,EACL,qBAAK3C,GAAG,IAAI4C,MAAM,MAAMC,OAAO,MAAMC,SAAS,UAA9C,SACC,oBAAG9C,GAAG,KAAN,UACC,sBACCM,EAAE,wBACFI,OACkB,IAAjByB,GAAuC,IAAjBA,EACnBG,EACAC,EAEJ/B,UACCsB,GAAQK,EAAe,EA7CN,IAAjBA,EACI,cACoB,IAAjBA,EACH,eAEA,aAwC4CN,IAIlD,sBACCvB,EAAGmC,EAAK,CACP7C,OAAQ,CAAEe,EAAG,IAAKC,EAAG,KACrBf,OAAQ,CAAEc,EAAG,IAAKC,EAAG,OAEtBF,OAAQ6B,EACRhC,KAAK,OACLC,UAAWqB,IAEZ,sBACCvB,EAAGmC,EAAK,CACP7C,OAAQ,CAAEe,EAAG,IAAKC,EAAG,KACrBf,OAAQ,CAAEc,EAAG,IAAKC,EAAG,OAEtBF,OAAQ6B,EACRhC,KAAK,OACLC,UAAWqB,IAEXE,EAAYgB,KAAI,SAACC,EAAO7B,GACxB,OAAO6B,EAAMD,KAAI,SAACE,EAAQ7B,GAEzB,IAAI8B,EAAS,aAETC,GAAc,EAgBlB,OAdCrB,GACa,YAAbF,GACAT,IAAMiB,GAENc,EAAS,cACTC,GAAc,GAEdrB,GACa,aAAbF,GACAT,IAAMiB,IAENc,EAAS,eACTC,GAAc,GAERF,EAAOF,KAAI,SAACzC,EAAGe,GAErB,IAAMN,EAAcE,EACnBe,EACAb,EACAC,EACAC,GAEK+B,EAAgBrC,EACnB,GACAiB,EAAcb,GAAGC,GAAGC,GACjBgC,EAAKtC,EACR,EACA,EAAIuC,KAAKC,IAAIH,GAAiB,GAC3BI,EAAIzC,EACP,YACAqC,EAAgB,EA/EP,UADA,UAoFZ,GACCtB,GACa,WAAbF,IACgB,IAAhB7B,EACC,CACD,IAAI0D,EACH,EAAIvB,EAAOwB,MAAMvC,GAAGC,GAAGuC,SAAStC,GAC7BuC,EAA4B,IAAXH,EAGrBf,IAAU,OACRmB,OAAO,MACPA,OAAO,OACPA,OAHF,gBAGkB1C,GAHlB,OAGsBC,GAHtB,OAG0BC,IACxByC,aACAC,SAAS,KACTC,KAAKtB,KACLuB,KAAK,eAAgBZ,EAAKI,GAC1BK,aACAC,SAAS,KACTC,KAAKtB,KACLuB,KAAK,eAAgBZ,EAAKO,GAG7B,OACC,sBACC5D,GAAE,eAAUmB,GAAV,OAAcC,GAAd,OAAkBC,GAEpBf,EAAGA,EACHE,UAAWsB,EAAOoB,EAASrB,EAC3BqC,YAAab,EACb3C,OAAQyC,EApECb,SAoEqBkB,EAC9BjD,KAAK,QAPN,UAESY,GAFT,OAEaC,GAFb,OAEiBC,aAWrB,sBACCV,EAAG,GACHC,EAAG,IACHgC,MAAOJ,EACPK,OAAQL,EACRjC,KAAK,aAGL0B,EAAYc,KAAI,SAACE,EAAQ9B,GAAT,OAChB8B,EAAOF,KAAI,SAACzC,EAAGc,GACd,IAAI+C,GAAW,EAETC,EACQ,aAAbxC,GACa,eAAbA,EAQD,OANEE,GAAQX,GAAKiB,GACdgC,GACa,WAAbxC,KAEAuC,GAAW,GAGX,8BACC,sBACCxD,EAAGL,EAAEK,EACLC,EAAGN,EAAEM,EACLgC,MAAOJ,EACPK,OAAQL,EACRjC,KACS,MAARD,EAAEK,GAAqB,MAARL,EAAEM,GAAakB,EAC3B,UACAY,IACK,IAAK,IAAK,KACd2B,SACAF,EACGjC,EAAOwB,MAAMvC,GAAGC,GACfkD,QACDjC,EACA,GAGR3B,OACS,MAARJ,EAAEK,GAAqB,MAARL,EAAEM,EACd,UACA,QAEJsD,YAAa,IAGF,OAAXhC,GACDJ,GACAsC,GACAjD,GAAKiB,EAAgB,GACW,IAAhCF,EAAOwB,MAAMvC,GAAGC,GAAGmD,SAChBjD,EACAhB,EAAEK,EAAI,GACNL,EAAEM,EAAI,GACN0C,KAAKC,IACJrB,EAAOwB,MAAMvC,GAAGC,GAAGmD,UAEpBrC,EAAOwB,MAAMvC,GAAGC,GAAGmD,SAAW,EAC9BjC,GAEA,KAzCJ,UAAWnB,EAAX,YAAgBC,UA+CnB,sBACCT,EAAG,IACHC,EAAG,IACHgC,MAAOJ,EACPK,OAAQL,EACRjC,KAAK,OACLG,OAAO,UAER,sBAAM8D,WAAW,aAAaC,SAAS,OAAO9D,EAAG,IAAKC,EAAG,IAAzD,uBAMH,OAAO,qBAAKZ,GAAG,KAAR,SAAc2C,K,wBCzIP+B,E,gKAjId,SAAWC,EAAMC,EAAiBf,GAEjCc,EAAKE,UAAU,UACbC,KAAKF,GACLG,QACAC,OAAO,UACPf,KAAK,MAAM,SAAC3D,GAAD,OAAOA,EAAEK,KACpBsD,KAAK,MAAM,SAAC3D,GAAD,OAAOA,EAAEM,KACpBqD,KAAK,KAAK,SAACgB,EAAG9D,GAAJ,OAAWA,IAAM0C,EAAS,EAAI,KACxCqB,MAAM,QAAQ,SAACD,EAAG9D,GAAJ,OAAWA,IAAM0C,EAAS,SAAW,Y,4BAMtD,SAAesB,EAAOC,EAAMxC,EAAOC,EAAQwC,GAS1C,MAAO,CAAEC,OARM5C,MAEb6C,OAAO,CAACJ,EAAOC,IACfI,MAAM,CAAC,EAAG5C,EAAQ,EAAIyC,IAKPI,OAJF/C,MAEb6C,OAAO,CAACJ,EAAOC,IACfI,MAAM,CAAC3C,EAAS,EAAIwC,EAAS,O,sEAKhC,sDAAAK,EAAA,wDAEqDC,KAAK7E,MAAjD8B,EAFT,EAESA,MAAOC,EAFhB,EAEgBA,OAAQwC,EAFxB,EAEwBA,QAASF,EAFjC,EAEiCA,MAAOC,EAFxC,EAEwCA,KAAMpF,EAF9C,EAE8CA,GAEvC4F,EAAYlD,IAAA,kBAAqB1C,KACjC6F,EAAMD,EACVZ,OAAO,OACPf,KAAK,QAASrB,GACdqB,KAAK,SAAUpB,GACfqC,MAAM,WAAY,YAChBF,OAAO,QACTf,KAAK,QAASrB,GACdqB,KAAK,SAAUpB,GACfoB,KAAK,QAAS,QAbjB,EAgB4B0B,KAAKG,eAC/BX,EACAC,EACAxC,EACAC,EACAwC,GALOC,EAhBT,EAgBSA,OAAQG,EAhBjB,EAgBiBA,OAQVM,EAAQrD,MAAgBsD,MAAMV,GAC9BW,EAAQvD,MAAesD,MAAMP,GAEnCI,EAAIb,OAAO,KACTf,KAAK,QAAS,QACdA,KAAK,YAFP,sBAEmCpB,EAAS,EAAIwC,EAFhD,MAGEa,KAAKH,GACPF,EAAIb,OAAO,KACTf,KAAK,QAAS,QACdA,KAAK,YAAa,cAAgBrB,EAAQ,EAAIyC,GAAW,OACzDa,KAAKD,GACPJ,EAAIb,OAAO,QACTf,KAAK,KAAM,GACXA,KAAK,MAAOpB,EAAS,GAAK,GAC1BoB,KAAK,KAAMrB,GACXqB,KAAK,MAAOpB,EAAS,GAAK,GAC1BoB,KAAK,QAAS,SAChB4B,EAAIb,OAAO,QACTf,KAAK,MAAOrB,EAAQ,GAAK,GACzBqB,KAAK,KAAM,GACXA,KAAK,MAAOrB,EAAQ,GAAK,GACzBqB,KAAK,KAAMpB,GACXoB,KAAK,QAAS,SAChB4B,EAAIb,OAAO,QACTf,KAAK,KAAM,eACXA,KAAK,SAAU,QACfA,KAAK,OAAQ,QAlDhB,iD,sFAoDA,WA0BC,IA1BqB,IAAD,EAahB0B,KAAK7E,MAXR8B,EAFmB,EAEnBA,MACAC,EAHmB,EAGnBA,OACAwC,EAJmB,EAInBA,QACAF,EALmB,EAKnBA,MACAC,EANmB,EAMnBA,KACAe,EAPmB,EAOnBA,EACAvF,EARmB,EAQnBA,EACAwF,EATmB,EASnBA,KACApG,EAVmB,EAUnBA,GACA6D,EAXmB,EAWnBA,OACAE,EAZmB,EAYnBA,SAZmB,EAcO4B,KAAKG,eAC/BX,EACAC,EACAxC,EACAC,EACAwC,GALOC,EAdY,EAcZA,OAAQG,EAdI,EAcJA,OAOVI,EAAMnD,IAAA,kBAAqB1C,IAAM6D,OAAO,OAG1CwC,EAAU,GACVC,EAAQ,GACHnF,EAAI,EAAGA,EAAIgF,EAAE1E,OAAQN,IAC7BkF,EAAQE,KAAK,CACZ5F,EAAG2E,EAAOa,EAAEhF,IACZP,EAAG6E,EAAO7E,EAAEO,MAEbmF,EAAMC,KAAK,CAACjB,EAAOa,EAAEhF,IAAKsE,EAAOW,EAAKjF,MAEvC0E,EAAIhB,UAAU,UAAU2B,SACxBb,KAAKc,WAAWZ,EAAKQ,EAASxC,GAC9BgC,EAAIhC,OAAO,gBACTC,aACAC,SAASA,GACTE,KAAK,IAAKvB,MAAU4D,IACpBrC,KAAK,SAAU,SACfA,KAAK,OAAQ,U,oBAGhB,WAAU,IACDjE,EAAO2F,KAAK7E,MAAZd,GACR,OAAO,qBAAKA,GAAE,iBAAYA,S,GAjIF0G,aCoLXC,E,gKA/Kd,SAAWhC,EAAMC,EAAiBf,GACjC,IAAM+C,EAAa,CAAEjG,EAAGgF,KAAK7E,MAAMqF,EAAEtC,GAASjD,EAAG+E,KAAK7E,MAAMF,EAAEiD,IACxDgD,EAAa,SAACC,EAAOC,GAAR,OAAwBD,IAAUC,GAC/CC,EAAuB,UAAvBA,EAA0C,EAC1CC,EAAwB,OAAxBA,EAAwC,EAG9CtC,EAAKE,UAAU,UACbC,KAAKF,GACLG,QACAC,OAAO,UACPf,KAAK,MAAM,SAAC3D,GAAD,OAAOA,EAAEK,KACpBsD,KAAK,MAAM,SAAC3D,GAAD,OAAOA,EAAEM,KACpBqD,KAAK,KAAK,SAACgB,EAAG9D,GAAJ,OACV0F,EAAW1F,EAAG0C,GAAUmD,EAAqBC,KAE7C/B,MAAM,QAAQ,SAACD,EAAG9D,GAAJ,OACd0F,EAAW1F,EAAG0C,GAAUmD,EAAoBC,KAI9CtC,EAAKK,OAAO,QACVf,KAAK,IAAKW,EAAgBf,GAAQlD,EAAI,IACtCsD,KAAK,IAAKW,EAAgBf,GAAQjD,GAClCqD,KAAK,OAAQ+C,GACb/C,KAAK,YAAa,QAClBiD,KALF,WAKWN,EAAWjG,EAAEwG,QAAQ,GALhC,YAKsCP,EAAWhG,EAAEuG,QAAQ,GAL3D,Q,4BAWD,SAAehC,EAAOC,EAAMxC,EAAOC,EAAQwC,GAS1C,MAAO,CAAEC,OARM5C,MAEb6C,OAAO,CAACJ,EAAOC,IACfI,MAAM,CAAC,EAAG5C,EAAQ,EAAIyC,IAKPI,OAJF/C,MAEb6C,OAAO,CAACJ,EAAOC,IACfI,MAAM,CAAC3C,EAAS,EAAIwC,EAAS,O,+BAOhC,SAAkBV,EAAM7E,EAAOsH,EAAQC,EAAQtD,GAC9CY,EAAKV,KAAK,IAAKvB,MAAU0E,IACvBnD,KAAK,SAAUnE,GACfmE,KAAK,OAAQ,QACfU,EAAKb,aAAaC,SAASA,GAAUE,KAAK,IAAKvB,MAAU2E,M,sEAI1D,sDAAA3B,EAAA,wDACqDC,KAAK7E,MAAjD8B,EADT,EACSA,MAAOC,EADhB,EACgBA,OAAQwC,EADxB,EACwBA,QAASF,EADjC,EACiCA,MAAOC,EADxC,EACwCA,KAAMpF,EAD9C,EAC8CA,GACvC4F,EAAYlD,IAAA,uBAA0B1C,KACtC6F,EAAMD,EACVZ,OAAO,OACPf,KAAK,QAASrB,GACdqB,KAAK,SAAUpB,GACfqC,MAAM,WAAY,YAChBF,OAAO,QACTf,KAAK,QAASrB,GACdqB,KAAK,SAAUpB,GACfoB,KAAK,QAAS,QAXjB,EAY4B0B,KAAKG,eAC/BX,EACAC,EACAxC,EACAC,EACAwC,GALOC,EAZT,EAYSA,OAAQG,EAZjB,EAYiBA,OAOZM,EAAQrD,MAAgBsD,MAAMV,GAC9BW,EAAQvD,MAAesD,MAAMP,GACjCI,EAAIb,OAAO,KACTf,KAAK,QAAS,QACdA,KAAK,YAFP,sBAEmCpB,EAAS,EAAIwC,EAFhD,MAGEa,KAAKH,GACPF,EAAIb,OAAO,KACTf,KAAK,QAAS,QACdA,KAAK,YAAa,cAAgBrB,EAAQ,EAAIyC,GAAW,OACzDa,KAAKD,GACPJ,EAAIb,OAAO,QACTf,KAAK,KAAM,GACXA,KAAK,MAAOpB,EAAS,GAAK,GAC1BoB,KAAK,KAAMrB,GACXqB,KAAK,MAAOpB,EAAS,GAAK,GAC1BoB,KAAK,QAAS,SAChB4B,EAAIb,OAAO,QACTf,KAAK,MAAOrB,EAAQ,GAAK,GACzBqB,KAAK,KAAM,GACXA,KAAK,MAAOrB,EAAQ,GAAK,GACzBqB,KAAK,KAAMpB,GACXoB,KAAK,QAAS,SAEhB4B,EAAIb,OAAO,QACTf,KAAK,KAAM,eACXA,KAAK,SAAU,QACfA,KAAK,OAAQ,QA7ChB,iD,6EA+CA,WA2BC,IA3BY,IAAD,EAaP0B,KAAK7E,MAXR8B,EAFU,EAEVA,MACAC,EAHU,EAGVA,OACAwC,EAJU,EAIVA,QACAF,EALU,EAKVA,MACAC,EANU,EAMVA,KACAe,EAPU,EAOVA,EACAvF,EARU,EAQVA,EACAwF,EATU,EASVA,KACApG,EAVU,EAUVA,GACA6D,EAXU,EAWVA,OACAyD,EAZU,EAYVA,UAZU,EAegB3B,KAAKG,eAC/BX,EACAC,EACAxC,EACAC,EACAwC,GALOC,EAfG,EAeHA,OAAQG,EAfL,EAeKA,OAOVI,EAAMnD,IAAA,uBAA0B1C,IAAM6D,OAAO,OAC/CwC,EAAU,GACVkB,EAAW,GACXC,EAAY,GACZC,EAAgB,GACXtG,EAAI,EAAGA,EAAIgF,EAAE1E,OAAQN,IAAK,CAClCkF,EAAQE,KAAK,CACZ5F,EAAG2E,EAAOa,EAAEhF,IACZP,EAAG6E,EAAO7E,EAAEO,MAGb,IAAMuG,EAAOpC,EAAOa,EAAEhF,IACtBoG,EAAShB,KAAK,CAACmB,EAAMjC,EAAOW,EAAKjF,MACjCsG,EAAclB,KAAK,CAACmB,EAAMjC,EAAO6B,EAAUnG,MAC3CqG,EAAUjB,KAAK,CAACmB,EAAMjC,EAAO,KAE9BI,EAAIhB,UAAU,UAAU2B,SACxBX,EAAIhB,UAAU,QAAQ2B,SACtB,IAAMmB,EAAO9B,EAAIhC,OAAO,gBACxB8B,KAAKc,WAAWZ,EAAKQ,EAASxC,GACJ,UAAtB8B,KAAK7E,MAAM8G,OACdD,EAAK1D,KAAK,KAAM,eACdA,KAAK,SAAU,QACfA,KAAK,OAAQ,QAEW,SAAtB0B,KAAK7E,MAAM8G,OACdjC,KAAKkC,kBAAkBF,EAAM,QAASH,EAAWD,EAAU,KAC3B,SAAtB5B,KAAK7E,MAAM8G,QACrBjC,KAAKkC,kBACJF,EACA,YACAJ,EACAE,EACA,O,gCAKJ,WACC9B,KAAKmC,c,mCAEN,WACC,OAAQnC,KAAK7E,MAAMiH,kB,oBAGpB,WAAU,IACD/H,EAAO2F,KAAK7E,MAAZd,GACR,OAAO,qBAAKA,GAAE,sBAAiBA,S,GAhLC0G,aC8FnBsB,E,uKA7Fd,WACC,IAAMpC,EAAYlD,IAAU,UACtBG,EAAS,IACTD,EAAQ,IAGV0C,EAAS5C,MAEX6C,OAAO,CAAC,GAAI,IACZC,MAAM,CAAC,EAAG5C,MAER6C,EAAS/C,MAEX6C,OAAO,CAAC,EAAG,IACXC,MAAM,CAAC3C,IAAsB,IACzBgD,EAAMD,EACVZ,OAAO,OACPf,KAAK,QAASrB,GACdqB,KAAK,SAAUpB,GACfqC,MAAM,WAAY,WAEpBW,EAAIb,OAAO,QACTf,KAAK,QAASrB,GACdqB,KAAK,SAAUpB,GACfoB,KAAK,QAAS,QAChB,IAAI8B,EAAQrD,MAAgBsD,MAAMV,GAC9BW,EAAQvD,MAAesD,MAAMP,GACjCI,EAAIb,OAAO,KACTf,KAAK,QAAS,QACdA,KAAK,KAAM,KACXA,KAAK,YAHP,sBAGmCpB,IAHnC,MAIEqD,KAAKH,GAEPF,EAAIb,OAAO,KACTf,KAAK,QAAS,QACdA,KAAK,KAAM,KACXA,KAAK,YAAa,oBAClBiC,KAAKD,EAAMgC,MAAM,IACnBpC,EAAIb,OAAO,QACTf,KAAK,KAAM,QACXA,KAAK,SAAU,QACfA,KAAK,OAAQ,U,gCAGhB,WAoBC,IApBqB,IAAD,EACY0B,KAAK7E,MAA7BoH,EADY,EACZA,UAAWnE,EADC,EACDA,SAIbqB,EAAO8C,EAAUzG,OAAS,EAE5B6D,EAAS5C,MAEX6C,OAAO,CALK,EAKGH,IACfI,MAAM,CAAC,EAAG5C,MAERuF,EAAUzF,IAAOwF,GACjBE,EAAU1F,IAAOwF,GACjBzC,EAAS/C,MAEX6C,OAAO,CAAC4C,EAASC,IACjB5C,MAAM,CAAC3C,IAAsB,IACzBgD,EAAMnD,IAAU,UAAUmB,OAAO,OACnC6B,EAAI,GACCvE,EAAI,EAAGA,EAAI+G,EAAUzG,OAAQN,IACrCuE,EAAEa,KAAK,CAACjB,EAAOnE,GAAIsE,EAAOyC,EAAU/G,MAGrC,IAAI4E,EAAQrD,MAAgBsD,MAAMV,GAC9BW,EAAQvD,MAAesD,MAAMP,GACjCI,EAAIhC,OAAO,MACTC,aACAC,SAASA,GACTE,KAAK,YAHP,sBAGmCpB,IAHnC,MAIEqD,KAAKH,EAAMkC,MAAM,IAEnBpC,EAAIhC,OAAO,MACTC,aACAC,SAASA,GACTE,KAAK,YAAa,oBAClBiC,KAAKD,EAAMgC,MAAM,IACnBpC,EAAIhC,OAAO,SACTC,aACAC,SAASA,GACTE,KAAK,IAAKvB,MAAUgD,IACpBzB,KAAK,SAAU,SACfA,KAAK,OAAQ,U,oBAEhB,WACC,OAAO,qBAAKjE,GAAG,c,GA1FE0G,a,kBCHN2B,EAAI,SAACC,GAAD,OAAiB,cAAC,aAAD,CAAYC,KAAMD,KACvCE,EAAK,SAACC,GAAD,OAAgB,cAAC,YAAD,CAAWF,KAAME,K,kGCPpC,MAA0B,sCCA1B,MAA0B,sCCA1B,MAA0B,qCCA1B,MAA0B,sCCA1B,MAA0B,sCCc5BC,EAAM,WAClB,IAAMC,EAAkB,UACxB,OACC,cAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAAnC,SACC,eAACF,EAAA,EAAD,WACC,cAACA,EAAA,EAAD,UACC,cAACG,EAAA,EAAD,CACCC,QAAS,WACRC,WAASC,SAAS,UAAW,CAC5BnF,SAAU,KACVoF,MAAO,IACPC,QAAQ,KAGVtJ,MAAO6I,EARR,SAUC,qBAAKU,IAAI,UAAUC,IAAKC,QAI1B,eAACX,EAAA,EAAD,WACC,eAACG,EAAA,EAAD,CACCC,QAAS,WACRC,WAASC,SAAS,YAAa,CAC9BnF,SAAU,KACVoF,MAAO,IACPC,QAAQ,EACRI,QAAS,OAGX1J,MAAO6I,EATR,UAWC,qBAAKU,IAAI,SAASC,IAAKG,IAAiB,OAEzC,cAACV,EAAA,EAAD,CACCC,QAAS,WACRC,WAASC,SAAS,YAAa,CAC9BnF,SAAU,KACVoF,MAAO,IACPC,QAAQ,EACRI,QAAS,OAGX1J,MAAO6I,EATR,SAWC,qBAAKU,IAAI,OAAOC,IAAKI,SAGvB,cAACd,EAAA,EAAD,UACC,cAACG,EAAA,EAAD,CACCC,QAAS,WACRC,WAASC,SAAS,WAAY,CAC7BnF,SAAU,KACVoF,MAAO,IACPC,QAAQ,EACRI,QAAS,OAGX1J,MAAO6I,EATR,SAWC,qBAAKU,IAAI,WAAWC,IAAKK,QAG3B,cAACf,EAAA,EAAD,UACC,cAACG,EAAA,EAAD,CACCC,QAAS,WACRC,WAASC,SAAS,mBAAoB,CACrCnF,SAAU,KACVoF,MAAO,IACPC,QAAQ,KAGVtJ,MAAO6I,EARR,SAUC,qBAAKU,IAAI,mBAAmBC,IAAKM,c,gBCaxBC,E,kDA7Fd,WAAY/I,GAAQ,IAAD,8BAClB,cAAMA,IACDgJ,MAAQ,CACZlH,MAAO,IACPC,OAAQ,KAJS,E,4FAOnB,2CAkBUkH,EAlBV,eAAArE,EAAA,6DAkBUqE,EAlBV,SAkBeC,EAAGC,GAIhB,IAHA,IAAItJ,EAAImE,EAAKqB,EACZvF,EAAIkE,EAAKlE,EACNsJ,EAAS,EACJ/I,EAAI,EAAGA,EAAI2D,EAAKqB,EAAE1E,OAAQN,IAClC+I,GAAU5G,KAAK6G,IAAIH,EAAIrJ,EAAEQ,GAAK8I,EAAIrJ,EAAEO,GAAI,GAEzC,OAAO+I,GAAU,EAAIvJ,EAAEc,SAzBzB,SACiCkE,KAAKmE,MADtC,uBACSlH,EADT,EACSA,MAAOC,EADhB,EACgBA,OACTgD,EAAMnD,IAAU,eAAemB,OAAO,YAF7C,SAGkC8B,KAAK7E,MAHvC,OAYC,IAZD,SAGSgE,EAHT,EAGSA,KAAMsF,EAHf,EAGeA,SACVC,EAAIzH,EACPoH,EAAInH,EACJyH,EAAS,IAAIC,MAAMF,EAAIL,GAMf5I,EAAI,GAAKC,EAAI,EAAGD,EAAI4I,IAAK5I,EACjC,IAASD,EAAI,GAAKA,EAAIkJ,IAAKlJ,IAAKE,EAC/BiJ,EAAOjJ,GAAK0I,EAAM5I,EAAIkJ,EAAK,GAAK,EAAIjJ,EAAI4I,EAAK,IAdhD,iBA2BwBtH,IACf0H,EAAU,GAAI,GACpBrH,KAAI,SAAC5B,GAAD,OAAOmC,KAAK6G,IAAI,EAAGhJ,MA7B1B,QA2BKqJ,EA3BL,OA8BK1K,EAAQ4C,IACXA,IAAU8H,GACV9H,KAEK+H,EAAW/H,MAAcgI,KAAK,CAACL,EAAGL,IAAIQ,WAAWA,EAAtC9H,CAChB4H,GAEDzE,EAAIb,OAAO,KACTf,KAAK,OAAQ,QACbY,UAAU,QACVC,KAAK2F,GACLE,KAAK,QACL1G,KAAK,QAAQ,SAAC3D,GAAD,OAAOR,EAAMQ,EAAEsK,UAC5B3G,KAAK,IAAKvB,OAEZmD,EAAIb,OAAO,UACTf,KAAK,KAAMrB,EAAQ,GACnBqB,KAAK,KAAM,GACXA,KAAK,IAAK,GACViB,MAAM,OAAQ,QACdA,MAAM,QAAS,QAlDlB,iD,sFAoDA,WAAsB,IAAD,EACMS,KAAKmE,MAAvBlH,EADY,EACZA,MAAOC,EADK,EACLA,OADK,EAEO8C,KAAK7E,MAAxBiJ,EAFY,EAEZA,KAAMc,EAFM,EAENA,GAAIb,EAFE,EAEFA,EAAGC,EAFD,EAECA,EACfpE,EAAMnD,IAAU,eAAemB,OAAO,YAChC,MAARkG,EASAA,EAAO,KACVlE,EAAIhC,OAAO,UACTC,aACAC,SAAS,IAAM8G,GACf5G,KAAK,KAAMrB,EAAQ,EAAKoH,EAAI,GAAMpH,GAClCqB,KAAK,KAAOgG,EAAI,GAAMpH,GACtBoB,KAAK,IAAY,EAAP8F,EAAW,GACrB7E,MAAM,OAAQ,OACdA,MAAM,UAAW,OAhBnBW,EAAIhC,OAAO,UACTI,KAAK,KAAMrB,EAAQ,GACnBqB,KAAK,KAAM,GACXA,KAAK,IAAK,GACViB,MAAM,OAAQ,QACdA,MAAM,SAAU,U,oBAcpB,WAAU,IAAD,EACkBS,KAAKmE,MAAvBlH,EADA,EACAA,MAAOC,EADP,EACOA,OACf,OACC,qBAAK7C,GAAG,aAAR,SACC,qBAAKkF,MAAO,CAAEtC,QAAOC,UAAU7C,GAAG,kB,GAxFZ0G,aCPX,MAA0B,oC,4CCsS1BoE,E,kDA/Qd,WAAYhK,GAAQ,IAAD,8BAClB,cAAMA,IACDgJ,MAAQ,CACZ1D,KAAM,GACNgE,UAAW,EACXW,YAAY,EACZC,OAAQ,CACPC,iBAAkB,EAClBC,SAAU,KACVpG,KAAM,CACLqB,EAAG,GACHvF,EAAG,IAEJuK,YAAa,CACZC,aAAc,IACdC,OAAQ,EACRtB,KAAM,KACNuB,MAAO,KAERC,cAAe,CACdvB,EAAG,EACHC,EAAG,KAIN,EAAKuB,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAK/F,EAAI,EAAKA,EAAE+F,KAAP,gBACT,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,MAAQ,EAAKA,MAAMH,KAAX,gBA7BK,E,yCAgCnB,WACC9F,KAAK6F,eACL7F,KAAKkG,SAAL,2BACIlG,KAAKmE,OADT,IAECiB,YAAY,EACZC,OAAO,2BACHrF,KAAKmE,MAAMkB,QADT,IAELE,SAAU,KACVC,YAAY,2BACRxF,KAAKmE,MAAMkB,OAAOG,aADX,IAEVE,OAAQ,EACRtB,KAAM,OAEPwB,cAAe,CACdvB,EAAG,EACHC,EAAG,U,0BAKP,WAAgB,IAAD,OACd6B,KAAQ,WAEP,IACM3F,EAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACpBvF,EAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACpBmL,EAAUD,IAAUlL,GAEpBoL,EAAOF,IAAQC,GAASE,WAAW,GACnChB,EACJ,GAAgB,EAAX9E,EAAE1E,QACRqK,IAAOA,IAAOA,IAAOE,EAAMD,GAAU,IAAIE,WAAW,GAErD,EAAKJ,SAAL,2BACI,EAAK/B,OADT,IAEC1D,KAZY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAa5B4E,OAAO,2BACH,EAAKlB,MAAMkB,QADT,IAELC,mBACAnG,KAAM,CAAEqB,IAAGvF,e,8BAOf,WAAoB,IAAD,OAClBkL,KAAQ,WAEP,GAAI,EAAKhC,MAAMkB,OAAOG,YAAYE,OAAS,IAC1C,EAAKQ,SAAS,CAAEd,YAAa,EAAKjB,MAAMiB,iBADzC,CAFa,MAOE,EAAKjB,MAAMkB,OAAOO,cAA3BvB,EAPO,EAOPA,EAAGC,EAPI,EAOJA,EACHmB,EAAiB,EAAKtB,MAAMkB,OAAOG,YAAnCC,aARO,EASI,EAAKtB,MAAMkB,OAAOlG,KAA3BqB,EATK,EASLA,EAAGvF,EATE,EASFA,EACLsL,EAAUJ,IAAU3F,GACpB4F,EAAUD,IAAUlL,GAEtBuL,EAEJ,SAAWhG,EAAG6D,EAAGC,GAChB,OAAO6B,IAAOA,IAAO3F,EAAG6D,GAAIC,GAHjBmC,CAAEF,EAASlC,EAAGC,GACtBoC,EAAMH,EAAQI,MAAM,GAalBC,EACJ,EAAIF,EACLP,IAAOA,IAAOA,IAAOK,EAAOJ,GAAUG,IAAUD,WAAW,GACtDO,EACJ,EAAIH,EAAOP,IAAOA,IAAOK,EAAOJ,IAAUE,WAAW,GACjDQ,EAbN,SAAc7L,EAAG8L,GAChB,OACE,GAAK,EAAIL,GACVP,IAAOA,IAAOA,IAAOY,EAAQ9L,GAAI,IAAIqL,WAAW,GAUhClC,CAAKgC,EAASI,GAGhCnC,IAAMoB,EAAemB,EACrBtC,IAAMmB,EAAeoB,EACrB,IAAMtB,EAAW,EAAIuB,EAAY,EAAK3C,MAAMkB,OAAOC,iBAC7CI,EAAS,EAAKvB,MAAMkB,OAAOG,YAAYE,OAAS,EAChDjF,EAAOmE,MAAMoC,KAAKR,EAAMF,YAC9B,EAAKJ,SAAL,2BACI,EAAK/B,OADT,IAEC1D,OACA4E,OAAO,2BACH,EAAKlB,MAAMkB,QADT,IAELE,WACAK,cAAe,CAAEvB,IAAGC,KACpBkB,YAAY,2BACR,EAAKrB,MAAMkB,OAAOG,aADX,IAEVE,OAAQA,EACRtB,KAAM0C,e,sDAOX,kCAAA/G,EAAA,sDACOkH,EAAQ,SAAC/B,GAAD,OAAQ,IAAIgC,SAAQ,SAACC,GAAD,OAASC,WAAWD,EAAKjC,OACrDmC,EAAc,IAFrB,cAIU1B,EAAU3F,KAAKmE,MAAMkB,OAAOG,YAA5BG,MACF2B,EAAcD,EAAc1B,EALpC,SAMQ3F,KAAK+F,mBANb,uBAQQkB,EAAMK,GARd,WASgC,IAA1BtH,KAAKmE,MAAMiB,WATjB,qH,gFAcA,SAAamC,EAAOtC,GACnBjF,KAAKkG,SAAS,CACbb,OAAO,2BACHrF,KAAKmE,MAAMkB,QADT,IAELG,YAAY,2BACRxF,KAAKmE,MAAMkB,OAAOG,aADX,IAEVG,MAAOV,U,sEAMX,sBAAAlF,EAAA,sEACOC,KAAK6F,eADZ,gD,0EAIA,WAAU,IAKW2B,EAAKC,EADNpM,EAJX,SACS2E,KAAKmE,MAAMkB,OAAOO,cAA3BvB,EADA,EACAA,EAAGC,EADH,EACGA,EADH,EAEwBtE,KAAKmE,MAAMkB,OAAOG,YAA1CpB,EAFA,EAEAA,KAAMuB,EAFN,EAEMA,MAAOD,EAFb,EAEaA,OACbvG,EAASa,KAAKmE,MAAMkB,OAApBlG,KAIR,OACC,8BACC,eAAC8D,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAASuE,UAAW,EAAvD,UACC,cAACzE,EAAA,EAAD,CAAKyE,UAAW,GAAIC,YAAa,GAAjC,SACC,cAAC,EAAD,CACC1K,MAAO,IACPC,OAAQ,IACRwC,QAAS,EACTF,MAAO,EACPC,KAAM,EACNe,EAAGrB,EAAKqB,EACRvF,EAAGkE,EAAKlE,EACRwF,KAAMT,KAAKmE,MAAM1D,KACjBpG,GAAI,IACJ6D,QAAS,EACTE,SAAU,MAGZ,eAACwJ,EAAA,EAAD,CAAMC,QAAQ,WAAd,UACC,eAACC,EAAA,EAAD,WACC,+CACA,eAACC,EAAA,EAAD,CAAYF,QAAQ,KAAKG,UAAU,KAAnC,oBACStC,KAGT,cAACqC,EAAA,EAAD,CACCF,QAAQ,KACRG,UAAU,KACVzI,MAAO,CACNpF,OAhCYkB,EAgCK+I,EAhCY,OAAR/I,EAAe,UAAY,UA4BlD,4BA3BemM,EAkCSpD,EAlCJqD,EAkCU,GAjC1B,OAARD,EAAeA,EAAMA,EAAIS,YAAYR,OAmCjC,cAACS,EAAA,EAAD,CAAY7E,QAASrD,KAAKiG,MAA1B,SACC,cAACkC,EAAA,EAAD,MAED,cAACC,EAAA,EAAD,CACC7I,MAAO,CACN8I,WAAYrI,KAAKmE,MAAMiB,WACpB,UACA,UACHjL,MAAO,SAERkJ,QAAO,sBAAE,sBAAAtD,EAAA,sEACF,EAAKmG,SAAS,CACnBd,YAAa,EAAKjB,MAAMiB,aAFjB,uBAIF,EAAKrF,IAJH,2CAMTuI,oBAAkB,EAbnB,SAeEtI,KAAKmE,MAAMiB,WACX,cAACmD,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,MAIF,cAACN,EAAA,EAAD,CACC3I,MAAO,CACNpF,MAAiB,MAAVwL,EAAgB,OAAS,WAEjCtC,QAAS,WACR,EAAK6C,SAAS,CACbb,OAAO,2BACH,EAAKlB,MAAMkB,QADT,IAELG,YAAY,2BACR,EAAKrB,MAAMkB,OACZG,aAFQ,IAGVG,MACW,MAAVA,EAAgB,IAAM,WAZ5B,SAkBC,cAAC8C,EAAA,EAAD,MAED,uBAEA,qBAAK9E,IAAK+E,EAAYhF,IAAI,SAASzG,MAAM,WAE1C,cAAC,EAAD,CACCiI,GAAIS,EACJxG,KAAMA,EACNkF,EAAGsE,SAAStE,GAAKA,EAAI,EACrBC,EAAGqE,SAASrE,GAAKA,EAAI,EACrBF,KAAMA,EACNK,SAAUzE,KAAKmE,MAAMM,uB,GAvQN1D,a,UC+LP6H,G,kDAzMd,WAAYzN,GAAQ,IAAD,8BAClB,cAAMA,IACDgJ,MAAQ,CACZ0E,QAAS,IACTC,MAAO,IACP1E,KAAM,EACNxE,OAAQ,GACRC,MAAO,GACPmC,KAAM,GACN+G,MAAM,EACN9L,MAAO,IACP+L,UAAW,UACXC,YAAa,UACbC,UAAW,OAbM,E,wCAiBnB,SAAKjO,EAAG8L,EAAQL,GASf,OARmBP,KAAQ,WAC1B,IAAMC,EAAUD,IAAUlL,GACpBkO,EAAehD,IAAUY,GAI/B,OAFE,GAAK,EAAIL,GACVP,IAAOA,IAAOA,IAAOgD,EAAc/C,GAAU,IAAIE,WAAW,Q,yBAK/D,SAAYuC,EAAQC,EAAMlJ,GAGzB,IAFA,IAAcY,EACV4I,EAAS,IAAIxE,MAAMhF,EAAO9D,QACrBN,EAAI,EAAGA,EAAIoE,EAAO9D,OAAQN,IAClC4N,EAAO5N,IAHMgF,EAGIZ,EAAOpE,GAHLqN,EAASrI,EAAIsI,GAKjC,OAAOM,I,mBAER,SAAMtN,GAEL,IADA,IAAIuN,EAAQ,IAAIzE,MAAM9I,GACbN,EAAI,EAAGA,EAAIM,EAAQN,IAAK6N,EAAM7N,GAAK,EAC5C,OAAO6N,I,mBAER,SAAM7J,EAAOC,EAAM6J,GAElB,IADA,IAAID,EAAQ,GACH7N,EAAIgE,EAAOhE,GAAKiE,EAAMjE,GAAK8N,EAAWD,EAAMzI,KAAKpF,GAC1D,OAAO6N,I,2BAER,WACC,IAAME,EAAavJ,KAAKH,OAAO,EAAG,EAAG,IAC/B2J,EAAYxJ,KAAKyJ,YAAY,KAAO,GAAKF,GACzCG,EAAW1J,KAAKyJ,YACrBzJ,KAAKmE,MAAM0E,OACX7I,KAAKmE,MAAM2E,KACXS,GAEKnF,EAAOpE,KAAKoE,KAAKoF,EAAWE,EAAUF,EAAU1N,QACtDkE,KAAKkG,SAAS,CACbtG,OAAQ2J,EACR1J,MAAO2J,EACPxH,KAAM0H,EACNtF,W,+BAGF,WACCpE,KAAK2J,kB,oBAEN,WAAU,IAAD,SAaJ3J,KAAKmE,MAXRvE,EAFO,EAEPA,OACAC,EAHO,EAGPA,MACAiJ,EAJO,EAIPA,KACAD,EALO,EAKPA,OACA7G,EANO,EAMPA,KACAoC,EAPO,EAOPA,KACA2E,EARO,EAQPA,KACA9L,EATO,EASPA,MACAgM,EAVO,EAUPA,YACAD,EAXO,EAWPA,UACAE,EAZO,EAYPA,UAED,OACC,eAACjG,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAAnC,UACC,cAACF,EAAA,EAAD,CAAK1D,MAAO,CAAEqK,OAAO,QAAD,OAAUb,EAAO,EAAI,GAArB,QAApB,SACC,cAAC,EAAD,CACC9L,MAAOA,EACPC,OAAQD,EACRyC,QAAS,EACTF,OAAQ,EACRC,KAAM,EACNe,EAAGZ,EACH3E,EAAG4E,EACHY,KAAMuB,EACN3H,GAAI,GACJ6D,QAAS,EACTE,SAAU,MAIZ,cAAC6E,EAAA,EAAD,CAAK4G,WAAY,EAAjB,SACC,cAACjC,EAAA,EAAD,CAAMC,QAAQ,WAAd,SACC,eAACC,EAAA,EAAD,WACC,iDACA,8CACe,IACd,oBAAIvI,MAAO,CAAEpF,MAAO8O,GAApB,oBAA+C,IAFhD,OAGK,oBAAI1J,MAAO,CAAEpF,MAAO6O,GAApB,kBAA2C,IAHhD,qBAIoB,IACnB,oBAAIzJ,MAAO,CAAEpF,MAAO+O,GAApB,kBALD,WAOA,cAACY,GAAA,EAAD,CACCvK,MAAO,CAAEpF,MAAO8O,GAChBhE,MAAO4D,EACPkB,SAAU,SAACC,EAAGtF,GACb,IAAMuF,EAAU,EAAKR,YACpBZ,EACAC,EACAlJ,GAEKwE,EAAO,EAAKA,KACjBvE,EACAoK,EACApK,EAAM/D,QAEP,EAAKoK,SAAS,CACb2C,OAAQnE,EACR1C,KAAMiI,EACN7F,UAGF8F,KAAM,EACNC,KAAM,IACNC,IAAK,EACLC,kBAAkB,SAEnB,cAACP,GAAA,EAAD,CACCvK,MAAO,CAAEpF,MAAO6O,GAChB/D,MAAO6D,EACPiB,SAAU,SAACC,EAAGtF,GACb,IAAMuF,EAAU,EAAKR,YACpBZ,EACAC,EACAlJ,GAEKwE,EAAO,EAAKA,KACjBvE,EACAoK,EACApK,EAAM/D,QAEP,EAAKoK,SAAS,CACb4C,KAAMpE,EACN1C,KAAMiI,EACN7F,UAGF8F,KAAM,EACNC,KAAM,IACNE,kBAAkB,OAClBD,IAAK,IAGN,+BACE1H,EAAE,wBAAyB,IAC5B,oBAAInD,MAAO,CAAEpF,MAAO8O,GAApB,SACEvG,EAAE,GAAD,OAAImG,MAENnG,EAAE,QAAS,IACZ,oBAAInD,MAAO,CAAEpF,MAAO6O,GAApB,SACEtG,EAAE,GAAD,OAAIoG,SAGR,+BACC,mBAAGvJ,MAAO,CAAEpF,MAAO+O,GAAnB,kBAAyC,IACxCxG,EAAE,yDAGH,qBAAInD,MAAO,CAAEpF,MAAO+O,GAApB,UACE,IACAxG,EAAE,GAAD,OAAI0B,EAAK5C,QAAQ,WAIrB,cAAC4B,EAAA,EAAD,CACC2B,KAAK,QACL8C,QAAQ,WACRtI,MAAO,CACN+K,YAAa,UACbnQ,MAAO,WAERkJ,QAAS,WACR,EAAK6C,SAAS,CAAE6C,MAAO,EAAK5E,MAAM4E,QARpC,iD,GArLqBhI,a,UCwNbwJ,G,kDAlNd,WAAYpP,GAAQ,IAAD,8BAClB,cAAMA,IACDgJ,MAAQ,CACZqG,MAAO,EACPC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,GACTC,OAAQ,IAET,EAAKC,QAAU,EAAKA,QAAQhF,KAAb,gBACf,EAAKiF,WAAa,EAAKA,WAAWjF,KAAhB,gBAXA,E,2CAanB,SAAQ0E,GAAQ,IAAD,EACcxK,KAAKmE,MAAzByG,EADM,EACNA,QAASC,EADH,EACGA,OACXG,EAAU,SAAChQ,EAAGiQ,EAAG3G,GAAP,OAAa2G,EAAIjQ,EAAIsJ,GAE/BmG,EAAUO,EAAQR,EAAOI,EAAQ,GAAIC,EAAO,IAAIrJ,QAAQ,GACxDkJ,EAAUM,EAAQP,EAASG,EAAQ,GAAIC,EAAO,IAAIrJ,QAAQ,GAC1DmJ,EAAUK,EAAQN,EAASE,EAAQ,GAAIC,EAAO,IAAIrJ,QAAQ,GAChExB,KAAKkG,SAAS,CAAEsE,QAAOC,UAASC,UAASC,c,4BAE1C,SAAe7O,GAEd,IADA,IAAIoP,EAAM,IAAItG,MAAM9I,GACXN,EAAI,EAAGA,EAAI0P,EAAIpP,OAAQN,IAC/B0P,EAAI1P,IAAMmC,KAAKwN,SAAS3J,QAAQ,GAEjC,OAAO0J,I,+DAER,8BAAAnL,EAAA,sDACO6K,EAAU5K,KAAKoL,eAAe,GAC9BP,EAAS7K,KAAKoL,eAAe,GACnCpL,KAAKkG,SAAS,CAAE0E,UAASC,WAH1B,gD,4HAKA,sBAAA9K,EAAA,sEACOC,KAAK+K,aADZ,OAEC/K,KAAK8K,QAAQ,IAFd,gD,0EAKA,WAAU,IAAD,SAQJ9K,KAAKmE,MANRqG,EAFO,EAEPA,MACAC,EAHO,EAGPA,QACAC,EAJO,EAIPA,QACAC,EALO,EAKPA,QACAC,EANO,EAMPA,QACAC,EAPO,EAOPA,OAEKQ,EAAab,EAAMhJ,QAAQ,GAC3B8J,EAAY,CACjB,CAAElC,OAAQqB,EAAStQ,MAAO,WAC1B,CAAEiP,OAAQsB,EAASvQ,MAAO,WAC1B,CAAEiP,OAAQuB,EAASxQ,MAAO,YAI3B,OACC,cAAC8I,EAAA,EAAD,CAAKC,QAAQ,OAAb,SACC,cAACD,EAAA,EAAD,CAAKhG,MAAO,IAAZ,SACC,eAAC2K,EAAA,EAAD,CAAMC,QAAQ,WAAd,UACC,eAACC,EAAA,EAAD,WACC,cAACgC,GAAA,EAAD,CACC7E,MAAOjF,KAAKmE,MAAMqG,MAClBT,SAAU,SAACC,EAAGtF,GACb,EAAKoG,QAAQpG,IAEdvK,MAAM,cAGP,cAAC8I,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAAnC,SACC,cAACF,EAAA,EAAD,CAAKE,eAAe,SAApB,SACC,sBAAKlG,MAAO,IAAKC,OAAQ,GAAzB,UACC,sBACCvC,EAAC,WAAM,GAAN,QAAgB,IAAhB,OACDI,OAAQ,UACRwQ,gBAAgB,QAChBhN,YAAa,EAAIqM,EAAQ,GAAK,KAE/B,sBAAM5P,EAAG,GAAIC,EAAG,GAAIL,KAAM,UAA1B,SACEyQ,IAEDC,EAAUlO,KAAI,SAACzC,EAAGa,GAAJ,OACd,8BACC,sBACCR,EAAG,IAAM,IAAMQ,EACfP,EAAG,EACHgC,MAAO,GACPC,OAAQ,GACRtC,KAAK,cAEN,sBAAMI,EAAG,IAAM,IAAMQ,EAAGP,EAAG,GAA3B,SACEO,EAAI,IAEN,sBACCb,EAAC,WAAM,IAAM,IAAMa,EAAlB,gBACA,IAAM,IAAMA,EADZ,OAGDT,OAAQJ,EAAER,MACVoR,gBAAgB,QAChBhN,YACC/C,EAAI,EACD,EACAoP,EACCpP,EAAI,GAEL,GACA,IAGL,sBACCR,EAAG,IAAM,IAAMQ,EACfP,EAAG,GACHL,KAAMD,EAAER,MAHT,SAKEQ,EAAEyO,WAhCG5N,aAuCZ,eAACuM,EAAA,EAAD,CAAYF,QAAQ,KAApB,qBAEC,cAACE,EAAA,EAAD,CAAY5N,MAAM,YAAY0N,QAAQ,UAAtC,SACEwD,IAHH,OAKMT,EAAQ,GALd,IAMC,cAAC7C,EAAA,EAAD,CAAY5N,MAAM,YAAY0N,QAAQ,UAAtC,SACEwD,IAPH,OASMR,EAAO,GATb,KASmB,IAClB,cAAC9C,EAAA,EAAD,CACCxI,MAAO,CAAEpF,MAAO,WAChB0N,QAAQ,UAFT,SAIE7H,KAAKmE,MAAMsG,aAId,eAAC1C,EAAA,EAAD,CAAYF,QAAQ,KAApB,qBAEC,cAACE,EAAA,EAAD,CACCxI,MAAO,CAAEpF,MAAO,WAChB0N,QAAQ,UAFT,SAIE7H,KAAKmE,MAAMsG,UANd,OAQMG,EAAQ,GARd,IASC,cAAC7C,EAAA,EAAD,CACCxI,MAAO,CAAEpF,MAAO,WAChB0N,QAAQ,UAFT,SAIE7H,KAAKmE,MAAMsG,UAbd,OAeMI,EAAO,GAfb,KAemB,IAClB,cAAC9C,EAAA,EAAD,CACCxI,MAAO,CAAEpF,MAAO,WAChB0N,QAAQ,UAFT,SAIE7H,KAAKmE,MAAMuG,aAGd,eAAC3C,EAAA,EAAD,CAAYF,QAAQ,KAApB,qBAEC,cAACE,EAAA,EAAD,CACCxI,MAAO,CAAEpF,MAAO,WAChB0N,QAAQ,UAFT,SAIE7H,KAAKmE,MAAMuG,UANd,OASME,EAAQ,GATd,IAUC,cAAC7C,EAAA,EAAD,CACCxI,MAAO,CAAEpF,MAAO,WAChB0N,QAAQ,UAFT,SAIE7H,KAAKmE,MAAMuG,UAdd,OAgBMG,EAAO,GAhBb,KAgBmB,IAClB,cAAC9C,EAAA,EAAD,CACCxI,MAAO,CAAEpF,MAAO,WAChB0N,QAAQ,UAFT,SAIE7H,KAAKmE,MAAMwG,gBAIf,cAACa,GAAA,EAAD,UACC,cAACpI,EAAA,EAAD,CACC2B,KAAK,QACL8C,QAAQ,WACRtI,MAAO,CACN+K,YAAa,UACbnQ,MAAO,WAERkJ,QAAO,sBAAE,sBAAAtD,EAAA,sEACF,EAAKgL,aADH,2CAPV,iD,GA7LsBhK,aC0Bd0K,G,kDAtCd,WAAYtQ,GAAQ,IAAD,8BAClB,cAAMA,IACDgJ,MAAQ,CACZuH,KAAK,GAHY,E,0CAMnB,WAAU,IAAD,OACAA,EAAQ1L,KAAKmE,MAAbuH,IADA,EAE4B1L,KAAK7E,MAAjCwQ,EAFA,EAEAA,SAAUC,EAFV,EAEUA,OAAQC,EAFlB,EAEkBA,MAC1B,OACC,8BACC,cAACjE,EAAA,EAAD,CAAMC,QAAQ,WAAd,SACC,eAACC,EAAA,EAAD,WACE+D,EACD,qBACC5O,MAAM,OACN0G,IAAK+H,EAAME,EAASD,EACpBjI,IAAI,KAEL,cAACN,EAAA,EAAD,CACCC,QAAS,WACR,EAAK6C,SAAS,CAAEwF,KAAMA,KAEvB7D,QAAQ,WACRtI,MAAO,CACN+K,YAAa,UACbnQ,MAAO,WAPT,mC,GApBsB4G,aCHb,OAA0B,oCCA1B,OAA0B,wCCA1B,OAA0B,oCCA1B,OAA0B,+CCA1B,OAA0B,yCCA1B,OAA0B,qCCA1B,OAA0B,gDCopB1B+K,GAlnBK,WACnB,IAQcC,EAAMC,EARdC,EAAS,UACTC,EAAO,UAEPC,EAAW,oBAAI5M,MAAO,CAAEpF,MAAO8R,GAApB,oBACXG,EAAS,oBAAI7M,MAAO,CAAEpF,MAAO+R,GAApB,kBACTG,EAAU,oBAAI9M,MAAO,CAAEpF,MAAO,WAApB,mBACVmS,EAAS,oBAAI/M,MAAO,CAAEpF,MAAO,WAApB,kBAcToS,EAAa,SAACC,EAAMC,GAAP,OAClB,cAACC,EAAA,EAAD,CACCnN,MAAO,CACNyD,gBAAiB,UACjB7I,MAAO,SAER0R,MACC,cAACjE,EAAA,EAAD,UACC,cAACE,EAAA,EAAD,UAAc2E,MAGhBE,UAAU,MACVC,OAAK,EAXN,SAaEJ,KAKGK,EAAQ,SAAChB,GAAD,OACb,cAAC9D,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACC,4BAAIgE,OAIAiB,EAAW,SAACjB,GAAD,OAAW,cAAC9D,EAAA,EAAD,CAAYF,QAAQ,KAApB,SAA0BgE,KAGhDkB,EACL,gCACC,uBACCF,EAAM,wBACP,eAAC9E,EAAA,EAAD,CAAYF,QAAQ,KAApB,gFAEO,wCAFP,6CAIA,cAAC,EAAD,IACA,cAAC,UAAD,CAASmF,KAAK,UAAd,SAAyBH,EAAM,kBAC/B,eAAC9E,EAAA,EAAD,CAAYF,QAAQ,KAApB,2YAOuB,IACrB0E,EACA,+CACA,cAACxE,EAAA,EAAD,CAAYF,QAAQ,KAApB,kCACE,IAXJ,2DAcA,uBACCgF,EAAM,iCACNC,EAAS,mBACV,eAAC/E,EAAA,EAAD,CAAYF,QAAQ,KAApB,yHAEgD,IAC9C0E,EACA,wCACA,eAACxE,EAAA,EAAD,CAAYF,QAAQ,QAApB,4CACiCnF,EAAE,YADnC,oBAESA,EAAE,SAET,IATJ,2GAW8C,IAC5C6J,EACA,uCACA,eAACtJ,EAAA,EAAD,WACC,cAAC8E,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACEhF,EACA,qEAGF,eAACkF,EAAA,EAAD,CAAYF,QAAQ,QAApB,UACC,gDACA,uBAFD,kBAGiBnF,EAAE,KAClB,uBAJD,SAKQA,EAAE,KACT,uBAND,oBAOmBA,EAAE,YACpB,uBARD,eAScA,EAAE,YA7BnB,OAmCA,eAACqF,EAAA,EAAD,CAAYF,QAAQ,KAApB,kDACuC,IACrC0E,EACA,iEACA,eAACtJ,EAAA,EAAD,WACC,cAAC8E,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACEhF,EAAG,mCAEL,eAACkF,EAAA,EAAD,CAAYF,QAAQ,QAApB,UACC,qDACA,uBAFD,SAGQnF,EAAE,KACT,uBAJD,UAKSA,EAAE,qBACV,uBACA,mDACA,uBARD,UASSA,EAAE,OACV,uBAVD,QAWOA,EAAE,YAGR,IAtBJ,gCAuB8B,gDAvB9B,iCAwB0B,oBAAInD,MAAO,CAAEpF,MAAO,OAApB,kBAxB1B,kEAyB+D,IAC9D,oBAAIoF,MAAO,CAAEpF,MAAO,OAApB,kBA1BD,yCA2BkB,IACjB,cAACiJ,EAAA,EAAD,CACC6J,UAAU,EACVpF,QAAQ,WACR9C,KAAK,QACLxF,MAAO,CACN+K,YAAa,UACbnQ,MAAO,WANT,uCAUU,IAtCX,mBAyCA,uBACA,cAAC,UAAD,CAAS6S,KAAK,YAAd,SACC,cAACE,GAAD,MAED,uBACCJ,EAAS,cACV,cAAC/E,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACC,gKAMD,eAACE,EAAA,EAAD,CAAYF,QAAQ,KAApB,uSAKkC,IACjC,wEAED,uBACCiF,EAAS,4BACV,eAAC/E,EAAA,EAAD,CAAYF,QAAQ,KAApB,6BACkB,IAChB0E,EACA,gEACA,eAACtJ,EAAA,EAAD,WACC,cAAC8E,EAAA,EAAD,CAAYxI,MAAO,CAAEpF,MAAO+R,GAAQrE,QAAQ,KAA5C,SACEhF,EAAG,iDAEL,cAACkF,EAAA,EAAD,CAAYF,QAAQ,KAAKtI,MAAO,CAAEpF,MAAO8R,GAAzC,SACEpJ,EAAG,oBAGL,eAACkF,EAAA,EAAD,CAAYxI,MAAO,CAAEpF,MAAO+R,GAAQrE,QAAQ,QAA5C,+CACoCnF,EAAE,QADtC,oBAEaA,EAAE,QAEf,eAACqF,EAAA,EAAD,CAAYxI,MAAO,CAAEpF,MAAO8R,GAAUpE,QAAQ,QAA9C,wCAC6BnF,EAAE,QAD/B,oBAEKA,EAAE,YAlBV,sNAyBkCA,EAAE,QAzBpC,OA2BA,eAACqF,EAAA,EAAD,CAAYF,QAAQ,KAApB,2IAGEhF,EAAG,4CAEL,eAACkF,EAAA,EAAD,CAAYF,QAAQ,KAApB,sDAC2CnF,EAAE,KAD7C,YAC4D,IAC1DA,EAAE,KAFJ,qFAG8B,IAC5B6J,EACA,sDACA,eAACtJ,EAAA,EAAD,WACC,cAAC8E,EAAA,EAAD,CAAYxI,MAAO,CAAEpF,MAAO+R,GAAQrE,QAAQ,KAA5C,SACEhF,EACA,sDAGF,cAACkF,EAAA,EAAD,CAAYF,QAAQ,KAAKtI,MAAO,CAAEpF,MAAO8R,GAAzC,SACEpJ,EAAG,sCAEL,eAACkF,EAAA,EAAD,CAAYxI,MAAO,CAAEpF,MAAO+R,GAAQrE,QAAQ,QAA5C,sDAC2C,IACzCnF,EAAE,UAFJ,oBAEgCA,EAAE,QAElC,eAACqF,EAAA,EAAD,CAAYxI,MAAO,CAAEpF,MAAO8R,GAAUpE,QAAQ,QAA9C,gDACqCnF,EAAE,UAAW,IADlD,mBAEkBA,EAAE,QAGpB,cAACqF,EAAA,EAAD,CAAYxI,MAAO,CAAEpF,MAAO+R,GAAQrE,QAAQ,KAA5C,SACEhF,EACA,sDAIF,cAACkF,EAAA,EAAD,CAAYF,QAAQ,KAAKtI,MAAO,CAAEpF,MAAO8R,GAAzC,SACEpJ,EAAG,sCAGL,eAACkF,EAAA,EAAD,CAAYxI,MAAO,CAAEpF,MAAO+R,GAAQrE,QAAQ,QAA5C,sDAC2C,IACzCnF,EAAE,UAFJ,oBAEgCA,EAAE,QAElC,eAACqF,EAAA,EAAD,CAAYxI,MAAO,CAAEpF,MAAO8R,GAAUpE,QAAQ,QAA9C,gDACqCnF,EAAE,UAAW,IADlD,mBAEkBA,EAAE,YAGnB,IA3CJ,0DA4CyD,IACvD6J,EACA,4CACA,cAACtJ,EAAA,EAAD,UACC,cAAC8E,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACEhF,EACA,0IAlDL,sQA2DS,IACP0J,EACA,oDACA,eAACtJ,EAAA,EAAD,WACC,cAAC8E,EAAA,EAAD,CAAYF,QAAQ,QAApB,SACEnF,EACA,uGAGF,uBACA,eAACqF,EAAA,EAAD,CAAYF,QAAQ,QAApB,8EAEa,wCAFb,wEAG+C,IAC9C,yCAJD,8GArEH,OAiFA,cAACE,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACEhF,EACA,qKAIF,cAACkF,EAAA,EAAD,CAAYF,QAAQ,KAApB,6HAIA,eAACE,EAAA,EAAD,CAAYF,QAAQ,KAApB,qCAC0B,IACzB,kFAFD,yGAIiC,IAChC,gEALD,OAOA,uBACA,cAAC5E,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAAnC,SACC,cAACF,EAAA,EAAD,UACC,cAAC,GAAD,QAGF,uBACA,eAAC8E,EAAA,EAAD,CAAYF,QAAQ,KAApB,UACC,8DAC+BuE,EAD/B,mBACuD,IACrDE,EAFF,OAIA,uBALD,uBAMsBF,EANtB,SAOC,+BACC,8CACcA,EADd,oBACuCD,KAEvC,8CACcA,EADd,oBACyCE,KAEzC,8CACcA,EADd,oBACwCC,QAf1C,2DAkB0DF,EAAQ,IAlBlE,mBAmBkBE,EAnBlB,OAqBA,uBACA,cAACvE,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACC,iGAKD,eAACE,EAAA,EAAD,CAAYF,QAAQ,KAApB,UACEhF,EACA,4JAEAA,EACA,+JAGF,eAACkF,EAAA,EAAD,CAAYF,QAAQ,KAApB,yJAGmB,kDAHnB,kFAI+D,IAC7DnF,EACA,8DANF,yEASW,IACTA,EACA,mEACE,IAZJ,4EAcW,IACTA,EACA,iEAhBF,oDAkBkD,yCAAgB,IAlBlE,mBAmBiB,qCAnBjB,yIAqByC,KAxW7BqJ,EA0WV,2EA1WgBC,EA2WhB,yCA1WH,cAAC5I,EAAA,EAAD,CACC2B,KAAK,QACLxF,MAAO,CAAEpF,MAAO,WAChB4R,KAAMA,EACN7R,OAAO,SACPiT,IAAI,sBALL,SAOEnB,KA2UD,QA4BA,uBACCc,EAAS,oBACV,eAAC/E,EAAA,EAAD,CAAYF,QAAQ,KAApB,iJAGMnF,EAAE,WAHR,KAGsBA,EAAE,SAHxB,wBAGuD,IACrDA,EAAE,SAJJ,0BAIqCA,EAAE,SAJvC,KAImDA,EAAE,YAAa,IAJlE,wDAKuD,IACrDA,EAAE,gBANJ,qCAQA,uBAEA,cAAC,GAAD,CACCmJ,MAAO,cAAC9D,EAAA,EAAD,CAAYF,QAAQ,KAApB,8BACP8D,SAAUyB,GACVxB,OAAQyB,KAET,uBACA,cAACtF,EAAA,EAAD,CAAYF,QAAQ,KAApB,iCACA,qBACClE,IAAK2J,GACLrQ,MAAM,OACNyG,IAAI,wBAEL,uBACA,eAACqE,EAAA,EAAD,CAAYF,QAAQ,KAApB,mGAEwBnF,EAAE,2BAG1B,uBAEA,cAAC,GAAD,CACCmJ,MAAO,cAAC9D,EAAA,EAAD,CAAYF,QAAQ,KAApB,+BACP8D,SAAU4B,GACV3B,OAAQ4B,KAET,uBAEA,cAACzF,EAAA,EAAD,CAAYF,QAAQ,KAApB,kCACA,qBACClE,IAAK8J,GACLxQ,MAAM,OACNyG,IAAI,yBAGL,eAACqE,EAAA,EAAD,CAAYF,QAAQ,KAApB,UACEhF,EAAG,uDACHA,EAAG,yDAEL,eAACkF,EAAA,EAAD,CAAYF,QAAQ,KAApB,kHAEsCnF,EAAE,qBACtCG,EACA,iHAEAA,EACA,gHAED,wGAICA,EAAG,2DAEL,eAACkF,EAAA,EAAD,CAAYF,QAAQ,KAApB,oCACyBnF,EAAE,sBAD3B,uBAIA,uBACCoK,EAAS,oBACV,eAAC/E,EAAA,EAAD,CAAYF,QAAQ,KAApB,wJAGgB,IACf,cAACO,EAAA,EAAD,CACC7I,MAAO,CACN8I,WAAY,UACZlO,MAAO,SAER4K,KAAK,QACLkI,UAAU,EANX,SAQE,cAAC1E,EAAA,EAAD,CAAWzJ,SAAS,YACf,IAbR,uCAcqC,8CAdrC,qFAkBA,cAAC,UAAD,CAASkO,KAAK,YAAd,SACC,cAACU,EAAD,MAED,uBACCb,EAAM,iCACNC,EAAS,eACV,eAAC/E,EAAA,EAAD,CAAYF,QAAQ,KAApB,4gBAS2B,IACzB0E,EACA,qDACA,cAACtJ,EAAA,EAAD,UACC,cAAC8E,EAAA,EAAD,CAAYF,QAAQ,KAApB,qDAbH,6SAsByD,IACvD0E,EACA,wCACA,eAACtJ,EAAA,EAAD,WACC,eAAC8E,EAAA,EAAD,CAAYF,QAAQ,KAApB,UACC,mCADD,WACkB,kCADlB,SACgC,kCADhC,SAGA,cAACE,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACEnF,EACA,kHAID,IAnCJ,+CAuCA,cAACO,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAAnC,SACC,cAACF,EAAA,EAAD,UACC,qBAAKS,IAAI,UAAUC,IAAKgK,GAAY1Q,MAAM,aAG5C,eAAC8K,EAAA,EAAD,CAAYF,QAAQ,KAApB,UACC,sCADD,ubAUA,uBACCiF,EAAS,oBACV,cAAC/E,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACC,+BACC,qFACA,mGAIA,sFAGF,eAACE,EAAA,EAAD,CAAYF,QAAQ,KAApB,UACC,2FAEK,IAHN,8KASA,eAACE,EAAA,EAAD,CAAYF,QAAQ,KAApB,gNAIO,IACLnF,EACA,kEANF,YAQU,2CARV,yFASkD,IACjD,gDAVD,OAaA,uBACA,eAACqF,EAAA,EAAD,CAAYF,QAAQ,KAApB,UACC,2CADD,kBAGA,cAACE,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACC,+BACC,uCACO,IACN,cAACO,EAAA,EAAD,CACC7I,MAAO,CACN8I,WAAY,UACZlO,MAAO,SAER4K,KAAK,QACLkI,UAAU,EANX,SAQC,cAAC1E,EAAA,EAAD,CAAWzJ,SAAS,YACd,IAXR,uBAcA,4CACY,IACX,cAACsE,EAAA,EAAD,CACCyE,QAAQ,WACR9C,KAAK,QACLxF,MAAO,CACN+K,YAAa,UACbnQ,MAAO,WAER8S,UAAU,EAPX,sCAUU,IAZX,+BAa6B,qDAA4B,IAbzD,0CAgBA,kEACkC,IACjC,eAAC7J,EAAA,EAAD,CACCyE,QAAQ,WACR9C,KAAK,QACLxF,MAAO,CACN+K,YAAa,UACbnQ,MAAO,WAER8S,UAAU,EAPX,UASC,cAACW,EAAA,EAAD,IATD,yBAUU,YAIb,eAAC7F,EAAA,EAAD,CAAYF,QAAQ,KAApB,UACC,2CACA,cAACgG,EAAA,EAAD,CAAMhG,QAAQ,QAAQtI,MAAO,CAAEpF,MAAO,aAAgB,IACtD,gEAED,0BAIF,OACC,cAAC8I,EAAA,EAAD,CAAKE,eAAe,SAASD,QAAQ,OAArC,SACC,cAACD,EAAA,EAAD,CAAK6K,SAAS,MAAd,SAAqBf,OChpBT,OAA0B,wCCuG1BgB,GALA,kBACd,8BACC,qBAAKpK,IAAKqK,GAAgBtK,IAAK,oBAAqBzG,MAAM,Y,0FCpG7C,OAA0B,0CCA1B,OAA0B,sCCA1B,OAA0B,gCCK5BgR,GAAb,WACC,WAAYrD,EAAS9B,GAAO,oBAC3B9I,KAAK4K,QAAUA,EACf5K,KAAK8I,KAAOA,EAHd,wCAMC,SAAKrH,EAAQC,GACZ,OAAOD,EAAOrE,KAAI,SAAC8Q,EAAM1S,GACxB,OAAO0S,EAAOxM,EAAOlG,QARxB,mBAWC,SAAM2S,EAASC,GACd,OAAOpO,KAAKqO,KAAKF,EAASC,KAZ5B,iBAcC,SAAI/E,GACH,OAAOA,EAAMiF,QAAO,SAACvO,EAAGuE,GAAJ,OAAUvE,EAAIuE,OAfpC,kBAiBC,SAAKiK,EAAQC,GAEZ,IADA,IAAIC,EAAY,GACPjT,EAAI,EAAGA,EAAIgT,EAAWhT,IAC9BiT,EAAU7N,KAAK2N,GAEhB,OAAOE,IAtBT,oBAwBC,SAAOjE,GACN,OAAOA,IAzBT,qBAiCC,SAAQkE,EAAQC,GAAY,IAEnB/D,EAAkB5K,KAAlB4K,QAAS9B,EAAS9I,KAAT8I,KACTuF,EAAcrO,KAAdqO,KAAMO,EAAQ5O,KAAR4O,IAERC,EAAWR,EAAKK,EAAQ9D,GACxBkE,EAAUF,EAAIC,GAAY/F,EAC1BnK,EAAUgQ,EAAWG,GAG3B9O,KAAK0O,OAASA,EACd1O,KAAK6O,SAAWA,EAChB7O,KAAK8O,QAAUA,EACf9O,KAAKrB,QAAUA,EACfqB,KAAKoJ,OAASzK,IA/ChB,sBAuDC,SAAS4P,EAAQI,GAAY,IAEpBD,EAA6B1O,KAA7B0O,OAAQ9D,EAAqB5K,KAArB4K,QAASjM,EAAYqB,KAAZrB,QACjBoQ,EAAoB/O,KAApB+O,KAAMV,EAAcrO,KAAdqO,KAAMO,EAAQ5O,KAAR4O,IAEdhQ,EAAW+P,EAAWhQ,GAAW4P,EACjCS,EAAWD,EAAKnQ,EAAU8P,EAAO5S,QACjCmT,EAAQrQ,EACRZ,EAAWqQ,EAAKW,EAAUN,GAC1BQ,EAAUb,EAAKW,EAAUpE,GACzBuE,EAAaP,EAAIM,GAGvBlP,KAAKuO,OAASA,EACdvO,KAAKpB,SAAWA,EAChBoB,KAAKgP,SAAWA,EAChBhP,KAAKiP,MAAQA,EACbjP,KAAKhC,SAAWA,EAChBgC,KAAKkP,QAAUA,EACflP,KAAKmP,WAAaA,MA1EpB,KCCaC,GAAb,uFAMC,SAAQ3O,EAAMxF,GACb,IAAMoU,EAAU5O,EAAOxF,EACjBqU,EAActP,KAAKoJ,OAASzL,KAAK6G,IAAI/D,EAAOxF,EAAG,GAErD+E,KAAKqP,QAAUA,EACfrP,KAAKsP,WAAaA,EAClBtP,KAAKoJ,OAASkG,IAZhB,sBAkBC,WACCtP,KAAKkP,QAAU,EAAIlP,KAAKqP,YAnB1B,KCGaE,GAAb,WAEC,WAAY5I,EAAOiE,EAASC,GAAS,oBACpC7K,KAAKjC,MAAQ,GACbiC,KAAKoE,KAAO,IAAIgL,GAChBpP,KAAK2G,MAAQA,EAGb,IAAK,IAAItJ,EAAQ,EAAGA,EAAQuN,EAAQ9O,OAAQuB,IAAS,CAEpD,IADA,IAAImS,EAAQ,GACHlS,EAAS,EAAGA,EAASsN,EAAQvN,GAAOvB,OAAQwB,IACpDkS,EAAM5O,KACL,IAAIqN,GAAOrD,EAAQvN,GAAOC,GAASuN,EAAOxN,GAAOC,KAGnD0C,KAAKjC,MAAM6C,KAAK4O,IAfnB,uCAmBC,SAAInG,GACH,OAAOA,EAAMiF,QAAO,SAACvO,EAAGuE,GAAJ,OAAUvE,EAAIuE,OApBpC,iBAsBC,SAAI7C,EAAQC,GACX,IAAM+N,EAAehO,EAAO3F,OACtB4T,EAAehO,EAAO5F,OAC5B,GAAI4T,IAAiBD,EAIpB,OAHAE,QAAQC,MAAR,UACIH,EADJ,2BACmCC,EADnC,8BAGO,GAGP,IADA,IAAIG,EAAS,IAAIjL,MAAM6K,GACdjU,EAAI,EAAGA,EAAIiG,EAAO3F,OAAQN,IAClCqU,EAAOrU,GAAKiG,EAAOjG,GAAKkG,EAAOlG,GAEhC,OAAOqU,IAnCV,mBAsCC,SAAM/T,GAEL,IADA,IAAI+T,EAAS,IAAIjL,MAAM9I,GACdN,EAAI,EAAGA,EAAIM,EAAQN,IAC3BqU,EAAOrU,GAAK,EAEb,OAAOqU,IA3CT,mBA6CC,SAAMrF,GACL,OAAOA,EAAQ,EAAI,EAAI,IA9CzB,qBAgDC,SAAQA,GACP,OAAO,IAjDT,kBAoDC,SAAKA,GACJ,OAAO7M,KAAKyM,IAAI,EAAGI,KArDrB,oBAwDC,SAAOA,GACN,OAAOA,IAzDT,qBAiEC,SAAQA,EAAOsF,GAKd,IAJA,IAAIpB,EAAS,CAAClE,GACRuF,EAAY/P,KAAKjC,MAAMjC,OAGpBuB,EAAQ,EAAGA,EAAQ0S,EAAY,EAAG1S,IAAS,CAGnD,IADA,IAAI2S,EAAU,GACL1S,EAAS,EAAGA,EAAS0C,KAAKjC,MAAMV,GAAOvB,OAAQwB,IAEvD0C,KAAKjC,MAAMV,GAAOC,GAAQ2S,QAAQvB,EAAQ1O,KAAKkQ,MAC/CF,EAAQpP,KAAKZ,KAAKjC,MAAMV,GAAOC,GAAQ8L,QAIxCsF,EAASsB,EAEVhQ,KAAKjC,MAAMgS,EAAY,GAAG,GAAGE,QAAQvB,EAAQ1O,KAAKmQ,QAClDnQ,KAAKS,KAAOT,KAAKjC,MAAMgS,EAAY,GAfd,GAe+B3G,OACpDpJ,KAAKoE,KAAK6L,QAAQjQ,KAAKS,KAAMqP,KApF/B,sBAyFC,WAAY,IACHM,EAAepQ,KAAfoQ,IAAKC,EAAUrQ,KAAVqQ,MACbrQ,KAAKoE,KAAKkM,WACV,IAAIC,EAAU,CAACvQ,KAAKoE,KAAK8K,SACnBa,EAAY/P,KAAKjC,MAAMjC,OAG7BkE,KAAKjC,MAAMgS,EAAY,GADF,GACmBO,SACvCC,EAFoB,GAGpBvQ,KAAKwQ,SAEND,EAAUvQ,KAAKjC,MAAMgS,EAAY,GALZ,GAK6Bb,QAGlD,IAAK,IAAI7R,EAAQ0S,EAAY,EAAG1S,GAAS,EAAGA,IAAS,CAEpD,IADA,IAAI6R,EAAUmB,EAAMrQ,KAAKjC,MAAMV,GAAO,GAAGqR,OAAO5S,QACvCwB,EAAS,EAAGA,EAAS0C,KAAKjC,MAAMV,GAAOvB,OAAQwB,IACvD0C,KAAKjC,MAAMV,GAAOC,GAAQgT,SAASC,EAAQjT,GAAS0C,KAAKyQ,OACzDvB,EAAUkB,EAAIlB,EAASlP,KAAKjC,MAAMV,GAAOC,GAAQ4R,SAElDqB,EAAUrB,KA7Gb,oBAoHC,SAAOxS,GAIN,IAFA,IAAMgU,EAAK,SAAC7H,EAAQnM,EAAIiU,GAAb,OAAyB9H,EAASnM,EAAKiU,GAEzCtT,EAAQ,EAAGA,EAAQ2C,KAAKjC,MAAMjC,OAAQuB,IAC9C,IAAK,IAAIC,EAAS,EAAGA,EAAS0C,KAAKjC,MAAMV,GAAOvB,OAAQwB,IACvD,IACC,IAAI9B,EAAI,EACRA,EAAIwE,KAAKjC,MAAMV,GAAOC,GAAQU,SAASlC,OACvCN,IACC,CACD,IAAMoV,EAAaF,EAClB1Q,KAAKjC,MAAMV,GAAOC,GAAQsN,QAAQpP,GAClCkB,EACAsD,KAAKjC,MAAMV,GAAOC,GAAQU,SAASxC,IAE9BqV,EAAUH,EACf1Q,KAAKjC,MAAMV,GAAOC,GAAQwL,KAC1BpM,EACAsD,KAAKjC,MAAMV,GAAOC,GAAQ2R,OAI3BjP,KAAKjC,MAAMV,GAAOC,GAAQsN,QAAQpP,GAAKoV,EACvC5Q,KAAKjC,MAAMV,GAAOC,GAAQwL,KAAO+H,OA5ItC,KCEO,SAASC,GAAkBC,EAAUpK,GAG3C,IAFA,IAAItJ,EAAQ,GAEH2T,EAAI,EAAGA,EAAID,EAASjV,OAAQkV,IAAK,CAKzC,IAHA,IAAI1H,EAAY3C,EAAMqK,EAAI,GACtBC,EAAY,GAEPC,EAAI,EAAGA,EAAI5H,EAAW4H,IAAK,CAGnC,IAFA,IAAItG,EAAU,GAELK,EAAIiG,EAAGjG,EAAI8F,EAASC,GAAGlV,OAAQmP,GAAK3B,EAC5CsB,EAAQhK,KAAKmQ,EAASC,GAAG/F,IAE1BgG,EAAUrQ,KAAKgK,GAEhBvN,EAAMuD,KAAKqQ,GAEZ,OAAO5T,EAQD,SAAS8T,GAAcjG,EAAKkG,GAClC,IAAK,IAAI5V,EAAI,EAAGA,EAAI0P,EAAIpP,OAAQN,IAC/B,IAAK,IAAIwO,EAAI,EAAGA,EAAIkB,EAAI1P,GAAGM,OAAQkO,IAClCkB,EAAI1P,GAAGwO,IAAMkB,EAAI1P,GAAGwO,GAAGxI,QAAQ4P,GAGjC,OAAOlG,EAQD,SAASmG,GAAQhI,GAEvB,IADA,IAAIiI,EAAgB,GACX9V,EAAI,EAAGA,EAAI6N,EAAMvN,OAAQN,IACjC,IAAK,IAAIwO,EAAI,EAAGA,EAAIX,EAAM7N,GAAGM,OAAQkO,IACpCsH,EAAc1Q,KAAKyI,EAAM7N,GAAGwO,IAG9B,OAAOsH,EAQD,SAASC,GAAanH,GAC5B,OAAOzM,KAAK6T,MAAM7T,KAAKwN,SAAWxN,KAAK6T,MAAMpH,IAQvC,SAASqH,GAAcC,GAC7B,OAAO9M,MAAMoC,KAAK0K,EAAOpL,YCjEnB,SAASqL,GAAoB3W,EAAGC,GAGtC,MAAO,CAAE0E,OAFM5C,MAAiB6C,OAAO5E,EAAE4E,QAAQC,MAAM7E,EAAE6E,OAExCC,OADF/C,MAAiB6C,OAAO3E,EAAE2E,QAAQC,MAAM5E,EAAE4E,QAQnD,SAAS+R,GAAaC,GAC5B,OAAO9U,MAEL/B,GAAE,SAACL,GAAD,OAAOA,EAAEK,EAAI6W,KACf5W,GAAE,SAACN,GAAD,OAAOA,EAAEM,EAAI4W,KAOX,SAASC,GACfnL,EACAoL,EACAlV,EACAmV,EACAC,EACAtS,EACAG,GAEA,IAAIoS,EAAgB,GACpBA,EAActR,KAAK,CAACoR,IAEpB,IAAK,IAAI3U,EAAQ,EAAGA,EAAQsJ,EAAM7K,OAAS,EAAGuB,IAAS,CAEtD,IADA,IAAImS,EAAQ,GACHlS,EAAS,EAAGA,EAASqJ,EAAMtJ,GAAQC,IAAU,CACrD,IAAM6U,EAAa,CAClBnX,EAAG2E,EAAOoS,EAAgB1U,IAAUR,EAAc,EAClD5B,EAAG6E,EAAO,GAAc,GAATxC,GAAeT,EAAc,GAG7C2S,EAAM5O,KAAKuR,GAEZD,EAActR,KAAK4O,GAKpB,OAFA0C,EAActR,KAAK,CAACqR,IAEbC,EAOD,SAASE,GAAuBzL,EAAOuL,EAAeG,GAK5D,IAHA,IAAIC,EAAU,GACVC,EAAa,GACbC,EAAc,GACTnV,EAAQ,EAAGA,EAAQsJ,EAAM7K,OAAQuB,IAAS,CAClDmV,EAAc,GACd,IAAK,IAAIlV,EAAS,EAAGA,EAASqJ,EAAMtJ,GAAQC,IAAU,CACrDgV,EAAU,GACV,IACC,IAAIG,EAAa,EACjBA,EAAa9L,EAAMtJ,EAAQ,GAC3BoV,IAEAH,EAAQ1R,KACPyR,EAAe,CACdpY,OAAQiY,EAAc7U,EAAQ,GAAGoV,GACjCvY,OAAQgY,EAAc7U,GAAOC,MAIhCkV,EAAY5R,KAAK0R,GAElBC,EAAW3R,KAAK4R,GAGjB,OAAOD,E,IC+vCOG,G,kDA5yCd,WAAYvX,GAAQ,IAAD,8BAClB,cAAMA,IACDgJ,MAAQ,CAEZwO,aAAc,KACdpW,OAAQ,KACRiE,EAAG,GACHvF,EAAG,GACHwF,KAAM,GACNkG,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,GACpBjK,GAAI,KACJkW,MAAO,EACPC,SAAU,EAEVC,WAAY,GACZC,YAAa,GACbxQ,UAAW,GACX6B,KAAM,KACN/D,MAAO,EAEPhE,cAAe,GACfC,YAAa,GACbF,YAAa,GAEb4W,UAAW,aACXrS,MAAO,MAGPsS,SAAU,CACT/W,SAAS,EACTyJ,MAAO,KAGRxJ,MAAM,EACN+W,YAAY,EACZzW,cAAe,EACfD,aAAc,EACd2W,gBAAiB,EACjBlX,SAAU,GACV7B,aAAa,EACbgZ,YAAa,EACbC,eAAgB,EAChBC,mBAAoB,EACpBC,mBAAoB,EACpBC,UAAW,EAGXC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,WAAY,EACZ9R,cAAe,GACf+R,kBAAmB,EACnBzR,iBAAiB,EACjBH,OAAQ,QACR6R,KAAM,GAGP,EAAKC,kBAAoB,EAAKA,kBAAkBjO,KAAvB,gBACzB,EAAKkO,IAAM,EAAKA,IAAIlO,KAAT,gBACX,EAAKmO,cAAgB,EAAKA,cAAcnO,KAAnB,gBACrB,EAAKoO,OAAS,EAAKA,OAAOpO,KAAZ,gBACd,EAAKqO,MAAQ,EAAKA,MAAMrO,KAAX,gBACb,EAAKsO,gBAAkB,EAAKA,gBAAgBtO,KAArB,gBACvB,EAAKG,MAAQ,EAAKA,MAAMH,KAAX,gBACb,EAAKuO,gBAAkB,EAAKA,gBAAgBvO,KAArB,gBACvB,EAAKwO,WAAa,EAAKA,WAAWxO,KAAhB,gBAClB,EAAKyO,cAAgB,EAAKA,cAAczO,KAAnB,gBACrB,EAAK0O,KAAO,EAAKA,KAAK1O,KAAV,gBACZ,EAAK2O,iBAAmB,EAAKA,iBAAiB3O,KAAtB,gBArEN,E,oDA2EnB,SAAiBtF,EAAGvF,EAAG8X,EAAaD,EAAYnM,EAAOjK,GACtD,IAAMgY,EAAcC,EAAMpD,aAAavR,KAAKmE,MAAM3D,EAAE1E,QAC9CwX,EAAqB9S,EAAEkU,GACvBnB,EAAqBtY,EAAEyZ,GAEzBE,EAAmBD,EAAM7D,kBAAkBiC,EAAapM,GACxD3J,EAAK,IAAIuS,GAAc5I,EAAOiO,EAAkB9B,GAChD+B,EAAQ,IAAItF,GAAc5I,EAAOiO,EAAkB9B,GAGvD9V,EAAGiT,QAAQqD,EAAoBC,GAC/BvW,EAAGsT,WAGHuE,EAAM5E,QAAQqD,EAAoBC,GAClCsB,EAAMvE,WACNuE,EAAMC,OAAOpY,GACbmY,EAAM5E,QAAQqD,EAAoBC,GAGlC,IAAMC,EAAYqB,EAAMpU,KAClBsU,EAAcF,EAAMzQ,KAAKgF,OACzBgK,EAAc2B,EACd1B,EAAiBrW,EAAGoH,KAAKgF,OAAS2L,EAelCpT,EAZa,SAACqT,GAKnB,IAHA,IAAMC,EAAmBD,EAAWlZ,OAChCoZ,EAAc,IAAItQ,MAAMqQ,GAEnBzZ,EAAI,EAAGA,EAAIyZ,EAAkBzZ,IACrCqZ,EAAM5E,QAAQ+E,EAAWxZ,GAAI,GAC7B0Z,EAAY1Z,GAAKqZ,EAAMpU,KAGxB,OAAOyU,EAEUC,CAAW3U,GAE7BR,KAAKkG,SAAL,2BACIlG,KAAKmE,OADT,IAEC5H,OAAQS,EACR8E,cAAeH,EACfxF,MAAM,EACNiX,cACAC,iBACAQ,iBAAkBa,EAClBpB,qBACAC,qBACAC,YACAP,SAAS,2BACLjT,KAAKmE,MAAM8O,UADP,IAEP/W,SAAS,S,yDAQZ,oCAAA6D,EAAA,sDACS4G,EAAU3G,KAAKmE,MAAfwC,MACFhB,EAAQ,IAERsB,EAAQ,SAAC/B,GAAD,OAAQ,IAAIgC,SAAQ,SAACC,GAAD,OAASC,WAAWD,EAAKjC,OAG3DlF,KAAKkG,SAAS,CACbjK,SAAU,UACVgG,OAAQ,QACR7H,aAAa,EACbwZ,WAAY,EACZf,SAAU7S,KAAKmE,MAAMyO,MACrBO,gBAAiB,IAET3X,EAAI,EAfd,YAeiBA,EAAImL,EAAM7K,QAf3B,oBAgBEkE,KAAKkG,SAAS,CAAEzJ,cAAejB,IAC3BA,IAAMmL,EAAM7K,OAAS,EAjB3B,uEAoBQmL,EAAMtB,GApBd,QAemCnK,IAfnC,8BAuBCwE,KAAKkG,SAAS,CACb1J,aAAc,EACd2W,gBAAiB,EACjBlR,OAAQ,OACRG,iBAAiB,IA3BnB,UA8BO6E,EAAMtB,GA9Bb,eA+BC3F,KAAKkG,SAAS,CAAE1J,aAAc,EAAG4F,iBAAiB,IA/BnD,UAgCO6E,EAAMtB,GAhCb,QAiCC3F,KAAKkG,SAAS,CAAE1J,aAAc,IAG9BwD,KAAKkG,SAAS,CACb0N,WAAY5T,KAAKmE,MAAM5H,OAAO6H,KAAKgF,SAEpCpJ,KAAKkG,SAAS,CAAEjK,SAAU,WAAYkX,gBAAiB,IAE9C3X,EAAImL,EAAM7K,OAAS,EAzC7B,aAyCgCN,GAAK,GAzCrC,wBA0CEwE,KAAKkG,SAAS,CAAEzJ,cAAejB,IA1CjC,UA2CQyL,EAAMtB,GA3Cd,QAyCwCnK,IAzCxC,+BA6CCwE,KAAKkG,SAAS,CAAEzJ,eAAgB,IA7CjC,UA+COwK,EAAMtB,GA/Cb,eAgDC3F,KAAKkG,SAAS,CAAEjK,SAAU,eAhD3B,UAkDOgL,EAAM,KAlDb,eAmDCjH,KAAKkG,SAAS,CAAEjK,SAAU,SAAUmG,iBAAiB,IAnDtD,UAoDO6E,EAAM,KApDb,QAsDCjH,KAAKkG,SAAS,CACb9L,aAAa,EACbwZ,WAAY5T,KAAKmE,MAAMiP,YACvBD,gBAAiB,EACjBN,SAAU7S,KAAKmE,MAAM0O,SAAW,EAChC5Q,OAAQ,SA3DV,iD,qFAmEA,SAAkB0E,GAAQ,IAEjBzK,EADa8D,KAAKmE,MAAlB8O,SACA/W,QAGR,GAAKA,GAuCE,GAAIA,EAAS,CAAC,IAAD,EACY8D,KAAKmE,MAA5B4O,EADW,EACXA,YAAapM,EADF,EACEA,MAEftK,EAAgBsY,EAAM7D,kBAAkBiC,EAAapM,GAC3D3G,KAAKkG,SAAS,CAAE7J,uBA3CH,CAEb,IAAMQ,EAAc,GAFP,EAMYuY,EAAKzD,oBAHT,CAAE/R,OAAQ,CAAC,EAAG,KAAMC,MAAO,CAAC,GAAI,MAChC,CAAED,OAAQ,CAAC,EAAG,KAAMC,MAAO,CAAC,IAAK,KAE/CF,EANM,EAMNA,OAAQG,EANF,EAMEA,OAETN,EAAQ,CAAExE,EAAG,GAAsBC,EAAG,KACtCwE,EAAO,CAAEzE,EAAG,IAAuBC,EAAG,KAEtCoX,EAAiB+C,EAAKxD,aAAa/U,IAMnCqV,EAAgBkD,EAAKtD,wBAC1BnL,EALuB,CAAC,EAAG,GAAI,GAAI,GAAI,GAOvC9J,EACA2C,EACAC,EACAE,EACAG,GAEKyS,EAAa6C,EAAKhD,uBACvBzL,EACAuL,EACAG,GAIDH,EAAcmD,OAAO,EAAG,GAExBrV,KAAKkG,SAAS,CACb9J,YAAamW,EACbjW,YAAa4V,O,2BAchB,SAAcoD,GAAW,IAAD,OACvBnP,KAAQ,WACP,EAAKD,SAAS,CAAExJ,GAAI4Y,S,wDAQtB,4BAAAvV,EAAA,yDACO7D,GAAW8D,KAAKmE,MAAM8O,SAAS/W,QACrC8D,KAAKkU,OAAO,WAAY,UAAWhY,IACnB,IAAZA,EAHL,gCAIQ8D,KAAKmU,MAAMnU,KAAKmE,MAAM3D,EAAGR,KAAKmE,MAAMlJ,GAJ5C,gD,0EAYA,SAAOyQ,EAAK6J,EAAQtQ,GAAQ,IAAD,OAE1BkB,KAAQ,WACP,IAAIhC,EAAK,eAAQ,EAAKA,OAElBuH,KAAOvH,GAASoR,KAAUpR,EAAMuH,IAEnCvH,EAAMuH,GAAK6J,GAAUtQ,EACrB,EAAKiB,SAAS,CAAE/B,WAEhBwL,QAAQC,MAAM,oC,sBAUjB,SAAS7R,GAAQ,IAAD,OACf,OAAOoI,KAAQ,WACd,IAAIQ,EAAQ,EAAKxC,MAAMwC,MACvB5I,EAAMqS,IACLjK,IAAUqJ,MAAM,CACfgG,WAAY,CAAC,GACbC,MAAO9O,EAAM,GACbgI,WAAY,OACZ+G,SAAS,KAGX,IAAK,IAAIrY,EAAQ,EAAGA,EAAQsJ,EAAM7K,OAAS,EAAGuB,IAC7CU,EAAMqS,IACLjK,IAAUqJ,MAAM,CACfiG,MAAO9O,EAAMtJ,GACbsR,WAAY,OACZ+G,SAAS,KAYZ,OARA3X,EAAMqS,IACLjK,IAAUqJ,MAAM,CACfiG,MAAO,EACP9G,WAAY,SACZ+G,SAAS,KAIJ3X,O,0BAQT,SAAarB,GACZ,IAAIqB,EAAQoI,MAMZ,OALAnG,KAAK2V,SAAS5X,GACdA,EAAM6X,QAAQ,CACbC,UAAW1P,IAAS2P,IAAIpZ,GACxB0H,KAAM,qBAEArG,I,0DAOR,WAAYyC,EAAGvF,GAAf,oCAAA8E,EAAA,sDAEOwG,EAAUJ,KAAQ,WACvB,OAAOA,IAAU3F,MAEZ4F,EAAUD,KAAQ,WACvB,OAAOA,IAAUlL,MAEZ8C,EAAQoI,KAAQ,WACrB,OAAO,EAAKhC,MAAMwO,gBAEb1L,EAAQ,SAAC/B,GAAD,OAAQ,IAAIgC,SAAQ,SAACC,GAAD,OAASC,WAAWD,EAAKjC,OAIvD6Q,EAAO/V,KAAKmE,MAAM8O,SAAS/W,QAfhC,WAiBiB,IAAT6Z,EAjBR,wBAkBE/V,KAAKkG,SAAS,CAAEgN,YAAY,IAlB9B,EAmB6BlT,KAAKmE,MAAM8O,SAA9B/W,EAnBV,EAmBUA,QAASyJ,EAnBnB,EAmBmBA,MACjBoQ,EAAO7Z,EApBT,UAqBQ6B,EAAMiY,IAAIzP,EAASH,EAAS,CACjCV,OAAQ,EACRuQ,UAAW,IAvBd,eAyBE9P,KAAQ,WACP,IAAI+P,EAAanY,EAAMoY,QAAQ5P,GAC3B9F,EAAOkU,EAAMlD,cAAcyE,GAC3B9R,EAAO+B,IAAUb,iBAAiBrK,EAAGwF,GAAM6F,WAAW,GAC1D,EAAK8N,gBAAgBrW,EAAOqG,EAAM3D,EAAM,EAAK0D,MAAMyO,MAAQ,MAG5D5S,KAAKkG,SAAS,CAAEgN,YAAY,IAhC9B,UAiCQjM,EAAMtB,GAjCd,+BAmCC3F,KAAKkG,SAAS,CAAEyM,aAAc5U,IAC9BoI,IAAWI,GACXJ,IAAWC,GArCZ,iD,2HA4CA,WAAoBgQ,EAAKC,EAAQC,GAAjC,oBAAAvW,EAAA,sEACOoG,MADP,OAECA,KAAQ,WACP,IAAMI,EAAUJ,KACd,EAAKhC,MAAM9D,MACZ,EAAK8D,MAAM9D,MACXiW,GAEKlQ,EAAUD,IAAOiQ,EAAI7P,GAAU8P,GAC/BH,EAAa/P,IAAaI,GAC1B/F,EAAImU,EAAMlD,cAAclL,GACxBtL,EAAI0Z,EAAMlD,cAAcrL,GACxB3F,EAAOkU,EAAMlD,cAAcyE,GAEjC,EAAKhQ,SAAS,CACb1F,IACAvF,IACAwF,YAjBH,2C,wFA4BA,SAAgB1C,EAAOqG,EAAM3D,EAAMmS,GAGlC,IAFA,IAAIG,EAAc,GACdD,EAAa,GACRtX,EAAI,EAAGA,EAAIuC,EAAMwY,aAAaza,OAAQN,KAC7CA,EAAI,IAAM,EAAIuX,EAAcD,GAAYlS,KACxCgE,MAAMoC,KAAKjJ,EAAMwY,aAAa/a,GAAG8K,aAGnC,IAAM/D,EAAS,uBAAOvC,KAAKmE,MAAM5B,WAAlB,CAA6B6B,IAC5CpE,KAAKkG,SAAS,CACb4M,aACAC,cACA3O,OACA3D,OACAmS,QACArQ,cAEDvC,KAAK+T,kBAAkB/T,KAAKmE,MAAMwC,S,+DAMnC,sBAAA5G,EAAA,sDACCC,KAAKkG,SAAS,CAAE+M,SAAS,2BAAMjT,KAAKmE,MAAM8O,UAAlB,IAA4B/W,SAAS,MAD9D,gD,0HAQA,WAAsBmE,GAAtB,0BAAAN,EAAA,6DACCoG,IAAWnG,KAAKmE,MAAMwO,cACdhS,EAAUX,KAAKmE,MAAfxD,MAGRwF,KAAQ,WACO,QAAVxF,EACHyV,EAAMjQ,IACc,SAAVxF,EACVyV,EAAMjQ,IACc,QAAVxF,IACVyV,EAAMjQ,QAXT,SAgBOnG,KAAKiU,cAAcmC,EAAK/V,EAAO,IAhBtC,OAiBOtC,EAAQoI,KAAQ,WACrB,OAAO,EAAKqQ,aAAa,EAAKrS,MAAMzH,OAErCsD,KAAKkG,SAAS,CACb0M,MAAO,EACPxO,KAAM,KACN7H,OAAQ,KACRoW,aAAc5U,EACd1B,cAAe,GACfkG,UAAW,KAEZ4D,IA5BD,2D,iHAmCA,WAAY9F,GAAZ,SAAAN,EAAA,sDACCC,KAAKsU,aACLtU,KAAKqU,gBAAgBhU,GAFtB,gD,gFAUA,SAAYpD,GACX,IAAMwZ,EAAa,QAGnB,OADa9Y,KAAKuM,IAAI,EAAGuM,EAAaxZ,EADpB,mBACwC,M,sEAI3D,uCAAA8C,EAAA,sDAECoG,IAAc,OACdnG,KAAKiU,cAAc9N,IAAQnG,KAAKmE,MAAM9D,MAAO,IAC7CL,KAAK+T,kBAAkB/T,KAAKmE,MAAMwC,OAC5B5I,EAAQoI,KAAQ,WACrB,OAAO,EAAKqQ,aAAa,EAAKrS,MAAMzH,OAE/BO,EAAQyZ,SAASC,KAAKC,YACtB9C,EAAO9T,KAAK6W,YAAY5Z,GAC9B+C,KAAKkG,SAAS,CAAEyM,aAAc5U,EAAO+V,SAVtC,gD,yFAYA,WACC,OAAI9T,KAAKmE,MAAM+O,a,oBAMhB,WAAU,IAAD,SAiCJlT,KAAKmE,MA9BR3D,EAHO,EAGPA,EACAvF,EAJO,EAIPA,EACA0L,EALO,EAKPA,MACAtG,EANO,EAMPA,MACA9D,EAPO,EAOPA,OACAwW,EARO,EAQPA,YACAD,EATO,EASPA,WACArS,EAVO,EAUPA,KACAtE,EAXO,EAWPA,KACAyW,EAZO,EAYPA,MACAjS,EAbO,EAaPA,MACAjE,EAdO,EAcPA,GACA0H,EAfO,EAePA,KACA6O,EAhBO,EAgBPA,SACA5W,EAjBO,EAiBPA,cACAD,EAlBO,EAkBPA,YACAE,EAnBO,EAmBPA,YACAG,EApBO,EAoBPA,cACAD,EArBO,EAqBPA,aACAP,EAtBO,EAsBPA,SACA7B,EAvBO,EAuBPA,YACAkZ,EAxBO,EAwBPA,mBACAC,EAzBO,EAyBPA,mBACAH,EA1BO,EA0BPA,YACAK,EA3BO,EA2BPA,kBACAC,EA5BO,EA4BPA,kBACAC,EA7BO,EA6BPA,kBACAC,EA9BO,EA8BPA,WACAT,EA/BO,EA+BPA,gBACAW,EAhCO,EAgCPA,KAEO5X,GAAmB+W,EAAnB/W,QAASyJ,GAAUsN,EAAVtN,MAGXmR,GAAW,CAChB,CAAEhH,MAAO,MAAOsG,IAAKjQ,IAAQ9F,MAAO,GACpC,CAAEyP,MAAO,MAAOsG,IAAKjQ,IAAQ9F,MAAO,GACpC,CAAEyP,MAAO,OAAQsG,IAAKjQ,IAAS9F,MAAO,IAIjC0W,GAEL,cAAC3O,EAAA,EAAD,CACC7I,MAAO,CACN8I,WAAarI,KAAKmE,MAAM8O,SAAS/W,QAE9B,UADA,UAEH/B,MAAO,SAERmO,oBAAkB,EAClBjF,QAAS,kBAAM,EAAK2Q,OARrB,SAUG9X,GAA0B,cAACsM,EAAA,EAAD,IAAhB,cAACD,EAAA,EAAD,MAGRyO,GACL,eAACxL,GAAA,EAAD,WACC,cAACkB,EAAA,EAAD,CAASb,MAAM,QAAQe,OAAK,EAA5B,SACC,cAAC1E,EAAA,EAAD,CACC+E,SAAU/Q,GACVmH,QAAS,WACR,EAAK4C,MAAM5F,IAHb,SAMC,cAAC8H,EAAA,EAAD,QAGD4O,GACD,cAACrK,EAAA,EAAD,CAASb,MAAM,WAAWe,OAAK,EAA/B,SACC,cAAC1E,EAAA,EAAD,CACC3I,MAAO,CACNpF,MAAiB,IAAVwL,GAAc,UAAY,QAElCtC,QAAS,WACR,EAAK6C,SAAS,CACb+M,SAAS,2BACLA,GADI,IAEPtN,MAAiB,IAAVA,GAAc,IAAM,OAR/B,SAaC,cAACsR,GAAA,EAAD,WAKEC,GACL,cAACjU,EAAA,EAAD,CAAKyE,UAAW,EAAhB,SACC,eAAC8D,GAAA,EAAD,WACC,cAACpI,EAAA,EAAD,CACCC,QAAO,sBAAE,sBAAAtD,EAAA,sEACF,EAAKyU,OADH,2CAGTvH,SAAU7S,EACVmF,MAAO,CACNpF,MAAOC,EAAc,YAAc,QAEnCkQ,YAAalQ,EAAc,YAAc,SAE1CyN,QAAQ,WACR9C,KAAK,QAXN,oBAgBA,cAAC3B,EAAA,EAAD,CACCC,QAAO,sBAAE,sBAAAtD,EAAA,6DACR,EAAK0U,iBACJjU,EACAvF,EACA8X,EACAD,EACAnM,EACAjK,EACAP,GARO,SAUF,EAAKqY,OAVH,2CAYTjV,MAAO,CACNpF,MAAOC,EAAc,YAAc,UACnCkQ,YAAalQ,EAAc,YAAc,WAE1C6S,SAAU7S,EACVyN,QAAQ,WACR9C,KAAK,QAnBN,uCA0BGoS,GACL,eAAClU,EAAA,EAAD,CAAKhG,MAAO,IAAK4M,WAAY,GAA7B,UACC,cAACjC,EAAA,EAAD,CAAMC,QAAQ,WAAd,SACC,eAACC,EAAA,EAAD,WACC,eAACC,EAAA,EAAD,CACCF,QAAQ,UACRtI,MAAO,CACNpF,MAAO,WAHT,UAME,iBACD,cAAC+N,EAAA,EAAD,CACCnD,KAAK,QACLxF,MAAO,CAAEpF,MAAO,UAChBkJ,QAAS,WACR,EAAK6C,SAAS,CAAEuN,mBAAmB,KAJrC,SAOC,cAAC5F,EAAA,EAAD,SAGF,wBAEA,eAAC9F,EAAA,EAAD,CAAYF,QAAQ,KAApB,oBACS1L,EAAO6D,KAAKmE,MAAM0O,SAAWD,KAGrCzW,EACA,eAACqP,GAAA,EAAD,WACC,cAACzD,EAAA,EAAD,CACCxI,MAAO,CACNpF,MAAO,UAER0N,QAAQ,KAJT,oBAQA,cAACzE,EAAA,EAAD,CACC6J,UAAU,EACV1N,MAAO,CACNpF,MACc,YAAb8B,EACG,SACA,QANN,qBAWA,cAACmH,EAAA,EAAD,CACC6J,UAAU,EACV1N,MAAO,CACNpF,MACc,aAAb8B,EACG,SACA,QANN,sBAWA,cAACmH,EAAA,EAAD,CACC6J,UAAU,EACV1N,MAAO,CACNpF,MACc,WAAb8B,EACG,SACA,QANN,uBAaD,GAGD,cAAC8L,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACU,MAARzD,GAAgBjI,EACd,GADF,gBAEWiI,EAAK6D,YAAY,MAG9B,cAACF,EAAA,EAAD,CAAYF,QAAQ,KAAKtI,MAAO,CAAEpF,MAAO,WAAzC,SACEgC,EAAI,6BACoBmX,EAAmBrL,YACzC,GAFE,aAGIsL,EAAmBtL,YAAY,GAHnC,KAIF,KAGJ,eAACF,EAAA,EAAD,CACCF,QAAQ,KACRtI,MAAO,CACNpF,MACCgZ,EAAkB,EAAI,QAAU,aAJnC,UAOEhX,GAAuB,IAAfyX,EACNT,EAAkB,EACjB,SACA,aACD,GACFhX,GAAuB,IAAfyX,EACR,cAAC,KAAD,CACC3O,MAAO2O,EACPwD,YAAa,SAACnS,GAAD,OACZA,EAAMgD,YAAY,IAEnB7J,SAAU,MAGX,MAGF,eAAC2J,EAAA,EAAD,CAAYxI,MAAO,CAAEpF,MAAO,QAAU0N,QAAQ,UAA9C,UACEsL,EAAkB,GAAKhX,EACrB,kBACA,GACFgX,EAAkB,GAAKhX,EACvB,cAAC,KAAD,CACC8I,MAAOjF,KAAKmE,MAAMkP,eAClB+D,YAAa,SAACnS,GAAD,OACZA,EAAMgD,YAAY,IAEnB7J,SAAU,MAGX,MAIDjC,EAAO+a,GAAmBF,GAE3B,cAACxL,GAAA,EAAD,UACU,MAARpH,GAAgBhK,EAChB,GAEA,eAACgJ,EAAA,EAAD,CACCyE,QAAQ,WACRtI,MAAO,CACNpF,MAAO,UACPmQ,YAAa,WAEdjH,QAAO,sBAAE,sBAAAtD,EAAA,0DACJ5D,EADI,gBAEP,EAAK+J,SAAS,CACbjK,SAAU,GACVE,MAAOA,IAER,EAAK6X,MANE,6BAQP,EAAKS,iBACJjU,EACAvF,EACA8X,EACAD,EACAnM,EACAjK,EACAP,GAfM,SAiBD,EAAKqY,OAjBJ,2CANV,UA2BErY,EAAO,cAACyR,EAAA,EAAD,IAAmB,GAC1BzR,EACE,qBADE,iCAEwByW,aAOlC,cAAC3P,EAAA,EAAD,CAAKyE,UAAW,EAAhB,SACC,cAACE,EAAA,EAAD,CAAMC,QAAQ,WAAd,SACC,eAACC,EAAA,EAAD,WACC,eAACC,EAAA,EAAD,CACCF,QAAQ,UACRtI,MAAO,CACNpF,MAAO,WAHT,UAME,gBACD,cAAC+N,EAAA,EAAD,CACCnD,KAAK,QACLxF,MAAO,CAAEpF,MAAO,UAChBkJ,QAAS,WACR,EAAK6C,SAAS,CACbwN,mBAAmB,KALtB,SASC,cAAC7F,EAAA,EAAD,SAGF,eAACrC,GAAA,EAAD,WACC,cAACzD,EAAA,EAAD,CAAYF,QAAQ,UAApB,2BAxSM,CAAC,KAAQ,KAAO,KAAO,MA2SxBzK,KAAI,SAACoK,EAAKhM,GAAN,OACR,cAAC6b,GAAA,EAAD,CACCpK,SAAU/Q,IAAWC,EAErB2T,MAAK,UAAKtI,GACVjI,MAAO,CACNpF,MACCuC,IAAO8K,EAAM,QAAU,OACxBa,WACC3L,IAAO8K,EACJ,UACA,aAELnE,QAAS,WACR8C,KAAQ,WACP,EAAKoO,cAAc/M,GACnB,EAAKvB,MAAM5F,QAbR7E,SAoBR,eAACgQ,GAAA,EAAD,WACC,cAACzD,EAAA,EAAD,CAAYF,QAAQ,UAApB,sBAGCiP,GAAS1Z,KAAI,SAAC8Q,EAAM1S,GAAP,OACb,cAAC6b,GAAA,EAAD,CACCpK,SAAU/Q,IAAWC,EAErB2T,MAAO5B,EAAK4B,MACZvQ,MAAO,CACNpF,MACCwG,IAAUuN,EAAK4B,MACZ,QACA,OACJzH,WACC1H,IAAUuN,EAAK4B,MACZ,UACA,aAELzM,QAAS,WACR,EAAK6C,SAAS,CACbS,QACAhG,MAAOuN,EAAK4B,QAEb,EAAK7J,MAAM5F,GACX8F,KAAQ,WACP,EAAK8N,cACJ/F,EAAKkI,IACLlI,EAAK7N,MACL,SAtBE7E,SA8BR,eAACgQ,GAAA,EAAD,WACC,cAACzD,EAAA,EAAD,CAAYF,QAAQ,UAApB,mBAEA,cAACzE,EAAA,EAAD,CACC6J,SAAU/Q,IAAWC,EACrBkH,QAAS,WACR,IAAItD,EAAI4G,EACJ5G,EAAEjE,OAAS,IACdiE,EAAEA,EAAEjE,OAAS,GAAK,EAClBiE,EAAEa,KAAK,GACP,EAAKsF,SAAS,CAAES,MAAO5G,IACvB,EAAKgU,kBAAkBhU,GACvB,EAAKkG,MAAM5F,KATd,eAgBA,cAAC+C,EAAA,EAAD,CACC6J,SAAU/Q,IAAWC,EACrBkH,QAAS,WACR,IAAItD,EAAI4G,EACJ5G,EAAEjE,OAAS,IACdiE,EAAEsV,OAAOtV,EAAEjE,OAAS,EAAG,GACvB,EAAKoK,SAAS,CAAES,MAAO5G,IACvB,EAAKgU,kBAAkBhU,GACvB,EAAKkG,MAAM5F,KARd,iCAoBAiX,GACL,eAACrU,EAAA,EAAD,CAAK4G,WAAY,GAAjB,UACC,cAAC5G,EAAA,EAAD,UACE9G,EACA,cAAC,EAAD,CACCc,MAAO,IACPC,OAAQ,IACRwC,QAAS,EACTF,OAAQa,EACRZ,KAAMY,EACNG,EAAGA,EACHvF,EAAGA,EACHwF,KAAMA,EACNkB,UAAW3B,KAAKmE,MAAMrC,cACtBzH,GAAI,EACJ6D,OAAQ8B,KAAKmE,MAAM0P,iBACnB0D,MAAOvX,KAAKmE,MAAMgP,gBAClB/Q,gBAAiBpC,KAAKmE,MAAM/B,gBAC5BH,OAAQjC,KAAKmE,MAAMlC,SAGpB,cAAC,EAAD,CACChF,MAAO,IACPC,OAAQ,IACRwC,QAAS,EACTF,OAAQa,EACRZ,KAAMY,EACNG,EAAGA,EACHvF,EAAGA,EACHwF,KAAMA,EACNpG,GAAI,EACJ+D,SAAU,IACVF,QAAS,MAIZ,cAAC+E,EAAA,EAAD,CAAKyE,UAAW,GAAhB,SACC,cAAC,EAAD,CAAMnF,UAAWvC,KAAKmE,MAAM5B,UAAWnE,SAAU,WAI9CoZ,GACL,eAACvU,EAAA,EAAD,WACC,cAAC,EAAD,CACC1G,OAAQA,EACRiO,MAAO8I,EACPxD,MAAOyD,EACPlX,cAAeA,EACfD,YAAaA,EACbE,YAAaA,EACbqK,MAAOA,EACPkE,OAAQiI,EACR5W,QACCA,GACa,IAAVyJ,GACC,cACA,aACD,aAEJoD,KAAM7M,GACNC,KAAMA,EACNmU,SAAUtQ,KAAKmE,MAAM6O,UACrBvW,cAAeA,EACfD,aAAcA,EACdP,SAAUA,EACVmX,YAAaA,EACbhZ,YAAaA,EACbsC,GAAIA,IAEL,cAACwL,EAAA,EAAD,CACCnD,KAAK,QACLxF,MAAO,CACNpF,MAAO,SACPsd,SAAU,WACVC,OAAQ,QACRC,KAAM,SAEPtU,QAAS,WACR,EAAK6C,SAAS,CACbyN,mBAAmB,KAVtB,SAcC,cAAC9F,EAAA,EAAD,SAKG+J,GACL,gCACC,eAACC,GAAA,EAAD,CACCC,WAAY,CACXvY,MAAO,CACNyD,gBAAiB,YAGnB+U,KAAMtE,EANP,UAQC,cAACuE,GAAA,EAAD,UACC,cAAC9P,EAAA,EAAD,CACC7E,QAAS,WACR,EAAK6C,SAAS,CAAEuN,mBAAmB,KAFrC,SAKC,cAACwE,GAAA,EAAD,QAIF,cAACC,GAAA,EAAD,UACC,cAACjV,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAAnC,SACC,eAACF,EAAA,EAAD,CAAKkV,aAAc,EAAnB,UACC,cAACpQ,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACC,iDAED,cAACE,EAAA,EAAD,CAAYF,QAAQ,QAApB,SACC,+BACC,uCACO,IACN,cAACO,EAAA,EAAD,CACC7I,MAAO,CACN8I,WAAY,UACZlO,MAAO,SAER4K,KAAK,QACLkI,UAAU,EANX,SAQC,cAAC1E,EAAA,EAAD,CAAWzJ,SAAS,YACd,IAXR,yDAeA,4CACY,IACX,cAACsE,EAAA,EAAD,CACCyE,QAAQ,WACR9C,KAAK,QACLxF,MAAO,CACN+K,YAAa,UACbnQ,MAAO,WAER8S,UAAU,EAPX,sCAUU,IAZX,8BAa6B,IAC5B,qDAdD,wGAiB8B,IAC7B,sCACA,qBACCvJ,IAAI,YACJC,IAAKyU,GACLnb,MAAM,YAGR,gGAE6B,IAC5B,eAACmG,EAAA,EAAD,CACCyE,QAAQ,WACR9C,KAAK,QACLxF,MAAO,CACN+K,YAAa,UACbnQ,MAAO,WAER8S,UAAU,EAPX,UASC,cAACW,EAAA,EAAD,IATD,yBAWU,sBAQjB,eAACiK,GAAA,EAAD,CACCC,WAAY,CACXvY,MAAO,CACNyD,gBAAiB,YAGnB+U,KAAMrE,EANP,UAQC,cAACsE,GAAA,EAAD,UACC,cAAC9P,EAAA,EAAD,CACC7E,QAAS,WACR,EAAK6C,SAAS,CAAEwN,mBAAmB,KAFrC,SAKC,cAACuE,GAAA,EAAD,QAIF,cAACC,GAAA,EAAD,UACC,cAACjV,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAAnC,SACC,eAACF,EAAA,EAAD,CAAKkV,aAAc,EAAnB,UACC,cAACpQ,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACC,gEAED,uBACA,cAACE,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACC,wCAED,eAACE,EAAA,EAAD,CAAYF,QAAQ,QAApB,6DAGC,+BACC,gJAMA,oGAOF,cAACE,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACC,2CAED,eAACE,EAAA,EAAD,CAAYF,QAAQ,QAApB,2CAEC,+BACC,gFAIA,kFAIA,wFAWN,eAACgQ,GAAA,EAAD,CACCC,WAAY,CACXvY,MAAO,CACNyD,gBAAiB,YAGnB+U,KAAMpE,EANP,UAQC,cAACqE,GAAA,EAAD,UACC,cAAC9P,EAAA,EAAD,CACC7E,QAAS,WACR,EAAK6C,SAAS,CAAEyN,mBAAmB,KAFrC,SAKC,cAACsE,GAAA,EAAD,QAIF,eAACC,GAAA,EAAD,WACC,cAACjV,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAAnC,SACC,cAACF,EAAA,EAAD,UACC,qBAAKU,IAAK0U,GAAS3U,IAAI,UAAUzG,MAAM,YAGzC,cAACgG,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAAnC,SACC,eAACF,EAAA,EAAD,CAAKkV,aAAc,EAAnB,UACC,cAACpQ,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACC,iDAED,cAACE,EAAA,EAAD,CAAYF,QAAQ,QAApB,uKAQF,qBACClE,IAAK2U,GACL5U,IAAI,gBACJzG,MAAM,SAEP,cAACgG,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAAnC,SACC,eAACF,EAAA,EAAD,CAAKkV,aAAc,EAAnB,UACC,cAACpQ,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACC,oDAED,eAACE,EAAA,EAAD,CAAYF,QAAQ,QAApB,iDACsC,IACrC,cAACzE,EAAA,EAAD,CACCyE,QAAQ,WACR9C,KAAK,QACLxF,MAAO,CACN+K,YAAa,UACbnQ,MAAO,WAER8S,UAAU,EAPX,sCAUU,IAZX,kFAgBA,cAAClF,EAAA,EAAD,CAAYF,QAAQ,QAApB,gGAWN,OACC,sBAAKxN,GAAG,MAAR,UACC,cAACuN,EAAA,EAAD,CACCC,QAAQ,WACRtI,MAAO,CACN8I,WAAY,UACZkQ,aAAc,QACdC,cAAe,OALjB,SAQC,eAAC1Q,EAAA,EAAD,CACCvI,MAAO,CACNkZ,UAAU,SAAD,OAAW3E,EAAX,MAFX,UAKC,eAAC7Q,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAAnC,UACC,cAACF,EAAA,EAAD,CAAK0E,YAAa,GAAlB,SACC,qBAAKhE,IAAKiI,GAAQlI,IAAI,UAEvB,cAACT,EAAA,EAAD,UACC,cAAC8E,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACC,kDAIH,eAAC5E,EAAA,EAAD,CACCpI,UAAU,UACVqI,QAAQ,OACRC,eAAe,SACfuE,UAAW,EAJZ,UAME8P,GACAF,GACAH,WAIHS,U,GAvyCmB7W,a,UCnClBjE,GAAO,SAACiP,EAAMC,EAAS0M,GAAhB,OACZ,cAACtV,EAAA,EAAD,CACC7D,MAAO,CAAEpF,MAAOue,EAAW,UAAY,WACvC3M,KAAMA,EACN7R,OAAO,SACPiT,IAAI,sBAJL,SAMEnB,KAwIY2M,GApIK,kBACnB,cAAC1V,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAAnC,SACC,eAACF,EAAA,EAAD,CAAKhG,MAAM,MAAMyK,UAAW,EAA5B,UACC,cAACK,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACC,mDAED,eAACE,EAAA,EAAD,CAAYF,QAAQ,QAApB,UACE/K,GACA,qCACA,yBACA,GAJF,KAOEA,GAAK,uBAAwB,kBAAkB,GAC/CA,GAAK,yBAA0B,eAAe,GAC/C,+BACC,0FAGA,4GAIA,yFAGF,uBACA,eAACiL,EAAA,EAAD,CAAYF,QAAQ,QAApB,UACE/K,GACA,8CACA,yCACA,GAJF,KAOEA,GAAK,+BAAgC,eAAe,GACrD,+BACC,6GAIA,4EAGF,uBACA,eAACiL,EAAA,EAAD,CAAYF,QAAQ,QAApB,UACE/K,GACA,4CACA,iBACA,GAJF,KAOEA,GAAK,sBAAuB,YAAY,GACxCA,GACA,4CACA,gBACA,GAEAA,GAAK,uBAAwB,eAAe,GAC5CA,GAAK,sBAAuB,eAAe,GAC3CA,GAAK,yBAA0B,eAAe,GAC9CA,GAAK,0BAA2B,eAAe,GAC/CA,GAAK,sBAAuB,gBAAgB,GAC5CA,GAAK,oCAAqC,aAAa,GACxD,+BACC,yEACA,oFACA,mFAGF,uBACA,eAACiL,EAAA,EAAD,CAAYF,QAAQ,QAApB,UACE/K,GACA,oEACA,2CACA,GAEAA,GAAK,0BAA2B,eAAe,GAC/CA,GAAK,2BAA4B,kBAAkB,GACnDA,GACA,0CACA,gBACA,GAEAA,GAAK,oCAAqC,aAAa,GACxD,6BACC,0FAIF,uBACA,cAACiL,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACC,qDAED,eAACE,EAAA,EAAD,CAAYF,QAAQ,QAApB,sBACW/K,GAAK,oBAAqB,SAAS,GAD9C,MAGEA,GAAK,uBAAwB,YAAY,GAH3C,4CAKEA,GAAK,gCAAiC,iBAAiB,GALzD,4DAOEA,GAAK,qBAAsB4F,EAAE,YAAY,GAP3C,aAQYA,EAAE,WARd,sBAUA,uBACA,cAACqF,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACC,oDAED,eAACE,EAAA,EAAD,CAAYF,QAAQ,QAApB,sCAEC,cAACK,EAAA,EAAD,CAAY6D,KAAK,gDAAjB,SACC,cAAC6M,GAAA,EAAD,MAHF,0EAMQ,2CANR,OAQA,uBACA,cAAC7Q,EAAA,EAAD,CAAYF,QAAQ,KAApB,SACC,iDAED,eAACE,EAAA,EAAD,CAAYF,QAAQ,QAApB,uBAEE/K,GAAK,4BAA6B,kBAAkB,MAEtD,eAACiL,EAAA,EAAD,CAAYF,QAAQ,QAApB,+BAEE/K,GAAK,qBAAsB,gBAAgB,MAE7C,6BCnHY+b,G,uKAtBd,WAECC,IAAQC,WAAW,kBACnBD,IAAQE,SAAS,O,oBAElB,WACC,OACC,gCACC,cAAC,GAAD,IACA,cAACC,GAAD,IACA,cAAC,UAAD,CAASjM,KAAK,WAAd,SACC,cAAC,GAAD,MAED,cAAC,UAAD,CAASA,KAAK,mBAAd,SACC,cAAC,GAAD,MAED,8B,GAjBcjM,aCCHmY,I,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCDdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,GAAD,MAEDnD,SAASoD,eAAe,SAMzBZ,O","file":"static/js/main.aea93e36.chunk.js","sourcesContent":["/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tArrow.js is designed to simply draw a small colored arrow\n*/\n\nimport React from \"react\";\nimport \"../d3.css\";\nconst Arrow = ({ source, target, color, isAnimating }) => (\n\t<g>\n\t\t<defs>\n\t\t\t<marker\n\t\t\t\tid=\"head\"\n\t\t\t\torient=\"auto\"\n\t\t\t\tmarkerWidth=\"3\"\n\t\t\t\tmarkerHeight=\"4\"\n\t\t\t\trefX=\"0.1\"\n\t\t\t\trefY=\"2\"\n\t\t\t>\n\t\t\t\t<path d=\"M0,0 V4 L2,2 Z\" fill={color} />\n\t\t\t</marker>\n\t\t</defs>\n\t\t<path\n\t\t\tclassName={!isAnimating ? \"arrow\" : \"absorb\"}\n\t\t\tid=\"arrow-line\"\n\t\t\tmarkerEnd=\"url(#head)\"\n\t\t\tfill=\"none\"\n\t\t\tstroke={color}\n\t\t\td={`M${source.x},${source.y}, ${target.x}, ${target.y}`}\n\t\t/>\n\t</g>\n);\nexport default Arrow;\n","/* \n\tDonny Bertucci @xnought\n\tSummary: \n\t\tNeuralNetworkComponent.js is a compomnent that handles all neural network\n\t\tlogic for the backproptool neural network representation\n*/\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport Arrow from \"./Arrow\";\nimport \"../d3.css\";\n\nconst NeuralNetworkComponent = (props) => {\n\t/* \n\t\t@param val\n\t\t@return true if undefined\t\n\t*/\n\tconst isUndefined = (val) => typeof val === \"undefined\";\n\t/* \n\t\tcheck if the 3d array index is defined\n\t\t@param array3d, i, j , k\n\t\t@return returns true if one of the depths is undefined\t\n\t*/\n\tconst isUndefined3d = (array3d, i, j, k) => {\n\t\treturn (\n\t\t\tisUndefined(array3d[i]) ||\n\t\t\tisUndefined(array3d[i][j]) ||\n\t\t\tisUndefined(array3d[i][j][k])\n\t\t);\n\t};\n\t/* \n\t\t@param \txStart, yStart, length, dirIsUp, color\n\t\t@return <Arrow />\t\n\t*/\n\tconst VerticalArrow = (xStart, yStart, length, dirIsUp, color) => {\n\t\tconst vector = dirIsUp ? -length : length;\n\t\treturn (\n\t\t\t<Arrow\n\t\t\t\tsource={{ x: xStart, y: yStart }}\n\t\t\t\ttarget={{ x: xStart, y: yStart + vector }}\n\t\t\t\tcolor={color}\n\t\t\t\tisAnimating={subEpoch === \"transition\"}\n\t\t\t/>\n\t\t);\n\t};\n\t/* \n\t\tspandrel\n\t\t@return \"css class\"\n\t*/\n\tconst keyFrameLossCalc = () => {\n\t\tif (keyFrameLoss === 1) {\n\t\t\treturn \"edgeForward\";\n\t\t} else if (keyFrameLoss === 2) {\n\t\t\treturn \"edgeBackward\";\n\t\t} else {\n\t\t\treturn \"edgePaused\";\n\t\t}\n\t};\n\t/* Destructure props */\n\tconst {\n\t\tplaying,\n\t\tmode,\n\t\tshapedLinks,\n\t\tshapedWeights,\n\t\tshapedRects,\n\t\tminiNN,\n\t\tsubEpoch,\n\t\tkeyFrameLoss,\n\t\tkeyFrameLayer,\n\t\tlr,\n\t\tisAnimating,\n\t} = props;\n\t/* confgure how things will look */\n\tconst colorOfMotion = \"orange\";\n\tconst negWeight = \"#D62839\";\n\tconst posWeight = \"#4BA3C3\";\n\tconst graphConnectionColor = \"black\";\n\tconst squareWidth = 32;\n\tconst link = d3\n\t\t.linkHorizontal()\n\t\t.x((d) => d.x)\n\t\t.y((d) => d.y);\n\n\t/*  main nn nerual network composition */\n\tconst nn = (\n\t\t<svg id=\"p\" width=\"810\" height=\"500\" overflow=\"visible\">\n\t\t\t<g id=\"ee\">\n\t\t\t\t<path\n\t\t\t\t\td=\"M 750, 234 L 750, 300\"\n\t\t\t\t\tstroke={\n\t\t\t\t\t\tkeyFrameLoss === 2 || keyFrameLoss === 1\n\t\t\t\t\t\t\t? colorOfMotion\n\t\t\t\t\t\t\t: graphConnectionColor\n\t\t\t\t\t}\n\t\t\t\t\tclassName={\n\t\t\t\t\t\tmode && keyFrameLoss > 0 ? keyFrameLossCalc() : playing\n\t\t\t\t\t}\n\t\t\t\t></path>\n\n\t\t\t\t<path\n\t\t\t\t\td={link({\n\t\t\t\t\t\tsource: { x: 766, y: 315 },\n\t\t\t\t\t\ttarget: { x: 890, y: 430 },\n\t\t\t\t\t})}\n\t\t\t\t\tstroke={graphConnectionColor}\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tclassName={playing}\n\t\t\t\t></path>\n\t\t\t\t<path\n\t\t\t\t\td={link({\n\t\t\t\t\t\tsource: { x: 766, y: 250 },\n\t\t\t\t\t\ttarget: { x: 890, y: 150 },\n\t\t\t\t\t})}\n\t\t\t\t\tstroke={graphConnectionColor}\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tclassName={playing}\n\t\t\t\t></path>\n\t\t\t\t{shapedLinks.map((layer, i) => {\n\t\t\t\t\treturn layer.map((neuron, j) => {\n\t\t\t\t\t\t/* handle for change in layers */\n\t\t\t\t\t\tlet moving = \"edgePaused\";\n\t\t\t\t\t\tlet color = colorOfMotion;\n\t\t\t\t\t\tlet colorChange = false;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tmode &&\n\t\t\t\t\t\t\tsubEpoch === \"forward\" &&\n\t\t\t\t\t\t\ti === keyFrameLayer\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tmoving = \"edgeForward\";\n\t\t\t\t\t\t\tcolorChange = true;\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tmode &&\n\t\t\t\t\t\t\tsubEpoch === \"backward\" &&\n\t\t\t\t\t\t\ti === keyFrameLayer\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tmoving = \"edgeBackward\";\n\t\t\t\t\t\t\tcolorChange = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn neuron.map((d, k) => {\n\t\t\t\t\t\t\t/* handle undefined outputs during re render */\n\t\t\t\t\t\t\tconst isUndefined = isUndefined3d(\n\t\t\t\t\t\t\t\tshapedWeights,\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\t\tk\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst currentWeight = isUndefined\n\t\t\t\t\t\t\t\t? []\n\t\t\t\t\t\t\t\t: shapedWeights[i][j][k];\n\t\t\t\t\t\t\tconst sw = isUndefined\n\t\t\t\t\t\t\t\t? 1\n\t\t\t\t\t\t\t\t: 2 * Math.abs(currentWeight) + 0.1;\n\t\t\t\t\t\t\tconst s = isUndefined\n\t\t\t\t\t\t\t\t? \"lightgrey\"\n\t\t\t\t\t\t\t\t: currentWeight > 0\n\t\t\t\t\t\t\t\t? posWeight\n\t\t\t\t\t\t\t\t: negWeight;\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tmode &&\n\t\t\t\t\t\t\t\tsubEpoch === \"update\" &&\n\t\t\t\t\t\t\t\tisAnimating === true\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tlet gradient =\n\t\t\t\t\t\t\t\t\t2 * miniNN.model[i][j].dWeights[k];\n\t\t\t\t\t\t\t\tlet gradientWithLr = gradient * 0.01;\n\n\t\t\t\t\t\t\t\t/* Find a way to rework this later with non horrible names */\n\t\t\t\t\t\t\t\td3.select(\"#nn\")\n\t\t\t\t\t\t\t\t\t.select(\"#p\")\n\t\t\t\t\t\t\t\t\t.select(\"#ee\")\n\t\t\t\t\t\t\t\t\t.select(`#cpath${i}${j}${k}`)\n\t\t\t\t\t\t\t\t\t.transition()\n\t\t\t\t\t\t\t\t\t.duration(750)\n\t\t\t\t\t\t\t\t\t.ease(d3.easeExpIn)\n\t\t\t\t\t\t\t\t\t.attr(\"stroke-width\", sw - gradient)\n\t\t\t\t\t\t\t\t\t.transition()\n\t\t\t\t\t\t\t\t\t.duration(750)\n\t\t\t\t\t\t\t\t\t.ease(d3.easeExpOut)\n\t\t\t\t\t\t\t\t\t.attr(\"stroke-width\", sw - gradientWithLr);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tid={`cpath${i}${j}${k}`}\n\t\t\t\t\t\t\t\t\tkey={`${i}${j}${k}`}\n\t\t\t\t\t\t\t\t\td={d}\n\t\t\t\t\t\t\t\t\tclassName={mode ? moving : playing}\n\t\t\t\t\t\t\t\t\tstrokeWidth={sw}\n\t\t\t\t\t\t\t\t\tstroke={colorChange ? color : s}\n\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t})}\n\t\t\t\t<rect\n\t\t\t\t\tx={55}\n\t\t\t\t\ty={234}\n\t\t\t\t\twidth={squareWidth}\n\t\t\t\t\theight={squareWidth}\n\t\t\t\t\tfill=\"darkgrey\"\n\t\t\t\t></rect>\n\n\t\t\t\t{shapedRects.map((neuron, i) =>\n\t\t\t\t\tneuron.map((d, j) => {\n\t\t\t\t\t\tlet actColor = false;\n\t\t\t\t\t\t/* handle for neurons and different times */\n\t\t\t\t\t\tconst beforeUpdate =\n\t\t\t\t\t\t\tsubEpoch === \"backward\" ||\n\t\t\t\t\t\t\tsubEpoch === \"transition\";\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(mode && i <= keyFrameLayer) ||\n\t\t\t\t\t\t\tbeforeUpdate ||\n\t\t\t\t\t\t\tsubEpoch === \"update\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tactColor = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<g key={`${i},${j}`}>\n\t\t\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\t\t\tx={d.x}\n\t\t\t\t\t\t\t\t\ty={d.y}\n\t\t\t\t\t\t\t\t\twidth={squareWidth}\n\t\t\t\t\t\t\t\t\theight={squareWidth}\n\t\t\t\t\t\t\t\t\tfill={\n\t\t\t\t\t\t\t\t\t\td.x === 734 && d.y === 234 && mode\n\t\t\t\t\t\t\t\t\t\t\t? \"#C6C6C6\"\n\t\t\t\t\t\t\t\t\t\t\t: d3\n\t\t\t\t\t\t\t\t\t\t\t\t\t.rgb(104, 104, 104)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.brighter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tactColor\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? miniNN.model[i][j]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.actStep +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlr\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tstroke={\n\t\t\t\t\t\t\t\t\t\td.x === 734 && d.y === 234\n\t\t\t\t\t\t\t\t\t\t\t? \"#507BB6\"\n\t\t\t\t\t\t\t\t\t\t\t: \"black\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tstrokeWidth={3}\n\t\t\t\t\t\t\t\t></rect>\n\n\t\t\t\t\t\t\t\t{miniNN !== null &&\n\t\t\t\t\t\t\t\tmode &&\n\t\t\t\t\t\t\t\tbeforeUpdate &&\n\t\t\t\t\t\t\t\ti >= keyFrameLayer - 1 &&\n\t\t\t\t\t\t\t\tminiNN.model[i][j].dActStep !== 0\n\t\t\t\t\t\t\t\t\t? VerticalArrow(\n\t\t\t\t\t\t\t\t\t\t\td.x + 16,\n\t\t\t\t\t\t\t\t\t\t\td.y + 16,\n\t\t\t\t\t\t\t\t\t\t\tMath.abs(\n\t\t\t\t\t\t\t\t\t\t\t\tminiNN.model[i][j].dActStep\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\tminiNN.model[i][j].dActStep < 0,\n\t\t\t\t\t\t\t\t\t\t\tcolorOfMotion\n\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t)}\n\n\t\t\t\t<rect\n\t\t\t\t\tx={734}\n\t\t\t\t\ty={300}\n\t\t\t\t\twidth={squareWidth}\n\t\t\t\t\theight={squareWidth}\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"black\"\n\t\t\t\t></rect>\n\t\t\t\t<text fontFamily=\"sans-serif\" fontSize=\"12px\" x={739} y={318}>\n\t\t\t\t\tloss\n\t\t\t\t</text>\n\t\t\t</g>\n\t\t</svg>\n\t);\n\treturn <div id=\"nn\">{nn}</div>;\n};\n\nexport default NeuralNetworkComponent;\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tScatterPlot.js plot the points and the line on the graph\n*/\nimport React, { Component } from \"react\";\nimport \"../d3.css\";\nimport * as d3 from \"d3\";\n\nclass ScatterPlot extends Component {\n\t/* \n\t\tplot the points using d3\t\n\t*/\n\tplotPoints(node, formattedPoints, select) {\n\t\t/* Now need to plot said data */\n\t\tnode.selectAll(\"circle\")\n\t\t\t.data(formattedPoints)\n\t\t\t.enter()\n\t\t\t.append(\"circle\")\n\t\t\t.attr(\"cx\", (d) => d.x)\n\t\t\t.attr(\"cy\", (d) => d.y)\n\t\t\t.attr(\"r\", (_, i) => (i === select ? 5 : 2))\n\t\t\t.style(\"fill\", (_, i) => (i === select ? \"orange\" : \"grey\"));\n\t}\n\t/* \n\t\tGenerate the d3 scales \t\n\t\t@return {xScale, yScale}\t\n\t*/\n\tgenerateScales(start, stop, width, height, padding) {\n\t\tconst xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([0, width - 2 * padding]);\n\t\tconst yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([height - 2 * padding, 0]);\n\t\treturn { xScale, yScale };\n\t}\n\n\t/* This is where we initialize the Scatter Plot */\n\tasync componentDidMount() {\n\t\t/* destructure props */\n\t\tconst { width, height, padding, start, stop, id } = this.props;\n\t\t/* set container and append svg */\n\t\tconst container = d3.select(`#scatter${id}`);\n\t\tconst svg = container\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.style(\"overflow\", \"visible\");\n\t\tsvg.append(\"rect\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.attr(\"class\", \"cord\");\n\n\t\t/* generate the scales */\n\t\tconst { xScale, yScale } = this.generateScales(\n\t\t\tstart,\n\t\t\tstop,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tpadding\n\t\t);\n\t\t/* create axes */\n\t\tconst xAxis = d3.axisBottom().scale(xScale);\n\t\tconst yAxis = d3.axisRight().scale(yScale);\n\t\t/* intitialize all parts of the graph */\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"transform\", `translate(0,${height - 2 * padding})`)\n\t\t\t.call(xAxis);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"transform\", \"translate(\" + (width - 2 * padding) + \",0)\")\n\t\t\t.call(yAxis);\n\t\tsvg.append(\"line\")\n\t\t\t.attr(\"x1\", 0)\n\t\t\t.attr(\"y1\", (height + 1) / 2)\n\t\t\t.attr(\"x2\", width)\n\t\t\t.attr(\"y2\", (height + 1) / 2)\n\t\t\t.attr(\"class\", \"split\");\n\t\tsvg.append(\"line\")\n\t\t\t.attr(\"x1\", (width + 1) / 2)\n\t\t\t.attr(\"y1\", 0)\n\t\t\t.attr(\"x2\", (width + 1) / 2)\n\t\t\t.attr(\"y2\", height)\n\t\t\t.attr(\"class\", \"split\");\n\t\tsvg.append(\"path\")\n\t\t\t.attr(\"id\", \"scatterline\")\n\t\t\t.attr(\"stroke\", \"none\")\n\t\t\t.attr(\"fill\", \"none\");\n\t}\n\tcomponentDidUpdate() {\n\t\tconst {\n\t\t\twidth,\n\t\t\theight,\n\t\t\tpadding,\n\t\t\tstart,\n\t\t\tstop,\n\t\t\tX,\n\t\t\ty,\n\t\t\tyhat,\n\t\t\tid,\n\t\t\tselect,\n\t\t\tduration,\n\t\t} = this.props;\n\t\tconst { xScale, yScale } = this.generateScales(\n\t\t\tstart,\n\t\t\tstop,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tpadding\n\t\t);\n\t\tconst svg = d3.select(`#scatter${id}`).select(\"svg\");\n\n\t\t/* push data */\n\t\tlet dataSet = [];\n\t\tlet curve = [];\n\t\tfor (let i = 0; i < X.length; i++) {\n\t\t\tdataSet.push({\n\t\t\t\tx: xScale(X[i]),\n\t\t\t\ty: yScale(y[i]),\n\t\t\t});\n\t\t\tcurve.push([xScale(X[i]), yScale(yhat[i])]);\n\t\t}\n\t\tsvg.selectAll(\"circle\").remove();\n\t\tthis.plotPoints(svg, dataSet, select);\n\t\tsvg.select(\"#scatterline\")\n\t\t\t.transition()\n\t\t\t.duration(duration)\n\t\t\t.attr(\"d\", d3.line()(curve))\n\t\t\t.attr(\"stroke\", \"black\")\n\t\t\t.attr(\"fill\", \"none\");\n\t}\n\n\trender() {\n\t\tconst { id } = this.props;\n\t\treturn <div id={`scatter${id}`}></div>;\n\t}\n}\n\nexport default ScatterPlot;\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tAnimatedScatterPlot.js is a component that handles logic for animating change in the backward pass\n*/\nimport React, { Component } from \"react\";\nimport \"../d3.css\";\nimport * as d3 from \"d3\";\n\nclass AnimatedScatterPlot extends Component {\n\t/* \n\t\tplot points and handle for the selected point \n\t\t@param node, formattedPoints, select\n\t*/\n\tplotPoints(node, formattedPoints, select) {\n\t\tconst pointValue = { x: this.props.X[select], y: this.props.y[select] };\n\t\tconst isSelected = (index, selectIndex) => index === selectIndex;\n\t\tconst selectStyle = { color: \"#4BA3C3\", radius: 5 };\n\t\tconst defaultStyle = { color: \"grey\", radius: 2 };\n\n\t\t/* Now need to plot said data */\n\t\tnode.selectAll(\"circle\")\n\t\t\t.data(formattedPoints)\n\t\t\t.enter()\n\t\t\t.append(\"circle\")\n\t\t\t.attr(\"cx\", (d) => d.x)\n\t\t\t.attr(\"cy\", (d) => d.y)\n\t\t\t.attr(\"r\", (_, i) =>\n\t\t\t\tisSelected(i, select) ? selectStyle.radius : defaultStyle.radius\n\t\t\t)\n\t\t\t.style(\"fill\", (_, i) =>\n\t\t\t\tisSelected(i, select) ? selectStyle.color : defaultStyle.color\n\t\t\t);\n\n\t\t/* plots the selected coordinate */\n\t\tnode.append(\"text\")\n\t\t\t.attr(\"x\", formattedPoints[select].x + 10)\n\t\t\t.attr(\"y\", formattedPoints[select].y)\n\t\t\t.attr(\"fill\", selectStyle.color)\n\t\t\t.attr(\"font-size\", \"12px\")\n\t\t\t.text(`(${pointValue.x.toFixed(2)},${pointValue.y.toFixed(2)})`);\n\t}\n\t/* \n\t\tGenerate the d3 scales \t\n\t\t@return {xScale, yScale}\t\n\t*/\n\tgenerateScales(start, stop, width, height, padding) {\n\t\tconst xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([0, width - 2 * padding]);\n\t\tconst yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([height - 2 * padding, 0]);\n\t\treturn { xScale, yScale };\n\t}\n\n\t/* \n\t\tanimates the change in line\n\t */\n\tanimateLineChange(node, color, array1, array2, duration) {\n\t\tnode.attr(\"d\", d3.line()(array1))\n\t\t\t.attr(\"stroke\", color)\n\t\t\t.attr(\"fill\", \"none\");\n\t\tnode.transition().duration(duration).attr(\"d\", d3.line()(array2));\n\t}\n\n\t/* This is where we initialize the Scatter Plot */\n\tasync componentDidMount() {\n\t\tconst { width, height, padding, start, stop, id } = this.props;\n\t\tconst container = d3.select(`#animatedPlot${id}`);\n\t\tconst svg = container\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.style(\"overflow\", \"visible\");\n\t\tsvg.append(\"rect\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.attr(\"class\", \"cord\");\n\t\tconst { xScale, yScale } = this.generateScales(\n\t\t\tstart,\n\t\t\tstop,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tpadding\n\t\t);\n\t\tlet xAxis = d3.axisBottom().scale(xScale);\n\t\tlet yAxis = d3.axisRight().scale(yScale);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"transform\", `translate(0,${height - 2 * padding})`)\n\t\t\t.call(xAxis);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"transform\", \"translate(\" + (width - 2 * padding) + \",0)\")\n\t\t\t.call(yAxis);\n\t\tsvg.append(\"line\")\n\t\t\t.attr(\"x1\", 0)\n\t\t\t.attr(\"y1\", (height + 1) / 2)\n\t\t\t.attr(\"x2\", width)\n\t\t\t.attr(\"y2\", (height + 1) / 2)\n\t\t\t.attr(\"class\", \"split\");\n\t\tsvg.append(\"line\")\n\t\t\t.attr(\"x1\", (width + 1) / 2)\n\t\t\t.attr(\"y1\", 0)\n\t\t\t.attr(\"x2\", (width + 1) / 2)\n\t\t\t.attr(\"y2\", height)\n\t\t\t.attr(\"class\", \"split\");\n\n\t\tsvg.append(\"path\")\n\t\t\t.attr(\"id\", \"scatterline\")\n\t\t\t.attr(\"stroke\", \"none\")\n\t\t\t.attr(\"fill\", \"none\");\n\t}\n\tupdateAll() {\n\t\tconst {\n\t\t\twidth,\n\t\t\theight,\n\t\t\tpadding,\n\t\t\tstart,\n\t\t\tstop,\n\t\t\tX,\n\t\t\ty,\n\t\t\tyhat,\n\t\t\tid,\n\t\t\tselect,\n\t\t\tpotential,\n\t\t} = this.props;\n\n\t\tconst { xScale, yScale } = this.generateScales(\n\t\t\tstart,\n\t\t\tstop,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tpadding\n\t\t);\n\t\tconst svg = d3.select(`#animatedPlot${id}`).select(\"svg\");\n\t\tlet dataSet = [];\n\t\tlet realYhat = [];\n\t\tlet zeroArray = [];\n\t\tlet potentialYhat = [];\n\t\tfor (let i = 0; i < X.length; i++) {\n\t\t\tdataSet.push({\n\t\t\t\tx: xScale(X[i]),\n\t\t\t\ty: yScale(y[i]),\n\t\t\t});\n\n\t\t\tconst xNum = xScale(X[i]);\n\t\t\trealYhat.push([xNum, yScale(yhat[i])]);\n\t\t\tpotentialYhat.push([xNum, yScale(potential[i])]);\n\t\t\tzeroArray.push([xNum, yScale(0)]);\n\t\t}\n\t\tsvg.selectAll(\"circle\").remove();\n\t\tsvg.selectAll(\"text\").remove();\n\t\tconst line = svg.select(\"#scatterline\");\n\t\tthis.plotPoints(svg, dataSet, select);\n\t\tif (this.props.status === \"reset\") {\n\t\t\tline.attr(\"id\", \"scatterline\")\n\t\t\t\t.attr(\"stroke\", \"none\")\n\t\t\t\t.attr(\"fill\", \"none\");\n\t\t} else {\n\t\t\tif (this.props.status === \"real\") {\n\t\t\t\tthis.animateLineChange(line, \"black\", zeroArray, realYhat, 750);\n\t\t\t} else if (this.props.status === \"pred\") {\n\t\t\t\tthis.animateLineChange(\n\t\t\t\t\tline,\n\t\t\t\t\t\"orangered\",\n\t\t\t\t\trealYhat,\n\t\t\t\t\tpotentialYhat,\n\t\t\t\t\t750\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\tcomponentDidUpdate() {\n\t\tthis.updateAll();\n\t}\n\tshouldComponentUpdate() {\n\t\treturn !this.props.shouldNotRender;\n\t}\n\n\trender() {\n\t\tconst { id } = this.props;\n\t\treturn <div id={`animatedPlot${id}`}></div>;\n\t}\n}\n\nexport default AnimatedScatterPlot;\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tLoss.js is a component that plots the loss curve\n*/\nimport React, { Component } from \"react\";\nimport \"../d3.css\";\nimport * as d3 from \"d3\";\n\nclass Loss extends Component {\n\tcomponentDidMount() {\n\t\tconst container = d3.select(\"#sweet\"); //I need to seriously get some therapy for my naming conventions\n\t\tconst height = 100;\n\t\tconst width = 300;\n\t\tconst padding = 0;\n\n\t\tlet xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([0, -1])\n\t\t\t.range([0, width - 2 * padding]);\n\n\t\tlet yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([1, 1])\n\t\t\t.range([height - 2 * padding, 0]);\n\t\tconst svg = container\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.style(\"overflow\", \"visible\");\n\n\t\tsvg.append(\"rect\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.attr(\"class\", \"cord\");\n\t\tlet xAxis = d3.axisBottom().scale(xScale);\n\t\tlet yAxis = d3.axisRight().scale(yScale);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"id\", \"x\")\n\t\t\t.attr(\"transform\", `translate(0,${height - 2 * padding})`)\n\t\t\t.call(xAxis);\n\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"id\", \"y\")\n\t\t\t.attr(\"transform\", \"translate(\" + (width - 2 * padding) + \",0)\")\n\t\t\t.call(yAxis.ticks(0));\n\t\tsvg.append(\"path\")\n\t\t\t.attr(\"id\", \"line\")\n\t\t\t.attr(\"stroke\", \"none\")\n\t\t\t.attr(\"fill\", \"none\");\n\t\t//svg.append(\"text\").attr(\"x\", 1).attr(\"y\", -5).text(\"loss:\");\n\t}\n\tcomponentDidUpdate() {\n\t\tconst { lossArray, duration } = this.props;\n\t\tconst height = 100;\n\t\tconst width = 300;\n\t\tconst start = 0;\n\t\tconst stop = lossArray.length - 1;\n\t\tconst padding = 0;\n\t\tlet xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([1, width - 2 * padding]);\n\n\t\tlet lossMin = d3.min(lossArray);\n\t\tlet lossMax = d3.max(lossArray);\n\t\tlet yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([lossMin, lossMax])\n\t\t\t.range([height - 2 * padding, 0]);\n\t\tconst svg = d3.select(\"#sweet\").select(\"svg\");\n\t\tlet a = [];\n\t\tfor (let i = 0; i < lossArray.length; i++) {\n\t\t\ta.push([xScale(i), yScale(lossArray[i])]);\n\t\t}\n\n\t\tlet xAxis = d3.axisBottom().scale(xScale);\n\t\tlet yAxis = d3.axisRight().scale(yScale);\n\t\tsvg.select(\"#x\")\n\t\t\t.transition()\n\t\t\t.duration(duration)\n\t\t\t.attr(\"transform\", `translate(0,${height - 2 * padding})`)\n\t\t\t.call(xAxis.ticks(5));\n\n\t\tsvg.select(\"#y\")\n\t\t\t.transition()\n\t\t\t.duration(duration)\n\t\t\t.attr(\"transform\", \"translate(\" + (width - 2 * padding) + \",0)\")\n\t\t\t.call(yAxis.ticks(5));\n\t\tsvg.select(\"#line\")\n\t\t\t.transition()\n\t\t\t.duration(duration)\n\t\t\t.attr(\"d\", d3.line()(a))\n\t\t\t.attr(\"stroke\", \"black\")\n\t\t\t.attr(\"fill\", \"none\");\n\t}\n\trender() {\n\t\treturn <div id=\"sweet\"></div>;\n\t}\n}\n\nexport default Loss;\n","/* \n\tI have to use aberviations so my monkey brain doesnt have to type alot\n*/\nimport \"katex/dist/katex.min.css\";\nimport { InlineMath, BlockMath } from \"react-katex\";\n\nexport const $ = (inlineLaTeX) => <InlineMath math={inlineLaTeX} />;\nexport const $$ = (blockLaTeX) => <BlockMath math={blockLaTeX} />;\n","export default __webpack_public_path__ + \"static/media/structMan.c5ceb161.svg\";","export default __webpack_public_path__ + \"static/media/structArt.5830dcf2.svg\";","export default __webpack_public_path__ + \"static/media/structNN.9c469253.svg\";","export default __webpack_public_path__ + \"static/media/structLin.0d34ce16.svg\";","export default __webpack_public_path__ + \"static/media/structAck.485489c4.svg\";","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis file creates the navigation checkpoint coomponent\n*/\nimport React from \"react\";\nimport { scroller } from \"react-scroll\";\nimport { Box, Button } from \"@material-ui/core\";\nimport structManSVG from \"./assets/navSVG/structMan.svg\";\nimport structArtSVG from \"./assets/navSVG/structArt.svg\";\nimport structNNSVG from \"./assets/navSVG/structNN.svg\";\nimport structLinSVG from \"./assets/navSVG/structLin.svg\";\nimport structAckSVG from \"./assets/navSVG/structAck.svg\";\n\nexport const Nav = () => {\n\tconst backgroundColor = \"primary\";\n\treturn (\n\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t<Box>\n\t\t\t\t<Box>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tscroller.scrollTo(\"article\", {\n\t\t\t\t\t\t\t\tduration: 1500,\n\t\t\t\t\t\t\t\tdelay: 100,\n\t\t\t\t\t\t\t\tsmooth: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcolor={backgroundColor}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img alt=\"article\" src={structArtSVG} />\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\n\t\t\t\t<Box>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tscroller.scrollTo(\"structMan\", {\n\t\t\t\t\t\t\t\tduration: 1500,\n\t\t\t\t\t\t\t\tdelay: 100,\n\t\t\t\t\t\t\t\tsmooth: true,\n\t\t\t\t\t\t\t\toffset: -100,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcolor={backgroundColor}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img alt=\"manual\" src={structManSVG} />{\" \"}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tscroller.scrollTo(\"structLin\", {\n\t\t\t\t\t\t\t\tduration: 1500,\n\t\t\t\t\t\t\t\tdelay: 100,\n\t\t\t\t\t\t\t\tsmooth: true,\n\t\t\t\t\t\t\t\toffset: -100,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcolor={backgroundColor}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img alt=\"auto\" src={structLinSVG} />\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\t\t\t\t<Box>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tscroller.scrollTo(\"mainTool\", {\n\t\t\t\t\t\t\t\tduration: 1500,\n\t\t\t\t\t\t\t\tdelay: 100,\n\t\t\t\t\t\t\t\tsmooth: true,\n\t\t\t\t\t\t\t\toffset: -240,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcolor={backgroundColor}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img alt=\"backprop\" src={structNNSVG} />\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\t\t\t\t<Box>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tscroller.scrollTo(\"acknowledgements\", {\n\t\t\t\t\t\t\t\tduration: 1500,\n\t\t\t\t\t\t\t\tdelay: 100,\n\t\t\t\t\t\t\t\tsmooth: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcolor={backgroundColor}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img alt=\"acknowledgements\" src={structAckSVG} />\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis component renders the contour and a dot to represent where we are\n*/\nimport React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nclass ContourLoss extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\twidth: 400,\n\t\t\theight: 400,\n\t\t};\n\t}\n\tasync componentDidMount() {\n\t\tconst { width, height } = await this.state;\n\t\tconst svg = d3.select(\"#divContour\").select(\"#contour\");\n\t\tconst { data, darkness } = await this.props;\n\t\tlet n = width,\n\t\t\tm = height,\n\t\t\tvalues = new Array(n * m);\n\n\t\t/* \n\t\t\tthis code below was adapted from\n\t\t\td3-contour documentation examples\n\t\t*/\n\t\tfor (let j = 0.5, k = 0; j < m; ++j) {\n\t\t\tfor (let i = 0.5; i < n; ++i, ++k) {\n\t\t\t\tvalues[k] = loss((i / n) * 10 - 5, (j / m) * 20);\n\t\t\t}\n\t\t}\n\n\t\tfunction loss(m, b) {\n\t\t\tlet x = data.X,\n\t\t\t\ty = data.y;\n\t\t\tlet summed = 0;\n\t\t\tfor (let i = 0; i < data.X.length; i++) {\n\t\t\t\tsummed += Math.pow(m * x[i] + b - y[i], 2);\n\t\t\t}\n\t\t\treturn summed / (2 * x.length);\n\t\t}\n\t\tlet thresholds = await d3\n\t\t\t.range(darkness, 20, 1)\n\t\t\t.map((i) => Math.pow(2, i));\n\t\tlet color = d3.scaleSequentialLog(\n\t\t\td3.extent(thresholds),\n\t\t\td3.interpolateCool\n\t\t);\n\t\tconst contours = d3.contours().size([n, m]).thresholds(thresholds)(\n\t\t\tvalues\n\t\t);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.selectAll(\"path\")\n\t\t\t.data(contours)\n\t\t\t.join(\"path\")\n\t\t\t.attr(\"fill\", (d) => color(d.value))\n\t\t\t.attr(\"d\", d3.geoPath());\n\n\t\tsvg.append(\"circle\")\n\t\t\t.attr(\"cx\", width / 2)\n\t\t\t.attr(\"cy\", 0)\n\t\t\t.attr(\"r\", 5)\n\t\t\t.style(\"fill\", \"none\")\n\t\t\t.style(\"stoke\", \"none\");\n\t}\n\tcomponentDidUpdate() {\n\t\tconst { width, height } = this.state;\n\t\tconst { loss, ms, m, b } = this.props;\n\t\tconst svg = d3.select(\"#divContour\").select(\"#contour\");\n\t\tif (loss == null) {\n\t\t\tsvg.select(\"circle\")\n\t\t\t\t.attr(\"cx\", width / 2)\n\t\t\t\t.attr(\"cy\", 0)\n\t\t\t\t.attr(\"r\", 5)\n\t\t\t\t.style(\"fill\", \"none\")\n\t\t\t\t.style(\"stroke\", \"none\");\n\t\t\treturn;\n\t\t}\n\t\tif (loss < 1000) {\n\t\t\tsvg.select(\"circle\")\n\t\t\t\t.transition()\n\t\t\t\t.duration(200 - ms)\n\t\t\t\t.attr(\"cx\", width / 2 + (m / 10) * width)\n\t\t\t\t.attr(\"cy\", (b / 20) * height)\n\t\t\t\t.attr(\"r\", loss * 2 + 5)\n\t\t\t\t.style(\"fill\", \"red\")\n\t\t\t\t.style(\"opacity\", \"0.5\");\n\t\t}\n\t}\n\trender() {\n\t\tconst { width, height } = this.state;\n\t\treturn (\n\t\t\t<div id=\"divContour\">\n\t\t\t\t<svg style={{ width, height }} id=\"contour\"></svg>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ContourLoss;\n","export default __webpack_public_path__ + \"static/media/autoKey.c81582c4.svg\";","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis file contains the logic and component for autotool.\n\t\tIt brings together the control logic, the loss contour and the graph.\n*/\nimport React, { Component } from \"react\";\nimport ContourLoss from \"./ContourLoss\";\nimport { ScatterPlot } from \"../../exports\";\nimport autoKeySVG from \"./assets/autoKey.svg\";\n\nimport {\n\tFab,\n\tIconButton,\n\tBox,\n\tCard,\n\tCardContent,\n\tTypography,\n} from \"@material-ui/core\";\nimport { PlayArrow, Stop, Replay, SlowMotionVideo } from \"@material-ui/icons\";\nimport * as tf from \"@tensorflow/tfjs\";\n\nclass SubTool extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tyhat: [],\n\t\t\tdarkness: -4,\n\t\t\tplayButton: true,\n\t\t\tlinreg: {\n\t\t\t\tmeanSquaredError: 0,\n\t\t\t\trsquared: null,\n\t\t\t\tdata: {\n\t\t\t\t\tX: [],\n\t\t\t\t\ty: [],\n\t\t\t\t},\n\t\t\t\thyperparams: {\n\t\t\t\t\tlearningRate: 0.03,\n\t\t\t\t\tepochs: 0,\n\t\t\t\t\tloss: null,\n\t\t\t\t\tspeed: 200,\n\t\t\t\t},\n\t\t\t\ttunableparams: {\n\t\t\t\t\tm: 0,\n\t\t\t\t\tb: 0,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t\tthis.generateData = this.generateData.bind(this);\n\t\tthis.linearRegression = this.linearRegression.bind(this);\n\t\tthis.a = this.a.bind(this);\n\t\tthis.handleSlider = this.handleSlider.bind(this);\n\t\tthis.reset = this.reset.bind(this);\n\t}\n\n\treset() {\n\t\tthis.generateData();\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tplayButton: true,\n\t\t\tlinreg: {\n\t\t\t\t...this.state.linreg,\n\t\t\t\trsquared: null,\n\t\t\t\thyperparams: {\n\t\t\t\t\t...this.state.linreg.hyperparams,\n\t\t\t\t\tepochs: 0,\n\t\t\t\t\tloss: null,\n\t\t\t\t},\n\t\t\t\ttunableparams: {\n\t\t\t\t\tm: 0,\n\t\t\t\t\tb: 0,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\tgenerateData() {\n\t\ttf.tidy(() => {\n\t\t\t/* The data we will use */\n\t\t\tconst yhat = [0, 0, 0, 0, 0, 0];\n\t\t\tconst X = [0, 1, 2, 3, 4, 5];\n\t\t\tconst y = [5, 4, 3, 2, 1, 0];\n\t\t\tconst yTensor = tf.tensor(y);\n\n\t\t\tconst mean = tf.mean(yTensor).dataSync()[0];\n\t\t\tconst meanSquaredError =\n\t\t\t\t(1 / (X.length * 2)) *\n\t\t\t\ttf.sum(tf.pow(tf.sub(mean, yTensor), 2)).dataSync()[0];\n\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\tyhat,\n\t\t\t\tlinreg: {\n\t\t\t\t\t...this.state.linreg,\n\t\t\t\t\tmeanSquaredError,\n\t\t\t\t\tdata: { X, y },\n\t\t\t\t},\n\t\t\t});\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tlinearRegression() {\n\t\ttf.tidy(() => {\n\t\t\t/* It really doesnt need to go this far */\n\t\t\tif (this.state.linreg.hyperparams.epochs > 10000) {\n\t\t\t\tthis.setState({ playButton: !this.state.playButton });\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t//hypothesis function\n\t\t\tlet { m, b } = this.state.linreg.tunableparams;\n\t\t\tlet { learningRate } = this.state.linreg.hyperparams;\n\t\t\tconst { X, y } = this.state.linreg.data;\n\t\t\tconst XTensor = tf.tensor(X);\n\t\t\tconst yTensor = tf.tensor(y);\n\n\t\t\tlet yPred = h(XTensor, m, b);\n\t\t\tlet len = XTensor.shape[0];\n\t\t\tfunction h(X, m, b) {\n\t\t\t\treturn tf.add(tf.mul(X, m), b);\n\t\t\t}\n\t\t\t//Define the loss function\n\t\t\tfunction loss(y, y_pred) {\n\t\t\t\treturn (\n\t\t\t\t\t(1 / (2 * len)) *\n\t\t\t\t\ttf.sum(tf.pow(tf.sub(y_pred, y), 2)).dataSync()[0]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t//then compute the gradient\n\t\t\tconst dlossdm =\n\t\t\t\t(1 / len) *\n\t\t\t\ttf.sum(tf.mul(tf.sub(yPred, yTensor), XTensor)).dataSync()[0];\n\t\t\tconst dlossdb =\n\t\t\t\t(1 / len) * tf.sum(tf.sub(yPred, yTensor)).dataSync()[0];\n\t\t\tconst lossValue = loss(yTensor, yPred);\n\n\t\t\t//gradient descent by updating the m and b\n\t\t\tm += -learningRate * dlossdm;\n\t\t\tb += -learningRate * dlossdb;\n\t\t\tconst rsquared = 1 - lossValue / this.state.linreg.meanSquaredError;\n\t\t\tconst epochs = this.state.linreg.hyperparams.epochs + 1;\n\t\t\tconst yhat = Array.from(yPred.dataSync());\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\tyhat,\n\t\t\t\tlinreg: {\n\t\t\t\t\t...this.state.linreg,\n\t\t\t\t\trsquared,\n\t\t\t\t\ttunableparams: { m, b },\n\t\t\t\t\thyperparams: {\n\t\t\t\t\t\t...this.state.linreg.hyperparams,\n\t\t\t\t\t\tepochs: epochs,\n\t\t\t\t\t\tloss: lossValue,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t\treturn undefined;\n\t\t});\n\t}\n\tasync a() {\n\t\tconst timer = (ms) => new Promise((res) => setTimeout(res, ms));\n\t\tconst upperBounds = 200;\n\t\twhile (true) {\n\t\t\tconst { speed } = this.state.linreg.hyperparams;\n\t\t\tconst changeSpeed = upperBounds - speed;\n\t\t\tawait this.linearRegression();\n\t\t\t//await this.forceUpdate();\n\t\t\tawait timer(changeSpeed);\n\t\t\tif (this.state.playButton === true) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\thandleSlider(event, value) {\n\t\tthis.setState({\n\t\t\tlinreg: {\n\t\t\t\t...this.state.linreg,\n\t\t\t\thyperparams: {\n\t\t\t\t\t...this.state.linreg.hyperparams,\n\t\t\t\t\tspeed: value,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.generateData();\n\t}\n\n\trender() {\n\t\tconst { m, b } = this.state.linreg.tunableparams;\n\t\tconst { loss, speed, epochs } = this.state.linreg.hyperparams;\n\t\tconst { data } = this.state.linreg;\n\t\tconst nullColor = (val) => (val === null ? \"#dce0dd\" : \"black\");\n\t\tconst nullNumber = (num, precision) =>\n\t\t\tnum === null ? num : num.toPrecision(precision);\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Box display=\"flex\" justifyContent=\"center\" marginTop={2}>\n\t\t\t\t\t<Box marginTop={10} marginRight={10}>\n\t\t\t\t\t\t<ScatterPlot\n\t\t\t\t\t\t\twidth={400}\n\t\t\t\t\t\t\theight={400}\n\t\t\t\t\t\t\tpadding={0}\n\t\t\t\t\t\t\tstart={0}\n\t\t\t\t\t\t\tstop={5}\n\t\t\t\t\t\t\tX={data.X}\n\t\t\t\t\t\t\ty={data.y}\n\t\t\t\t\t\t\tyhat={this.state.yhat}\n\t\t\t\t\t\t\tid={420}\n\t\t\t\t\t\t\tselect={-1}\n\t\t\t\t\t\t\tduration={0}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<h2>Auto Best Fit</h2>\n\t\t\t\t\t\t\t<Typography variant=\"h4\" component=\"h2\">\n\t\t\t\t\t\t\t\tEPOCH: {epochs}\n\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\t\t\tcomponent=\"h2\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: nullColor(loss),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{` loss = ${nullNumber(loss, 10)}`}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<IconButton onClick={this.reset}>\n\t\t\t\t\t\t\t\t<Replay />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Fab\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackground: this.state.playButton\n\t\t\t\t\t\t\t\t\t\t? \"#175676\"\n\t\t\t\t\t\t\t\t\t\t: \"#D62839\",\n\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\tawait this.setState({\n\t\t\t\t\t\t\t\t\t\tplayButton: !this.state.playButton,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tawait this.a();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tdisableTouchRipple\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.state.playButton ? (\n\t\t\t\t\t\t\t\t\t<PlayArrow />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Stop />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Fab>\n\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: speed === 200 ? \"grey\" : \"#FFC006\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tlinreg: {\n\t\t\t\t\t\t\t\t\t\t\t...this.state.linreg,\n\t\t\t\t\t\t\t\t\t\t\thyperparams: {\n\t\t\t\t\t\t\t\t\t\t\t\t...this.state.linreg\n\t\t\t\t\t\t\t\t\t\t\t\t\t.hyperparams,\n\t\t\t\t\t\t\t\t\t\t\t\tspeed:\n\t\t\t\t\t\t\t\t\t\t\t\t\tspeed === 200 ? 120 : 200,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<SlowMotionVideo />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t\t<img src={autoKeySVG} alt=\"legend\" width=\"40%\" />\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t<ContourLoss\n\t\t\t\t\t\t\tms={speed}\n\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\tm={isFinite(m) ? m : 0}\n\t\t\t\t\t\t\tb={isFinite(b) ? b : 0}\n\t\t\t\t\t\t\tloss={loss}\n\t\t\t\t\t\t\tdarkness={this.state.darkness}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Card>\n\t\t\t\t</Box>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SubTool;\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis file is designed to generate the component for the manial linear scatter exercise\n*/\nimport { Box, Card, CardContent, Slider, Button } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport { ScatterPlot } from \"../../exports\";\nimport { $ } from \"./Typeset\";\nimport * as tf from \"@tensorflow/tfjs\";\n\nclass LinearScatter extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tweight: -0.82,\n\t\t\tbias: -0.02,\n\t\t\tloss: 0,\n\t\t\tdomain: [],\n\t\t\trange: [],\n\t\t\tline: [],\n\t\t\tshow: false,\n\t\t\twidth: 400,\n\t\t\tbiasColor: \"#FFA500\",\n\t\t\tweightColor: \"#56A8C7\",\n\t\t\tlossColor: \"red\",\n\t\t};\n\t}\n\t//Define the loss function\n\tloss(y, y_pred, len) {\n\t\tconst outputLoss = tf.tidy(() => {\n\t\t\tconst yTensor = tf.tensor(y);\n\t\t\tconst y_predTensor = tf.tensor(y_pred);\n\t\t\tconst compute =\n\t\t\t\t(1 / (2 * len)) *\n\t\t\t\ttf.sum(tf.pow(tf.sub(y_predTensor, yTensor), 2)).dataSync()[0];\n\t\t\treturn compute;\n\t\t});\n\t\treturn outputLoss;\n\t}\n\tcomputeLine(weight, bias, domain) {\n\t\tconst line = (X) => weight * X + bias;\n\t\tlet output = new Array(domain.length);\n\t\tfor (let i = 0; i < domain.length; i++) {\n\t\t\toutput[i] = line(domain[i]);\n\t\t}\n\t\treturn output;\n\t}\n\tzeros(length) {\n\t\tlet array = new Array(length);\n\t\tfor (let i = 0; i < length; i++) array[i] = 0;\n\t\treturn array;\n\t}\n\trange(start, stop, increment) {\n\t\tlet array = [];\n\t\tfor (let i = start; i <= stop; i += increment) array.push(i);\n\t\treturn array;\n\t}\n\tdataGenerator() {\n\t\tconst initDomain = this.range(-1, 1, 0.1);\n\t\tconst initRange = this.computeLine(0.65, -0.3, initDomain);\n\t\tconst initLine = this.computeLine(\n\t\t\tthis.state.weight,\n\t\t\tthis.state.bias,\n\t\t\tinitDomain\n\t\t);\n\t\tconst loss = this.loss(initRange, initLine, initRange.length);\n\t\tthis.setState({\n\t\t\tdomain: initDomain,\n\t\t\trange: initRange,\n\t\t\tline: initLine,\n\t\t\tloss,\n\t\t});\n\t}\n\tcomponentDidMount() {\n\t\tthis.dataGenerator();\n\t}\n\trender() {\n\t\tconst {\n\t\t\tdomain,\n\t\t\trange,\n\t\t\tbias,\n\t\t\tweight,\n\t\t\tline,\n\t\t\tloss,\n\t\t\tshow,\n\t\t\twidth,\n\t\t\tweightColor,\n\t\t\tbiasColor,\n\t\t\tlossColor,\n\t\t} = this.state;\n\t\treturn (\n\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t<Box style={{ filter: `blur(${show ? 0 : 25}px)` }}>\n\t\t\t\t\t<ScatterPlot\n\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\theight={width}\n\t\t\t\t\t\tpadding={0}\n\t\t\t\t\t\tstart={-1}\n\t\t\t\t\t\tstop={1}\n\t\t\t\t\t\tX={domain}\n\t\t\t\t\t\ty={range}\n\t\t\t\t\t\tyhat={line}\n\t\t\t\t\t\tid={69}\n\t\t\t\t\t\tselect={-1}\n\t\t\t\t\t\tduration={0}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\n\t\t\t\t<Box marginLeft={7}>\n\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<h2>Manual Best Fit</h2>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tManually tune{\" \"}\n\t\t\t\t\t\t\t\t<em style={{ color: weightColor }}>weight</em>{\" \"}\n\t\t\t\t\t\t\t\tand <em style={{ color: biasColor }}>bias</em>{\" \"}\n\t\t\t\t\t\t\t\tand try to reach a{\" \"}\n\t\t\t\t\t\t\t\t<em style={{ color: lossColor }}>loss</em> of 0\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\tstyle={{ color: weightColor }}\n\t\t\t\t\t\t\t\tvalue={weight}\n\t\t\t\t\t\t\t\tonChange={(e, n) => {\n\t\t\t\t\t\t\t\t\tconst newLine = this.computeLine(\n\t\t\t\t\t\t\t\t\t\tweight,\n\t\t\t\t\t\t\t\t\t\tbias,\n\t\t\t\t\t\t\t\t\t\tdomain\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tconst loss = this.loss(\n\t\t\t\t\t\t\t\t\t\trange,\n\t\t\t\t\t\t\t\t\t\tnewLine,\n\t\t\t\t\t\t\t\t\t\trange.length\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tweight: n,\n\t\t\t\t\t\t\t\t\t\tline: newLine,\n\t\t\t\t\t\t\t\t\t\tloss,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tmin={-1}\n\t\t\t\t\t\t\t\tstep={0.01}\n\t\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\t\t\t></Slider>\n\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\tstyle={{ color: biasColor }}\n\t\t\t\t\t\t\t\tvalue={bias}\n\t\t\t\t\t\t\t\tonChange={(e, n) => {\n\t\t\t\t\t\t\t\t\tconst newLine = this.computeLine(\n\t\t\t\t\t\t\t\t\t\tweight,\n\t\t\t\t\t\t\t\t\t\tbias,\n\t\t\t\t\t\t\t\t\t\tdomain\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tconst loss = this.loss(\n\t\t\t\t\t\t\t\t\t\trange,\n\t\t\t\t\t\t\t\t\t\tnewLine,\n\t\t\t\t\t\t\t\t\t\trange.length\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tbias: n,\n\t\t\t\t\t\t\t\t\t\tline: newLine,\n\t\t\t\t\t\t\t\t\t\tloss,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tmin={-1}\n\t\t\t\t\t\t\t\tstep={0.01}\n\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\t></Slider>\n\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t{$(\"\\\\text{neuron}(x) = \")}{\" \"}\n\t\t\t\t\t\t\t\t<em style={{ color: weightColor }}>\n\t\t\t\t\t\t\t\t\t{$(`${weight}`)}\n\t\t\t\t\t\t\t\t</em>\n\t\t\t\t\t\t\t\t{$(\"x + \")}{\" \"}\n\t\t\t\t\t\t\t\t<em style={{ color: biasColor }}>\n\t\t\t\t\t\t\t\t\t{$(`${bias}`)}\n\t\t\t\t\t\t\t\t</em>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t<i style={{ color: lossColor }}>loss</i>{\" \"}\n\t\t\t\t\t\t\t\t{$(\n\t\t\t\t\t\t\t\t\t` = \\\\frac{1}{J}\\\\sum_{i = 1}^J (\\\\hat{y_i} - y_i)^2 =`\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<em style={{ color: lossColor }}>\n\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t{$(`${loss.toFixed(7)}`)}\n\t\t\t\t\t\t\t\t</em>\n\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tborderColor: \"#175676\",\n\t\t\t\t\t\t\t\t\tcolor: \"#175676\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.setState({ show: !this.state.show });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tClick to Reveal Graph\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t}\n}\n\nexport default LinearScatter;\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis is a component for the nested function chain rule example\n*/\nimport React, { Component } from \"react\";\nimport {\n\tTypography,\n\tSlider,\n\tBox,\n\tCard,\n\tCardContent,\n\tCardActions,\n\tButton,\n} from \"@material-ui/core\";\n\nclass NestedFunction extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tinput: 0,\n\t\t\toutput1: 0,\n\t\t\toutput2: 0,\n\t\t\toutput3: 0,\n\t\t\tweights: [],\n\t\t\tbiases: [],\n\t\t};\n\t\tthis.compute = this.compute.bind(this);\n\t\tthis.initParams = this.initParams.bind(this);\n\t}\n\tcompute(input) {\n\t\tconst { weights, biases } = this.state;\n\t\tconst linfunc = (x, w, b) => w * x + b;\n\n\t\tconst output1 = linfunc(input, weights[0], biases[0]).toFixed(3);\n\t\tconst output2 = linfunc(output1, weights[1], biases[1]).toFixed(3);\n\t\tconst output3 = linfunc(output2, weights[2], biases[2]).toFixed(3);\n\t\tthis.setState({ input, output1, output2, output3 });\n\t}\n\tgenRandomArray(length) {\n\t\tlet arr = new Array(length);\n\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\tarr[i] = +Math.random().toFixed(2);\n\t\t}\n\t\treturn arr;\n\t}\n\tasync initParams() {\n\t\tconst weights = this.genRandomArray(3);\n\t\tconst biases = this.genRandomArray(3);\n\t\tthis.setState({ weights, biases });\n\t}\n\tasync componentDidMount() {\n\t\tawait this.initParams();\n\t\tthis.compute(34);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tinput,\n\t\t\toutput1,\n\t\t\toutput2,\n\t\t\toutput3,\n\t\t\tweights,\n\t\t\tbiases,\n\t\t} = this.state;\n\t\tconst fixedInput = input.toFixed(3);\n\t\tconst outputArr = [\n\t\t\t{ output: output1, color: \"#8db600\" },\n\t\t\t{ output: output2, color: \"#FF8F00\" },\n\t\t\t{ output: output3, color: \"#56A8C7\" },\n\t\t];\n\n\t\t//prettier-ignore\n\t\treturn (\n\t\t\t<Box display=\"flex\">\n\t\t\t\t<Box width={580}>\n\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\tvalue={this.state.input}\n\t\t\t\t\t\t\t\tonChange={(e, n) => {\n\t\t\t\t\t\t\t\t\tthis.compute(n);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t></Slider>\n\n\t\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t\t<Box justifyContent=\"center\">\n\t\t\t\t\t\t\t\t\t<svg width={500} height={64}>\n\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\td={`M${36} 16, ${100} 16`}\n\t\t\t\t\t\t\t\t\t\t\tstroke={\"#f50557\"}\n\t\t\t\t\t\t\t\t\t\t\tstrokeDasharray=\"25, 4\"\n\t\t\t\t\t\t\t\t\t\t\tstrokeWidth={3 * weights[0] + 0.2}\n\t\t\t\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t\t\t\t\t<text x={40} y={40} fill={\"#f50557\"}>\n\t\t\t\t\t\t\t\t\t\t\t{fixedInput}\n\t\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t\t{outputArr.map((d, i) => (\n\t\t\t\t\t\t\t\t\t\t\t<g key={i} >\n\t\t\t\t\t\t\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\t\t\t\t\t\t\tx={100 + 100 * i}\n\t\t\t\t\t\t\t\t\t\t\t\t\ty={0}\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth={32}\n\t\t\t\t\t\t\t\t\t\t\t\t\theight={32}\n\t\t\t\t\t\t\t\t\t\t\t\t\tfill=\"lightgrey\"\n\t\t\t\t\t\t\t\t\t\t\t\t></rect>\n\t\t\t\t\t\t\t\t\t\t\t\t<text x={111 + 100 * i} y={22}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{i + 1}\n\t\t\t\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\t\t\td={`M${132 + 100 * i} 16, ${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t200 + 100 * i\n\t\t\t\t\t\t\t\t\t\t\t\t\t} 16`}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstroke={d.color}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstrokeDasharray=\"25, 4\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tstrokeWidth={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ti < 2\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 3 *\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tweights[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ti + 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t] +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  0.2\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\t\t\t\t\tx={140 + 100 * i}\n\t\t\t\t\t\t\t\t\t\t\t\t\ty={40}\n\t\t\t\t\t\t\t\t\t\t\t\t\tfill={d.color}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{d.output}\n\t\t\t\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\tneuron1(\n\t\t\t\t\t\t\t\t<Typography color=\"secondary\" variant=\"inherit\">\n\t\t\t\t\t\t\t\t\t{fixedInput}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) = {weights[0]}(\n\t\t\t\t\t\t\t\t<Typography color=\"secondary\" variant=\"inherit\">\n\t\t\t\t\t\t\t\t\t{fixedInput}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) + {biases[0]} ={\" \"}\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#8db600\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inherit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output1}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\tneuron2(\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#8db600\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inherit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output1}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) = {weights[1]}(\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#8db600\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inherit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output1}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) + {biases[1]} ={\" \"}\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#FF8F00\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inherit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output2}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\tneuron3(\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#FF8F00\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inherit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output2}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t) = {weights[2]}(\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#FF8F00\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inherit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output2}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) + {biases[2]} ={\" \"}\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#56A8C7\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inherit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output3}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tborderColor: \"#175676\",\n\t\t\t\t\t\t\t\t\tcolor: \"#175676\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\tawait this.initParams();\n\t\t\t\t\t\t\t\t\t//this.compute(this.state.input);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tnew Weights and biases\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t</Card>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t}\n}\n\nexport default NestedFunction;\n","import React, { Component } from \"react\";\nimport { Button, Card, CardContent } from \"@material-ui/core\";\n\nclass ToggleForward extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tkey: false,\n\t\t};\n\t}\n\trender() {\n\t\tconst { key } = this.state;\n\t\tconst { noKeySVG, keySVG, title } = this.props;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\tsrc={key ? keySVG : noKeySVG}\n\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.setState({ key: !key });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tborderColor: \"#175676\",\n\t\t\t\t\t\t\t\tcolor: \"#175676\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tToggle Key\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ToggleForward;\n","export default __webpack_public_path__ + \"static/media/summary.c45974a2.svg\";","export default __webpack_public_path__ + \"static/media/forward-key.faefbb8b.svg\";","export default __webpack_public_path__ + \"static/media/forward.ff39da98.svg\";","export default __webpack_public_path__ + \"static/media/forwardComputation.42bcf438.svg\";","export default __webpack_public_path__ + \"static/media/backward-key.af99d48b.svg\";","export default __webpack_public_path__ + \"static/media/backward.6cd01f92.svg\";","export default __webpack_public_path__ + \"static/media/backwardComputation.6427121a.svg\";","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis file bringing everything together into the article\n*/\nimport React from \"react\";\nimport { $, $$ } from \"./Typeset\";\nimport {\n\tBox,\n\tButton,\n\tTypography,\n\tFab,\n\tTooltip,\n\tCard,\n\tCardContent,\n} from \"@material-ui/core\";\nimport { Help, PlayArrow, ArrowBackIos } from \"@material-ui/icons\";\n\nimport { Nav } from \"./Nav\";\nimport { Element } from \"react-scroll\";\nimport AutoTool from \"./AutoTool\";\nimport ManualTool from \"./ManualTool\";\nimport NestedFunction from \"./NestedFunction\";\nimport ToggleForward from \"./ToggleForward\";\n/* Assets imports */\nimport summarySVG from \"./assets/summary.svg\";\nimport forwardKeySVG from \"./assets/diagramSVG/forward-key.svg\";\nimport forwardNoKeySVG from \"./assets/diagramSVG/forward.svg\";\nimport forwardComputationSVG from \"./assets/diagramSVG/forwardComputation.svg\";\nimport backwardKeySVG from \"./assets/diagramSVG/backward-key.svg\";\nimport backwardNoKeySVG from \"./assets/diagramSVG/backward.svg\";\nimport backwardComputationSVG from \"./assets/diagramSVG/backwardComputation.svg\";\n\n/* Functional Component */\nconst Explanation = () => {\n\tconst orange = \"#FFA500\";\n\tconst blue = \"#56A8C7\";\n\n\tconst orangeEM = <em style={{ color: orange }}>orange</em>;\n\tconst blueEM = <em style={{ color: blue }}>blue</em>;\n\tconst greenEM = <em style={{ color: \"#8db600\" }}>green</em>;\n\tconst pinkEM = <em style={{ color: \"#F50257\" }}>pink</em>;\n\t/* Link Component that can be reused */\n\tconst link = (href, content) => (\n\t\t<Button\n\t\t\tsize=\"small\"\n\t\t\tstyle={{ color: \"#155676\" }}\n\t\t\thref={href}\n\t\t\ttarget=\"_blank\"\n\t\t\trel=\"noopener noreferrer\"\n\t\t>\n\t\t\t{content}\n\t\t</Button>\n\t);\n\n\tconst definition = (word, desc) => (\n\t\t<Tooltip\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: \"#56A8C7\",\n\t\t\t\tcolor: \"black\",\n\t\t\t}}\n\t\t\ttitle={\n\t\t\t\t<Card>\n\t\t\t\t\t<CardContent>{desc}</CardContent>\n\t\t\t\t</Card>\n\t\t\t}\n\t\t\tplacement=\"top\"\n\t\t\tarrow\n\t\t>\n\t\t\t{word}\n\t\t</Tooltip>\n\t);\n\n\t/* Topic formatted component */\n\tconst topic = (title) => (\n\t\t<Typography variant=\"h3\">\n\t\t\t<b>{title}</b>\n\t\t</Typography>\n\t);\n\t/* SubTopic formatted component */\n\tconst subtopic = (title) => <Typography variant=\"h4\">{title}</Typography>;\n\n\t/* Explanation paper */\n\tconst paper = (\n\t\t<div>\n\t\t\t<br />\n\t\t\t{topic(\"Jump to a Checkpoint\")}\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tIf you want to skip ahead, click on a checkpoint. Otherwise,\n\t\t\t\tclick <b>Article</b> or scroll to the start of the article.\n\t\t\t</Typography>\n\t\t\t<Nav />\n\t\t\t<Element name=\"article\">{topic(\"Introduction\")}</Element>\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tMost people abstract the idea of backpropagation when learning\n\t\t\t\tneural networks because it is by far the most notation heavy\n\t\t\t\tpart. The goal of this article is to build an intuition for why\n\t\t\t\tand how we perform backpropagation. By marrying explanation,\n\t\t\t\tnotation, and interactive tools, the aim is to get a\n\t\t\t\tunderstanding of the foundations. Note that throughout the\n\t\t\t\tarticle there will be{\" \"}\n\t\t\t\t{definition(\n\t\t\t\t\t<span>highlighted</span>,\n\t\t\t\t\t<Typography variant=\"h6\">Example explanation</Typography>\n\t\t\t\t)}{\" \"}\n\t\t\t\twords that will give extra explanation on mouse over.\n\t\t\t</Typography>\n\t\t\t<br />\n\t\t\t{topic(\"Backpropagation on One Neuron\")}\n\t\t\t{subtopic(\"Getting Started\")}\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tThe goal in a neural network, or any optimization problem for\n\t\t\t\tthat matter, is to lower and minimize whatever{\" \"}\n\t\t\t\t{definition(\n\t\t\t\t\t<span>loss</span>,\n\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\tError between predicted values {$(\"\\\\hat{y}\")} and true\n\t\t\t\t\t\tvalues {$(\"y\")}\n\t\t\t\t\t</Typography>\n\t\t\t\t)}{\" \"}\n\t\t\t\tfunction we define. For this article, we will be performing\n\t\t\t\tregression and using mean squared error loss{\" \"}\n\t\t\t\t{definition(\n\t\t\t\t\t<span>MSE</span>,\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t{$$(\n\t\t\t\t\t\t\t\t\"\\\\text{MSE} = \\\\frac{1}{J}\\\\sum_{i = 1}^{J}(\\\\hat{y_i} - y_i)^2\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\t\t<b>Input Variables</b>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tlength of data {$(\"J\")}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tindex {$(\"i\")}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tpredicted values {$(\"\\\\hat{y}\")}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\ttrue values {$(\"y\")}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t\t.\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tBefore hitting the calculus, tune the{\" \"}\n\t\t\t\t{definition(\n\t\t\t\t\t<span>weight and bias on one neuron</span>,\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t{$$(\"\\\\text{neuron}(x) = w_0x + b \")}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\t\t<b>Neuron as a Function</b>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tinput {$(\"x\")}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\toutput {$(\"\\\\text{neuron}(x)\")}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<b>Tunable Parameters</b>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tweight {$(\"w_0\")}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tbias {$(\"b\")}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t)}{\" \"}\n\t\t\t\tby sliding the sliders under <b>Manual Best Fit</b>. By\n\t\t\t\tobserving changes in the <em style={{ color: \"red\" }}>loss</em>,\n\t\t\t\ttry to make it reach 0. When you feel like you've lowered the{\" \"}\n\t\t\t\t<em style={{ color: \"red\" }}>loss</em> enough (or need some\n\t\t\t\thelp), press the{\" \"}\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={true}\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tborderColor: \"#175676\",\n\t\t\t\t\t\tcolor: \"#175676\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tClick to reveal the graph\n\t\t\t\t</Button>{\" \"}\n\t\t\t\tbutton below.\n\t\t\t</Typography>\n\t\t\t<br />\n\t\t\t<Element name=\"structMan\">\n\t\t\t\t<ManualTool />\n\t\t\t</Element>\n\t\t\t<br />\n\t\t\t{subtopic(\"Reflection\")}\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\t<b>\n\t\t\t\t\tThe intuition and logic from the exercise above, is the\n\t\t\t\t\tfoundation for what backpropagation and optimization aims to\n\t\t\t\t\tachieve.\n\t\t\t\t</b>\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\t&emsp;&emsp;&emsp;&emsp;When you start to change the weight, you\n\t\t\t\tobserve where the loss moves, if it moves up, you move the\n\t\t\t\tweight the other direction to lower the loss. This, without the\n\t\t\t\tmath, is the main principle behind gauging the rate of change\n\t\t\t\tand optimizing a neural network.{\" \"}\n\t\t\t\t<b>Let's apply this method of thinking!</b>\n\t\t\t</Typography>\n\t\t\t<br />\n\t\t\t{subtopic(\"Defining Backpropagation\")}\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tFirst to get the{\" \"}\n\t\t\t\t{definition(\n\t\t\t\t\t<span>instantaneous rate of change</span>,\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Typography style={{ color: blue }} variant=\"h6\">\n\t\t\t\t\t\t\t{$$(\"\\\\lim_{h \\\\to 0} \\\\frac{f(x + h) - f(x)}{h}\")}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"h6\" style={{ color: orange }}>\n\t\t\t\t\t\t\t{$$(\"\\\\frac{df}{dx}\")}\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t<Typography style={{ color: blue }} variant=\"body1\">\n\t\t\t\t\t\t\tLimit definition of derivative of {$(\"f(x)\")} with\n\t\t\t\t\t\t\trespect to {$(\"x\")}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography style={{ color: orange }} variant=\"body1\">\n\t\t\t\t\t\t\tNotation for derivative of {$(\"f(x)\")} with respect\n\t\t\t\t\t\t\tto {$(\"x\")}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t\t(derivative), we get our point of interest and another point\n\t\t\t\tthat is infinitely close and calculate slope, this can be\n\t\t\t\tvisualized as a tangent line at the point of interest for a\n\t\t\t\tfunction with one variable like {$(\"f(x)\")}.\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\t&emsp;&emsp;&emsp;&emsp;In the context of our one neuron neural\n\t\t\t\tnetwork, we can compose the whole network as a nested function\n\t\t\t\t{$$(\"\\\\text{loss}(\\\\text{neuron}(x,w,b),y)\")}\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tSince want to tune the parameters weight {$(\"w\")} and bias{\" \"}\n\t\t\t\t{$(\"b\")}, we want to know how each parameters will affect the\n\t\t\t\tloss, or in other words, the{\" \"}\n\t\t\t\t{definition(\n\t\t\t\t\t<span>partial derivative</span>,\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Typography style={{ color: blue }} variant=\"h6\">\n\t\t\t\t\t\t\t{$$(\n\t\t\t\t\t\t\t\t\"\\\\lim_{h \\\\to 0} \\\\frac{f(x + h, y) - f(x,y)}{h}\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"h6\" style={{ color: orange }}>\n\t\t\t\t\t\t\t{$$(\"\\\\frac{\\\\partial f}{\\\\partial x}\")}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography style={{ color: blue }} variant=\"body1\">\n\t\t\t\t\t\t\tLimit definition of partial derivative of{\" \"}\n\t\t\t\t\t\t\t{$(\"f(x,y)\")} with respect to {$(\"x\")}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography style={{ color: orange }} variant=\"body1\">\n\t\t\t\t\t\t\tNotation for partial derivative of {$(\"f(x,y)\")}{\" \"}\n\t\t\t\t\t\t\twith respect to {$(\"x\")}\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t<Typography style={{ color: blue }} variant=\"h6\">\n\t\t\t\t\t\t\t{$$(\n\t\t\t\t\t\t\t\t\"\\\\lim_{h \\\\to 0} \\\\frac{f(x, y + h) - f(x,y)}{h}\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t<Typography variant=\"h6\" style={{ color: orange }}>\n\t\t\t\t\t\t\t{$$(\"\\\\frac{\\\\partial f}{\\\\partial y}\")}\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t<Typography style={{ color: blue }} variant=\"body1\">\n\t\t\t\t\t\t\tLimit definition of partial Derivative of{\" \"}\n\t\t\t\t\t\t\t{$(\"f(x,y)\")} with respect to {$(\"y\")}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography style={{ color: orange }} variant=\"body1\">\n\t\t\t\t\t\t\tNotation for partial derivative of {$(\"f(x,y)\")}{\" \"}\n\t\t\t\t\t\t\twith respect to {$(\"y\")}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t)}{\" \"}\n\t\t\t\tof loss with respect to each parameter, also called the{\" \"}\n\t\t\t\t{definition(\n\t\t\t\t\t<span>gradient</span>,\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t{$$(\n\t\t\t\t\t\t\t\t\"\\\\nabla f(x,y) = \\\\begin{bmatrix} \\\\frac{\\\\partial f}{\\\\partial x} \\\\\\\\[4pt] \\\\frac{\\\\partial f}{\\\\partial y} \\\\\\\\ \\\\end{bmatrix}\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t\t. By computing the gradient, we effectively have gauged how\n\t\t\t\tchanging each parameter will affect the loss: the direction of\n\t\t\t\tsteepest ascent. But we want to lower loss, therefore we use the\n\t\t\t\topposite direction to get the direction of steepest descent, to\n\t\t\t\tperform{\" \"}\n\t\t\t\t{definition(\n\t\t\t\t\t<span>gradient descent</span>,\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\t\t{$(\n\t\t\t\t\t\t\t\t\"\\\\text{param} := \\\\text{param} -lr \\\\cdot \\\\frac{\\\\partial \\\\text{loss}}{\\\\partial \\\\text{param}}\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\tSince the gradient of the loss will be the direction\n\t\t\t\t\t\t\tof steepest <em>ascent</em>, by going the opposite\n\t\t\t\t\t\t\tdirection, we go in the direction of steepest{\" \"}\n\t\t\t\t\t\t\t<em>descent</em>. Learning rate lr then decides how\n\t\t\t\t\t\t\tlarge of a step in the direction of steepest descent\n\t\t\t\t\t\t\twould like.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t\t.\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h4\">\n\t\t\t\t{$$(\n\t\t\t\t\t\"\\\\nabla \\\\text{loss} = \\\\begin{bmatrix} \\\\frac{ \\\\partial \\\\text{loss}}{\\\\partial w} \\\\\\\\[4pt] \\\\frac{ \\\\partial \\\\text{loss}}{\\\\partial b} \\\\\\\\ \\\\end{bmatrix}\"\n\t\t\t\t)}\n\t\t\t</Typography>\n\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tIn order to calculate these derivatives we must use the chain\n\t\t\t\trule due to the nested nature of neural networks.\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\t&emsp;&emsp;&emsp;&emsp;{\" \"}\n\t\t\t\t<b>Below is a color coded example of the chain rule.</b> Start\n\t\t\t\tby sliding the slider and notice how the output is the input to\n\t\t\t\tthe next function and so forth.{\" \"}\n\t\t\t\t<b>Then read the explanation below</b>.\n\t\t\t</Typography>\n\t\t\t<br />\n\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t<Box>\n\t\t\t\t\t<NestedFunction />\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t<br />\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\t<b>\n\t\t\t\t\tSuppose we wanted to see how {blueEM} was affected by{\" \"}\n\t\t\t\t\t{pinkEM}.\n\t\t\t\t</b>\n\t\t\t\t<br />\n\t\t\t\tFirst lets start at {blueEM}, then\n\t\t\t\t<ol>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tobserve how {blueEM} was affected by {orangeEM}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tobserve how {orangeEM} was affected by {greenEM}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tobserve how {greenEM} was affected by {pinkEM}\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t\tBy chaining these observations together, we get how how {blueEM}{\" \"}\n\t\t\t\twas affected by {pinkEM}.\n\t\t\t</Typography>\n\t\t\t<br />\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\t<b>\n\t\t\t\t\tThis logic applied to our one neuron neural network looks\n\t\t\t\t\tlike\n\t\t\t\t</b>\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\t{$$(\n\t\t\t\t\t\"\\\\frac{ \\\\partial \\\\text{loss}}{\\\\partial w} = \\\\frac{ \\\\partial \\\\text{loss}}{\\\\partial \\\\text{neuron}} \\\\frac{ \\\\partial \\\\text{neuron}}{\\\\partial w} \"\n\t\t\t\t)}\n\t\t\t\t{$$(\n\t\t\t\t\t\"\\\\frac{ \\\\partial \\\\text{loss}}{\\\\partial b} = \\\\frac{ \\\\partial \\\\text{loss}}{\\\\partial \\\\text{neuron}} \\\\frac{ \\\\partial \\\\text{neuron}}{\\\\partial b} \"\n\t\t\t\t)}\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tThese chains can be broken up into more intermediate derivatives\n\t\t\t\tall the way down to their primitives (basis of automatic\n\t\t\t\tdifferentiation). <b>The main takeaway</b> is that we first\n\t\t\t\tobserve how the loss output was affected by the neuron output{\" \"}\n\t\t\t\t{$(\n\t\t\t\t\t\" \\\\frac{ \\\\partial \\\\text{loss}}{\\\\partial \\\\text{neuron}}\"\n\t\t\t\t)}\n\t\t\t\t, then we observe how the neuron output was affected by each\n\t\t\t\tparameter{\" \"}\n\t\t\t\t{$(\n\t\t\t\t\t\" \\\\frac{ \\\\partial \\\\text{neuron}}{\\\\partial \\\\text{parameter}}\"\n\t\t\t\t)}{\" \"}\n\t\t\t\tand can chain these to observe how the loss was affected by the\n\t\t\t\tparameter{\" \"}\n\t\t\t\t{$(\n\t\t\t\t\t\" \\\\frac{ \\\\partial \\\\text{loss}}{\\\\partial \\\\text{parameter}}\"\n\t\t\t\t)}\n\t\t\t\t. Notice that we compute these derivatives going <b>backward</b>{\" \"}\n\t\t\t\t(where the term <b>back</b>propagation comes from), which has\n\t\t\t\tthe added benefit of reusing values computed in the forward\n\t\t\t\tpropagation (for more on this check out{\" \"}\n\t\t\t\t{link(\n\t\t\t\t\t\"https://rufflewind.com/2016-12-30/reverse-mode-automatic-differentiation\",\n\t\t\t\t\t\"reverse mode automatic differentiation\"\n\t\t\t\t)}\n\t\t\t\t).\n\t\t\t</Typography>\n\t\t\t<br />\n\t\t\t{subtopic(\"Concrete Example\")}\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tLet's go through a concrete example of forward propagation, then\n\t\t\t\tan emphasis on backward propagation. The training example will\n\t\t\t\tbe ({$(\"x = 2.1\")}, {$(\"y = 4\")}), the weight will be{\" \"}\n\t\t\t\t{$(\"w = 1\")}, and the bias will be {$(\"b = 0\")}. {$(\"\\\\hat{y}\")}{\" \"}\n\t\t\t\trepresents the neuron output and predicted value, and{\" \"}\n\t\t\t\t{$(\"\\\\text{loss}\")} represents squared error loss.\n\t\t\t</Typography>\n\t\t\t<br />\n\n\t\t\t<ToggleForward\n\t\t\t\ttitle={<Typography variant=\"h4\">Forward Overview</Typography>}\n\t\t\t\tnoKeySVG={forwardNoKeySVG}\n\t\t\t\tkeySVG={forwardKeySVG}\n\t\t\t/>\n\t\t\t<br />\n\t\t\t<Typography variant=\"h4\">Forward Computation</Typography>\n\t\t\t<img\n\t\t\t\tsrc={forwardComputationSVG}\n\t\t\t\twidth=\"100%\"\n\t\t\t\talt=\"forward computation\"\n\t\t\t/>\n\t\t\t<br />\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tNow we can go backward and compute partial derivatives with the\n\t\t\t\tchain rule to get the {$(\"\\\\nabla \\\\text{loss}\")}\n\t\t\t</Typography>\n\n\t\t\t<br />\n\n\t\t\t<ToggleForward\n\t\t\t\ttitle={<Typography variant=\"h4\">Backward Overview</Typography>}\n\t\t\t\tnoKeySVG={backwardNoKeySVG}\n\t\t\t\tkeySVG={backwardKeySVG}\n\t\t\t/>\n\t\t\t<br />\n\n\t\t\t<Typography variant=\"h4\">Backward Computation</Typography>\n\t\t\t<img\n\t\t\t\tsrc={backwardComputationSVG}\n\t\t\t\twidth=\"100%\"\n\t\t\t\talt=\"backward computation\"\n\t\t\t/>\n\n\t\t\t<Typography variant=\"h5\">\n\t\t\t\t{$$(\"\\\\frac{\\\\partial \\\\text{loss}}{\\\\partial w} = -7.98\")}\n\t\t\t\t{$$(\"\\\\frac{\\\\partial \\\\text{loss}}{\\\\partial b} = -3.8\")}\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tThen, we update the parameters with opposite gradient to descend\n\t\t\t\tloss, in this case learning rate is {$(\"\\\\text{lr} = 0.01\")}\n\t\t\t\t{$$(\n\t\t\t\t\t\"w := w - \\\\text{lr} \\\\cdot \\\\frac{\\\\partial \\\\text{loss}}{\\\\partial w} = (1) - (0.01) \\\\cdot (-7.98) = 1.0798\"\n\t\t\t\t)}\n\t\t\t\t{$$(\n\t\t\t\t\t\"b := b - \\\\text{lr} \\\\cdot \\\\frac{\\\\partial \\\\text{loss}}{\\\\partial b} = (0) - (0.01) \\\\cdot (-3.8) = 0.038 \"\n\t\t\t\t)}\n\t\t\t\t<b>\n\t\t\t\t\tTo see how well our tuned parameters do, let's do one more\n\t\t\t\t\tforward pass\n\t\t\t\t</b>\n\t\t\t\t{$$(\"\\\\text{loss} = ((1.0798)(2.1) + 0.038) - 4)^2 = 2.87\")}\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tTotal loss decrease of {$(\"3.61 - 2.87 = 0.74\")}. Loss went\n\t\t\t\tdown!\n\t\t\t</Typography>\n\t\t\t<br />\n\t\t\t{subtopic(\"See it in Action\")}\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tTo see the what we just did (forward, backward, update) on more\n\t\t\t\tdata and on the entire batch as opposed to a single training\n\t\t\t\texample, press{\" \"}\n\t\t\t\t<Fab\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackground: \"#175676\",\n\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t}}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tdisabled={true}\n\t\t\t\t>\n\t\t\t\t\t{<PlayArrow fontSize=\"small\" />}\n\t\t\t\t</Fab>{\" \"}\n\t\t\t\tto start the training process under <b>Auto Best Fit</b>. Watch\n\t\t\t\thow as the line gets better fit, the red dot descends the loss\n\t\t\t\tcontour.\n\t\t\t</Typography>\n\t\t\t<Element name=\"structLin\">\n\t\t\t\t<AutoTool />\n\t\t\t</Element>\n\t\t\t<br />\n\t\t\t{topic(\"Scaling up Neurons and Layers\")}\n\t\t\t{subtopic(\"The Changes\")}\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tTo fit more interesting data that is non-linear (e.g. sine wave\n\t\t\t\tor quadratic), we need to add complexity to vary output to make\n\t\t\t\tsure we are not constrained to only linear outputs. We can do\n\t\t\t\tthis by adding more neurons, more layers, and activation\n\t\t\t\tfunctions. If you think of our entire neural network as a\n\t\t\t\tfunction, then by adding more neurons and more layers we are\n\t\t\t\tcreating a more nested function. Not only does this create more\n\t\t\t\tparameters that we can tune to vary the output, it also\n\t\t\t\tmaintains the property of{\" \"}\n\t\t\t\t{definition(\n\t\t\t\t\t<span>differentiability</span>,\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\tThe derivative exists for all inputs\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t\t: important so we can compute the gradient. And by adding\n\t\t\t\tnon-linear activation functions with points of deactivation,\n\t\t\t\tcertain neurons may have no effect on the output while others\n\t\t\t\tmay become more activated, contributing to outputs that don't\n\t\t\t\thave to follow linear constraints. We will be using the{\" \"}\n\t\t\t\t{definition(\n\t\t\t\t\t<span>ReLU</span>,\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t<b>Re</b>ctified <b>L</b>inear <b>U</b>nit\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t{$(\n\t\t\t\t\t\t\t\t\" \\\\text{ReLU}(x) = \\\\left\\\\{ \\\\begin{array}{ll} 0 & x\\\\leq 0  \\\\\\\\ x & x > 0 \\\\\\\\ \\\\end{array} \\\\right. \"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t)}{\" \"}\n\t\t\t\tactivation function in the hidden layers.\n\t\t\t</Typography>\n\n\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t<Box>\n\t\t\t\t\t<img alt=\"summary\" src={summarySVG} width=\"100%\" />\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\t<b>Above</b> is an example of a neural network with one input,\n\t\t\t\tthree hidden layers with eight neurons each, and one output\n\t\t\t\tneuron. The output of each neuron is fed into the neurons of the\n\t\t\t\tnext layer and so forth (like a nested function). Each link\n\t\t\t\trepresents a weight and a corresponding input into the\n\t\t\t\trespective neuron, notice how the more neurons we add, the more\n\t\t\t\tlinks there are and the more parameters we can tune to get our\n\t\t\t\tdesired output.\n\t\t\t</Typography>\n\t\t\t<br />\n\t\t\t{subtopic(\"Training Process\")}\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\t<ol>\n\t\t\t\t\t<li>Forward propagation resulting in an output and loss</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tBackward propagation using the chain rule to compute the\n\t\t\t\t\t\tgradient\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>Descend the loss by performing gradient descent</li>\n\t\t\t\t</ol>\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\t<b>\n\t\t\t\t\tThe process doesn't change from the single neuron example!\n\t\t\t\t</b>{\" \"}\n\t\t\t\tSince the network is deeper, we have to calculate more\n\t\t\t\tderivatives going backwards and have to tune more parameters\n\t\t\t\twith gradient descent, but the logic stays the same.\n\t\t\t</Typography>\n\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\t&emsp;&emsp;&emsp;&emsp;A great way to visualize backpropagation\n\t\t\t\tin a large network is with vertical arrows representing which\n\t\t\t\tdirection we need to nudge the neuron output in order to lower\n\t\t\t\tloss:{\" \"}\n\t\t\t\t{$(\n\t\t\t\t\t\"-\\\\frac{\\\\partial \\\\text{loss}}{\\\\partial \\\\text{activation} }\"\n\t\t\t\t)}\n\t\t\t\t. In the <b>EPOCH Tool</b> below, you will be able to visualize\n\t\t\t\tall phases of a single epoch with an emphasis on{\" \"}\n\t\t\t\t<b>backpropagation</b>.\n\t\t\t</Typography>\n\n\t\t\t<br />\n\t\t\t<Typography variant=\"h4\">\n\t\t\t\t<b>EPOCH Tool</b> Quick Start\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\t<ol>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tPress{\" \"}\n\t\t\t\t\t\t<Fab\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackground: \"#175676\",\n\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<PlayArrow fontSize=\"small\" />\n\t\t\t\t\t\t</Fab>{\" \"}\n\t\t\t\t\t\tto start training\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tThen press{\" \"}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tborderColor: \"#175676\",\n\t\t\t\t\t\t\t\tcolor: \"#175676\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tClick to animate epoch #\n\t\t\t\t\t\t</Button>{\" \"}\n\t\t\t\t\t\tto see forward propagation, <b>backward propagation</b>{\" \"}\n\t\t\t\t\t\tand, update animation at the epoch #\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tTo go back to fitting mode click{\" \"}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tborderColor: \"#175676\",\n\t\t\t\t\t\t\t\tcolor: \"#175676\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ArrowBackIos /> Go back to fitting\n\t\t\t\t\t\t</Button>{\" \"}\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\t<b> Click on </b>\n\t\t\t\t<Help variant=\"small\" style={{ color: \"#FFA500\" }} />{\" \"}\n\t\t\t\t<b>to reveal extra descriptions</b>\n\t\t\t</Typography>\n\t\t\t<br />\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<Box justifyContent=\"center\" display=\"flex\">\n\t\t\t<Box maxWidth=\"60%\">{paper}</Box>\n\t\t</Box>\n\t);\n};\nexport default Explanation;\n","export default __webpack_public_path__ + \"static/media/headerTitle.cff466f0.svg\";","/* \n\tDonny Bertucci: @xnought\n\t\tSummary:\n\t\t\tThis file generates the header contour svg\n*/\n\n//import React, { Component } from \"react\";\n//import * as d3 from \"d3\";\n//import { Typography } from \"@material-ui/core\";\n\n//class Header extends Component {\n//constructor(props) {\n//super(props);\n//this.state = { width: 2000, height: 1000 };\n//}\n\n//async componentDidMount() {\n//let w = document.body.clientWidth;\n//this.setState({ width: w, height: 500 });\n//const { width, height } = await this.state;\n//const svg = d3.select(\"#contourBackground\").select(\"#contour\");\n//const darkness = -8;\n\n//const data = {\n//X: [0, 1, 2, 3, 4],\n//y: [4, 3, 3, 1, 0],\n//};\n//let n = width,\n//m = height,\n//values = new Array(n * m);\n\n//for (let j = 0.5, k = 0; j < m; ++j) {\n//for (let i = 0.5; i < n; ++i, ++k) {\n//values[k] = loss((i / n) * 10 - 5, (j / m) * 20);\n//}\n//}\n\n//function loss(m, b) {\n//let x = data.X,\n//y = data.y;\n//let summed = 0;\n//for (let i = 0; i < data.X.length; i++) {\n//summed += Math.pow(m * x[i] + b - y[i], 2);\n//}\n//return summed / (2 * x.length);\n//}\n//let thresholds = d3.range(darkness, 20, 1).map((i) => Math.pow(2, i));\n//let color = d3.scaleSequentialLog(\n//d3.extent(thresholds),\n//d3.interpolateCool\n//);\n//const contours = d3.contours().size([n, m]).thresholds(thresholds)(\n//values\n//);\n//svg.append(\"g\")\n//.attr(\"fill\", \"none\")\n//.selectAll(\"path\")\n//.data(contours)\n//.join(\"path\")\n//.attr(\"fill\", (d) => color(d.value))\n//.attr(\"d\", d3.geoPath());\n//}\n//render() {\n//const { width, height } = this.state;\n//return (\n//<div id=\"contourBackground\">\n//<svg style={{ width, height }} id=\"contour\"></svg>\n//<Typography\n//style={{\n//position: \"relative\",\n//bottom: 200,\n//left: 100,\n//color: \"white\",\n//}}\n//variant=\"h2\"\n//>\n//<b>How Neural Networks Learn </b>\n//</Typography>\n//<Typography\n//style={{\n//position: \"relative\",\n//bottom: 200,\n//left: 100,\n//color: \"white\",\n//}}\n//variant=\"h6\"\n//>\n//Learn backpropogation and optimization with interactive\n//tools\n//</Typography>\n//</div>\n//);\n//}\n//}\n\nimport headerTitleSVG from \"./assets/headerTitle.svg\";\n\n/* to reduce computation we will keep header fixed, might change this to the above code in the future */\nconst Header = () => (\n\t<div>\n\t\t<img src={headerTitleSVG} alt={\"header with title\"} width=\"100%\" />\n\t</div>\n);\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/singleSummary.8525cefd.svg\";","export default __webpack_public_path__ + \"static/media/epochMode.0ae87189.png\";","export default __webpack_public_path__ + \"static/media/key.84fb58e0.svg\";","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis is the class definiton and implmentation of Neuron for Nerual Network\n*/\nexport class Neuron {\n\tconstructor(weights, bias) {\n\t\tthis.weights = weights;\n\t\tthis.bias = bias;\n\t}\n\t/* Next functions are just helper functions for the operations */\n\tmult(array1, array2) {\n\t\treturn array1.map((item, i) => {\n\t\t\treturn item * array2[i];\n\t\t});\n\t}\n\tdMult(dvalues, oppositeParameter) {\n\t\treturn this.mult(dvalues, oppositeParameter);\n\t}\n\tsum(array) {\n\t\treturn array.reduce((a, b) => a + b);\n\t}\n\tdSum(dvalue, numInputs) {\n\t\tlet dSumArray = [];\n\t\tfor (let i = 0; i < numInputs; i++) {\n\t\t\tdSumArray.push(dvalue);\n\t\t}\n\t\treturn dSumArray;\n\t}\n\tlinear(input) {\n\t\treturn input;\n\t}\n\n\t/* \n\t\tPurpose: feed forward of single neuron\n\t\t@param: inputs, activation\n\t\t@store inputs, multStep, sumStep, actStep, output\n\t*/\n\tforward(inputs, activation) {\n\t\t/* Destructure the class values */\n\t\tconst { weights, bias } = this;\n\t\tconst { mult, sum } = this;\n\t\t/* propogate forward */\n\t\tconst multStep = mult(inputs, weights);\n\t\tconst sumStep = sum(multStep) + bias;\n\t\tconst actStep = activation(sumStep);\n\n\t\t/* Save values */\n\t\tthis.inputs = inputs;\n\t\tthis.multStep = multStep;\n\t\tthis.sumStep = sumStep;\n\t\tthis.actStep = actStep;\n\t\tthis.output = actStep;\n\t}\n\n\t/* \n\t\tPurpose: feed backward of single neuron\n\t\t@param: dvalue, activation\n\t\t@store inputs, multStep, sumStep, actStep, output\n\t*/\n\tbackward(dvalue, activation) {\n\t\t/* Destructure the class values */\n\t\tconst { inputs, weights, actStep } = this;\n\t\tconst { dSum, mult, sum } = this;\n\t\t/* propgate backwards */\n\t\tconst dActStep = activation(actStep) * dvalue;\n\t\tconst dSumStep = dSum(dActStep, inputs.length);\n\t\tconst dBias = dActStep;\n\t\tconst dWeights = mult(dSumStep, inputs);\n\t\tconst dInputs = mult(dSumStep, weights);\n\t\tconst dInputsSum = sum(dInputs);\n\n\t\t/* Save values */\n\t\tthis.dvalue = dvalue;\n\t\tthis.dActStep = dActStep;\n\t\tthis.dSumStep = dSumStep;\n\t\tthis.dBias = dBias;\n\t\tthis.dWeights = dWeights;\n\t\tthis.dInputs = dInputs;\n\t\tthis.dInputsSum = dInputsSum;\n\t}\n}\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\texports the losses to be used for the neural network\n\t\t\n*/\nexport class MeanSquaredErrorLoss {\n\t/* \n\t\tPurpose: feed forward of the nerual network\n\t\t@param yhat, y\n\t\t@stores y, yhat, subStep, squareStep, output\n\t*/\n\tforward(yhat, y) {\n\t\tconst subStep = yhat - y;\n\t\tconst squareStep = (this.output = Math.pow(yhat - y, 2));\n\n\t\tthis.subStep = subStep;\n\t\tthis.squareStep = squareStep;\n\t\tthis.output = squareStep;\n\t}\n\t/* \n\t\tPurpose: feed backward of the nerual network\n\t\t@stores dInputs\n\t*/\n\tbackward() {\n\t\tthis.dInputs = 2 * this.subStep;\n\t}\n}\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis creates the definiton and implemntation of the neural network in a non vectorized more manual way \n\t\tdesigned to show all the operations\n\tTODO: add the update that would update to the weights sgd style and compute forward once more to see difference\n*/\nimport { Neuron } from \"./Neuron\";\nimport { MeanSquaredErrorLoss } from \"./Loss\";\nexport class NeuralNetwork {\n\t/* here we construct the Neuron model */\n\tconstructor(shape, weights, biases) {\n\t\tthis.model = [];\n\t\tthis.loss = new MeanSquaredErrorLoss();\n\t\tthis.shape = shape;\n\n\t\t/* HERE WE CONSTRUCT THE MODEL ON CLASS CREATION */\n\t\tfor (let layer = 0; layer < weights.length; layer++) {\n\t\t\tlet dense = [];\n\t\t\tfor (let neuron = 0; neuron < weights[layer].length; neuron++) {\n\t\t\t\tdense.push(\n\t\t\t\t\tnew Neuron(weights[layer][neuron], biases[layer][neuron])\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.model.push(dense);\n\t\t}\n\t}\n\t/* Next are some helper functions */\n\tsum(array) {\n\t\treturn array.reduce((a, b) => a + b);\n\t}\n\tadd(array1, array2) {\n\t\tconst array1Length = array1.length;\n\t\tconst array2Length = array2.length;\n\t\tif (array2Length !== array1Length) {\n\t\t\tconsole.error(\n\t\t\t\t`${array1Length} does not match ${array2Length}, so returned empty array`\n\t\t\t);\n\t\t\treturn [];\n\t\t} else {\n\t\t\tlet result = new Array(array1Length);\n\t\t\tfor (let i = 0; i < array1.length; i++) {\n\t\t\t\tresult[i] = array1[i] + array2[i];\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\tzeros(length) {\n\t\tlet result = new Array(length);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tresult[i] = 0;\n\t\t}\n\t\treturn result;\n\t}\n\tdReLU(input) {\n\t\treturn input > 0 ? 1 : 0;\n\t}\n\tdLinear(input) {\n\t\treturn 1;\n\t}\n\n\tReLU(input) {\n\t\treturn Math.max(0, input);\n\t}\n\n\tlinear(input) {\n\t\treturn input;\n\t}\n\n\t/* \n\t\tPurpose: to feed forward the entire layer\n\t\t@param input, label\n\t\t@store model, yhat, loss\n\t*/\n\tforward(input, label) {\n\t\tlet inputs = [input];\n\t\tconst lastLayer = this.model.length;\n\t\tconst outputNeuron = 0;\n\t\t/* First iterate through each layer */\n\t\tfor (let layer = 0; layer < lastLayer - 1; layer++) {\n\t\t\t/* Then iterate through each neuron in the layer */\n\t\t\tlet outputs = [];\n\t\t\tfor (let neuron = 0; neuron < this.model[layer].length; neuron++) {\n\t\t\t\t/* Then feed forward each individual neuron and push to output array */\n\t\t\t\tthis.model[layer][neuron].forward(inputs, this.ReLU);\n\t\t\t\toutputs.push(this.model[layer][neuron].output);\n\t\t\t}\n\n\t\t\t/* Then outputs will be the inputs for the next layer */\n\t\t\tinputs = outputs;\n\t\t}\n\t\tthis.model[lastLayer - 1][0].forward(inputs, this.linear);\n\t\tthis.yhat = this.model[lastLayer - 1][outputNeuron].output;\n\t\tthis.loss.forward(this.yhat, label);\n\t}\n\t/* \n\t\tPurpose: to feed backward the entire model per layer\n\t*/\n\tbackward() {\n\t\tconst { add, zeros } = this;\n\t\tthis.loss.backward();\n\t\tlet dValues = [this.loss.dInputs];\n\t\tconst lastLayer = this.model.length;\n\t\t/* take care of output neuron */\n\t\tconst outputNeuron = 0;\n\t\tthis.model[lastLayer - 1][outputNeuron].backward(\n\t\t\tdValues[outputNeuron],\n\t\t\tthis.dLinear\n\t\t);\n\t\tdValues = this.model[lastLayer - 1][outputNeuron].dInputs;\n\n\t\t/* We want to start the second to last layer */\n\t\tfor (let layer = lastLayer - 2; layer >= 0; layer--) {\n\t\t\tlet dInputs = zeros(this.model[layer][0].inputs.length);\n\t\t\tfor (let neuron = 0; neuron < this.model[layer].length; neuron++) {\n\t\t\t\tthis.model[layer][neuron].backward(dValues[neuron], this.dReLU);\n\t\t\t\tdInputs = add(dInputs, this.model[layer][neuron].dInputs);\n\t\t\t}\n\t\t\tdValues = dInputs; //we transfer the dInputs into dValues for the next layer back\n\t\t}\n\t}\n\t/* \n\t\tPurpose: to update all the weights using gradient descent\n\t\t@param lr: learning rate\n\t*/\n\tupdate(lr) {\n\t\t/* First create the gradient descent */\n\t\tconst gd = (weight, lr, dweight) => weight - lr * dweight;\n\t\t/* Iterate over the model */\n\t\tfor (let layer = 0; layer < this.model.length; layer++) {\n\t\t\tfor (let neuron = 0; neuron < this.model[layer].length; neuron++) {\n\t\t\t\tfor (\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\ti < this.model[layer][neuron].dWeights.length;\n\t\t\t\t\ti++\n\t\t\t\t) {\n\t\t\t\t\tconst newWeights = gd(\n\t\t\t\t\t\tthis.model[layer][neuron].weights[i],\n\t\t\t\t\t\tlr,\n\t\t\t\t\t\tthis.model[layer][neuron].dWeights[i]\n\t\t\t\t\t);\n\t\t\t\t\tconst newBias = gd(\n\t\t\t\t\t\tthis.model[layer][neuron].bias,\n\t\t\t\t\t\tlr,\n\t\t\t\t\t\tthis.model[layer][neuron].dBias\n\t\t\t\t\t);\n\n\t\t\t\t\t/* Formally update the model weights */\n\t\t\t\t\tthis.model[layer][neuron].weights[i] = newWeights;\n\t\t\t\t\tthis.model[layer][neuron].bias = newBias;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t/* \n\t\tTo throttle each number up and down for visualizations\t\n\t*/\n\t//throttleForward(neuron, layer, change, label) {\n\t///* First Change the value of the output of this neuron */\n\t//const calcChange = this.model[layer][neuron].output + change;\n\t//this.model[layer][neuron].output = calcChange;\n\n\t///* First construct the inputs for the next layer which is made out of the new outputs */\n\t//let inputs = [];\n\t//for (let n = 0; n < this.model[layer].length; n++) {\n\t//inputs.push(this.model[layer][n].output);\n\t//}\n\n\t//const lastLayer = this.model.length;\n\t//for (let l = layer + 1; l < lastLayer - 1; l++) {\n\t///* Then iterate through each neuron in the layer */\n\t//let outputs = [];\n\t//for (let n = 0; n < this.model[l].length; n++) {\n\t///* Then feed forward each individual neuron and push to output array */\n\t//this.model[l][n].forward(inputs, this.ReLU);\n\t//outputs.push(this.model[l][n].output);\n\t//}\n\n\t///* Then outputs will be the inputs for the next layer */\n\t//inputs = outputs;\n\t//}\n\t//this.model[lastLayer - 1][0].forward(inputs, this.linear);\n\t//this.yhat = this.model[lastLayer - 1][0].output;\n\t//this.loss.forward(this.yhat, label);\n\t//}\n}\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tExports some tools that make it easier to deal with the data\n*/\n\n/* \n\tPurpose: format the weight array given from tensorflow\n\t@param uweights (unformatted weights), shape\n\t@return layer (formated weights per layer)\n*/\nexport function formatWeightArray(uweights, shape) {\n\tlet layer = [];\n\t/* Increment over each layer l */\n\tfor (let l = 0; l < uweights.length; l++) {\n\t\t/* First num in shape is input neuron which is why we skip here by adding 1 */\n\t\tlet increment = shape[l + 1];\n\t\tlet weightSet = [];\n\t\t/* Increment over each neuron */\n\t\tfor (let t = 0; t < increment; t++) {\n\t\t\tlet weights = [];\n\t\t\t/* Increment over each weight per neuron */\n\t\t\tfor (let w = t; w < uweights[l].length; w += increment) {\n\t\t\t\tweights.push(uweights[l][w]);\n\t\t\t}\n\t\t\tweightSet.push(weights);\n\t\t}\n\t\tlayer.push(weightSet);\n\t}\n\treturn layer;\n}\n\n/* \n\tPurpose: to turn a 2d array into the same array but fixed to a certian number of numbers/figures\n\t@param arr  (not fixed array), fixed\n\t@return arr (fixed array)\n*/\nexport function toFunc2DArray(arr, fixed) {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tfor (let e = 0; e < arr[i].length; e++) {\n\t\t\tarr[i][e] = +arr[i][e].toFixed(fixed);\n\t\t}\n\t}\n\treturn arr;\n}\n\n/* \n\tPurpose: Flattens the array\n\t@param array\n\t@return flattenedArray\n*/\nexport function flatten(array) {\n\tlet flattendArray = [];\n\tfor (let i = 0; i < array.length; i++) {\n\t\tfor (let e = 0; e < array[i].length; e++) {\n\t\t\tflattendArray.push(array[i][e]);\n\t\t}\n\t}\n\treturn flattendArray;\n}\n\n/* \n\tPurpose: generate random integer from 0 to given paramter\n\t@param max\n\t@return Number [0,max)\n*/\nexport function getRandomInt(max) {\n\treturn Math.floor(Math.random() * Math.floor(max));\n}\n\n/* \n\tPurpose: turn tensor to array\n\t@param tensor \n\t@return array\n*/\nexport function tensorToArray(tensor) {\n\treturn Array.from(tensor.dataSync());\n}\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis file generates the drawing parts of the nerual network\n*/\nimport * as d3 from \"d3\";\n\n/* \n\tGenerate d3 linear scales for x and y\t\n\t@return {xScale, yScale}\n*/\nexport function generateLinearScale(x, y) {\n\tconst xScale = d3.scaleLinear().domain(x.domain).range(x.range);\n\tconst yScale = d3.scaleLinear().domain(y.domain).range(y.range);\n\treturn { xScale, yScale };\n}\n\n/* \n\tGenerate Bezier Curved Links\n\t@return d3 link\n*/\nexport function generateLink(adjustment) {\n\treturn d3\n\t\t.linkHorizontal()\n\t\t.x((d) => d.x + adjustment)\n\t\t.y((d) => d.y + adjustment);\n}\n\n/* \n\tGenerate the rectangles for neuron placement\n\t@return  shapedNeurons\n*/\nexport function generateNeuronPlacement(\n\tshape,\n\tlayerProportion,\n\tsquareWidth,\n\tstartNeuron,\n\tstopNeuron,\n\txScale,\n\tyScale\n) {\n\tlet shapedNeurons = [];\n\tshapedNeurons.push([startNeuron]);\n\n\tfor (let layer = 1; layer < shape.length - 1; layer++) {\n\t\tlet dense = [];\n\t\tfor (let neuron = 0; neuron < shape[layer]; neuron++) {\n\t\t\tconst coordinate = {\n\t\t\t\tx: xScale(layerProportion[layer]) - squareWidth / 2,\n\t\t\t\ty: yScale(92 - neuron * 12) - squareWidth / 2,\n\t\t\t};\n\t\t\t// push to arrays\n\t\t\tdense.push(coordinate);\n\t\t}\n\t\tshapedNeurons.push(dense);\n\t}\n\n\tshapedNeurons.push([stopNeuron]);\n\n\treturn shapedNeurons;\n}\n\n/* \n\tGenerate the placement of links relative to neurons\n\t@return layerLinks\n*/\nexport function generateLinksPlacement(shape, shapedNeurons, linksGenerator) {\n\t/* We start to iterate over ns */\n\tlet perLink = [];\n\tlet layerLinks = [];\n\tlet neuronLinks = [];\n\tfor (let layer = 1; layer < shape.length; layer++) {\n\t\tneuronLinks = [];\n\t\tfor (let neuron = 0; neuron < shape[layer]; neuron++) {\n\t\t\tperLink = [];\n\t\t\tfor (\n\t\t\t\tlet nextNeuron = 0;\n\t\t\t\tnextNeuron < shape[layer - 1];\n\t\t\t\tnextNeuron++\n\t\t\t) {\n\t\t\t\tperLink.push(\n\t\t\t\t\tlinksGenerator({\n\t\t\t\t\t\tsource: shapedNeurons[layer - 1][nextNeuron],\n\t\t\t\t\t\ttarget: shapedNeurons[layer][neuron],\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t\tneuronLinks.push(perLink);\n\t\t}\n\t\tlayerLinks.push(neuronLinks);\n\t}\n\n\treturn layerLinks;\n}\n","/* \n  @author: Donny Bertucci: xnought\n  Summary: \n\tMainTool.js is the main controller of all logic of the backprop explainer\n*/\n\nimport React, { Component } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport AnimatedNumber from \"animated-number-react\";\nimport {\n\tNeuralNetworkComponent,\n\tScatterPlot,\n\tLoss,\n\tAnimatedScatterPlot,\n\tSummary,\n} from \"../../exports\";\nimport {\n\tTypography,\n\tBox,\n\tCard,\n\tCardContent,\n\tIconButton,\n\tCardActions,\n\tChip,\n\tButton,\n\tFab,\n\tTooltip,\n\tDialog,\n\tDialogContent,\n\tDialogActions,\n} from \"@material-ui/core\";\nimport {\n\tReplay,\n\tFastForward,\n\tPlayArrow,\n\tStop,\n\tHelp,\n\tClose,\n\tArrowBackIos,\n} from \"@material-ui/icons\";\nimport singleSummarySVG from \"./assets/singleSummary.svg\";\nimport epochModePNG from \"./assets/epochMode.png\";\nimport keySVG from \"./assets/key.svg\";\nimport { NeuralNetwork, tools } from \"../../../nnMiniLibrary/exports\";\nimport { draw } from \"../../../Utils/exports\";\n\nclass EPOCHTool extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t/* State for NN */\n\t\t\ttensorFlowNN: null,\n\t\t\tminiNN: null,\n\t\t\tX: [],\n\t\t\ty: [],\n\t\t\tyhat: [],\n\t\t\tshape: [1, 8, 8, 8, 1],\n\t\t\tlr: 0.001,\n\t\t\tepoch: 0,\n\t\t\tcpyEpoch: 0,\n\n\t\t\tbiasesData: [],\n\t\t\tweightsData: [],\n\t\t\tlossArray: [],\n\t\t\tloss: null,\n\t\t\tscale: 5,\n\n\t\t\tshapedWeights: [],\n\t\t\tshapedRects: [],\n\t\t\tshapedLinks: [],\n\n\t\t\tdirection: \"edgePaused\",\n\t\t\tcurve: \"sin\",\n\n\t\t\t/* State for Components */\n\t\t\tcontrols: {\n\t\t\t\tplaying: false,\n\t\t\t\tspeed: 100,\n\t\t\t},\n\n\t\t\tmode: false,\n\t\t\tstopRender: false,\n\t\t\tkeyFrameLayer: 0,\n\t\t\tkeyFrameLoss: 0,\n\t\t\tkeyFrameScatter: 0,\n\t\t\tsubEpoch: \"\",\n\t\t\tisAnimating: false,\n\t\t\tlossSavings: 0,\n\t\t\tlossDifference: 0,\n\t\t\tsingleInputExample: 0,\n\t\t\tsingleLabelExample: 0,\n\t\t\tnewOutput: 0,\n\n\t\t\t/* Dialog showing */\n\t\t\tcontrolCenterHelp: false,\n\t\t\tcustomizationHelp: false,\n\t\t\tneuralNetworkHelp: false,\n\t\t\tlossChange: 0,\n\t\t\tpotentialYhat: [],\n\t\t\tsingleInputIndex: -1,\n\t\t\tshouldNotRender: false,\n\t\t\tstatus: \"reset\",\n\t\t\tzoom: 1,\n\t\t};\n\n\t\tthis.initNeuralNetwork = this.initNeuralNetwork.bind(this);\n\t\tthis.run = this.run.bind(this);\n\t\tthis.genTensorData = this.genTensorData.bind(this);\n\t\tthis.mutate = this.mutate.bind(this);\n\t\tthis.train = this.train.bind(this);\n\t\tthis.printParameters = this.printParameters.bind(this);\n\t\tthis.reset = this.reset.bind(this);\n\t\tthis.resetParameters = this.resetParameters.bind(this);\n\t\tthis.asyncPause = this.asyncPause.bind(this);\n\t\tthis.changeModelLr = this.changeModelLr.bind(this);\n\t\tthis.anim = this.anim.bind(this);\n\t\tthis.randExampleEpoch = this.randExampleEpoch.bind(this);\n\t}\n\t/* \n\t\tEntire Neural network process along with random generation of single training\t\t\n\t\texample.\n\t*/\n\trandExampleEpoch(X, y, weightsData, biasesData, shape, lr) {\n\t\tconst randomInput = tools.getRandomInt(this.state.X.length);\n\t\tconst singleInputExample = X[randomInput];\n\t\tconst singleLabelExample = y[randomInput];\n\n\t\tlet formattedWeights = tools.formatWeightArray(weightsData, shape);\n\t\tlet nn = new NeuralNetwork(shape, formattedWeights, biasesData);\n\t\tlet clone = new NeuralNetwork(shape, formattedWeights, biasesData);\n\n\t\t/* This is the actual neural network changes in animation */\n\t\tnn.forward(singleInputExample, singleLabelExample);\n\t\tnn.backward();\n\n\t\t/* This is the clone that goes one more forward to get the projected changes */\n\t\tclone.forward(singleInputExample, singleLabelExample);\n\t\tclone.backward();\n\t\tclone.update(lr);\n\t\tclone.forward(singleInputExample, singleLabelExample);\n\n\t\t/* Store outputs to variables */\n\t\tconst newOutput = clone.yhat;\n\t\tconst updatedLoss = clone.loss.output;\n\t\tconst lossSavings = updatedLoss;\n\t\tconst lossDifference = nn.loss.output - updatedLoss;\n\n\t\t/* computes the predictions for all values form the copy */\n\t\tconst forwardAll = (inputArray) => {\n\t\t\t/* Here we return an array of all the inputs fed forward */\n\t\t\tconst inputArrayLength = inputArray.length;\n\t\t\tlet outputArray = new Array(inputArrayLength);\n\n\t\t\tfor (let i = 0; i < inputArrayLength; i++) {\n\t\t\t\tclone.forward(inputArray[i], 0); //we dont care about loss here so the input label doesnt matter\n\t\t\t\toutputArray[i] = clone.yhat; //store all outputs to the outputArray\n\t\t\t}\n\n\t\t\treturn outputArray; //return the output array to be used elsewhere\n\t\t};\n\t\tconst potential = forwardAll(X);\n\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tminiNN: nn,\n\t\t\tpotentialYhat: potential,\n\t\t\tmode: true,\n\t\t\tlossSavings,\n\t\t\tlossDifference,\n\t\t\tsingleInputIndex: randomInput,\n\t\t\tsingleInputExample,\n\t\t\tsingleLabelExample,\n\t\t\tnewOutput,\n\t\t\tcontrols: {\n\t\t\t\t...this.state.controls,\n\t\t\t\tplaying: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t/*\n\t\tControls the logic of the animation: keyframe animations controller\t\n\t*/\n\tasync anim() {\n\t\tconst { shape } = this.state;\n\t\tconst speed = 750;\n\t\t/* All anim needs to know is the shape */\n\t\tconst timer = (ms) => new Promise((res) => setTimeout(res, ms));\n\n\t\t/* animate the forward pass */\n\t\tthis.setState({\n\t\t\tsubEpoch: \"forward\",\n\t\t\tstatus: \"reset\",\n\t\t\tisAnimating: true,\n\t\t\tlossChange: 0,\n\t\t\tcpyEpoch: this.state.epoch,\n\t\t\tkeyFrameScatter: 0,\n\t\t});\n\t\tfor (let i = 0; i < shape.length; i++) {\n\t\t\tthis.setState({ keyFrameLayer: i });\n\t\t\tif (i === shape.length - 1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tawait timer(speed);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tkeyFrameLoss: 1,\n\t\t\tkeyFrameScatter: 1,\n\t\t\tstatus: \"real\",\n\t\t\tshouldNotRender: true,\n\t\t});\n\n\t\tawait timer(speed);\n\t\tthis.setState({ keyFrameLoss: 2, shouldNotRender: true });\n\t\tawait timer(speed);\n\t\tthis.setState({ keyFrameLoss: 3 });\n\n\t\t//we update the losschange\n\t\tthis.setState({\n\t\t\tlossChange: this.state.miniNN.loss.output,\n\t\t});\n\t\tthis.setState({ subEpoch: \"backward\", keyFrameScatter: 2 });\n\n\t\tfor (let i = shape.length - 1; i >= 0; i--) {\n\t\t\tthis.setState({ keyFrameLayer: i });\n\t\t\tawait timer(speed);\n\t\t}\n\t\tthis.setState({ keyFrameLayer: -1 });\n\n\t\tawait timer(speed);\n\t\tthis.setState({ subEpoch: \"transition\" });\n\n\t\tawait timer(1000);\n\t\tthis.setState({ subEpoch: \"update\", shouldNotRender: false });\n\t\tawait timer(1000);\n\t\t//we update the new loss\n\t\tthis.setState({\n\t\t\tisAnimating: false,\n\t\t\tlossChange: this.state.lossSavings,\n\t\t\tkeyFrameScatter: 4,\n\t\t\tcpyEpoch: this.state.cpyEpoch + 1,\n\t\t\tstatus: \"pred\",\n\t\t});\n\t}\n\n\t/* \n\t\tinitialize the data for drawing the entire neural network\n\t\t@param shape\t\n\t*/\n\tinitNeuralNetwork(shape) {\n\t\tconst { controls } = this.state;\n\t\tconst { playing } = controls;\n\n\t\t// If we are not training the tensorflow neural network\n\t\tif (!playing) {\n\t\t\t/* START SETUP */\n\t\t\tconst squareWidth = 32;\n\t\t\tconst xConstraints = { domain: [0, 100], range: [50, 750] };\n\t\t\tconst yConstraints = { domain: [0, 100], range: [500, 0] };\n\t\t\t//prettier-ignore\n\t\t\tconst {xScale, yScale} = draw.generateLinearScale(xConstraints,yConstraints);\n\t\t\t// Create the starting point and the stopping point for the neural network\n\t\t\tconst start = { x: 71 - squareWidth / 2, y: 250 - squareWidth / 2 };\n\t\t\tconst stop = { x: 750 - squareWidth / 2, y: 250 - squareWidth / 2 };\n\t\t\t// generate function to create paths from (x,y) to (x,y)\n\t\t\tconst linksGenerator = draw.generateLink(squareWidth / 2);\n\t\t\t// how the layers are proptioned compared to the linear scale\n\t\t\tconst layerProportion = [0, 25, 50, 75, 0];\n\t\t\t/* END SETUP */\n\n\t\t\t/* START GENERATING THE GRAPH */\n\t\t\tconst shapedNeurons = draw.generateNeuronPlacement(\n\t\t\t\tshape,\n\t\t\t\tlayerProportion,\n\t\t\t\tsquareWidth,\n\t\t\t\tstart,\n\t\t\t\tstop,\n\t\t\t\txScale,\n\t\t\t\tyScale\n\t\t\t);\n\t\t\tconst layerLinks = draw.generateLinksPlacement(\n\t\t\t\tshape,\n\t\t\t\tshapedNeurons,\n\t\t\t\tlinksGenerator\n\t\t\t);\n\t\t\t/* END GENERATING THE GRAPH */\n\n\t\t\tshapedNeurons.splice(0, 1); //in order for it to be lined up with the nn model\n\t\t\t//update the state of the links and rectangles to be rendered\n\t\t\tthis.setState({\n\t\t\t\tshapedLinks: layerLinks,\n\t\t\t\tshapedRects: shapedNeurons,\n\t\t\t});\n\t\t} else if (playing) {\n\t\t\tconst { weightsData, shape } = this.state;\n\t\t\t//update the weights to be rendered\n\t\t\tconst shapedWeights = tools.formatWeightArray(weightsData, shape);\n\t\t\tthis.setState({ shapedWeights });\n\t\t}\n\t}\n\n\t/* \n\t\tchanges the curent learning rate, tidy in case of memory leak here\t\n\t\t@param lrChange\n\t*/\n\tchangeModelLr(lrChange) {\n\t\ttf.tidy(() => {\n\t\t\tthis.setState({ lr: lrChange });\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\t/* \n\t\truns the training and switches the playing the reflect playing\t\n\t*/\n\tasync run() {\n\t\tconst playing = !this.state.controls.playing;\n\t\tthis.mutate(\"controls\", \"playing\", playing);\n\t\tif (playing === true) {\n\t\t\tawait this.train(this.state.X, this.state.y);\n\t\t}\n\t}\n\n\t/* \n\t\tmutate helper method\t\n\t\t@TODO remove this from the program\t\n\t*/\n\tmutate(key, subkey, value) {\n\t\t/* copy of the state */\n\t\ttf.tidy(() => {\n\t\t\tlet state = { ...this.state };\n\t\t\t/* If this.state.key.subkey exists */\n\t\t\tif (key in state && subkey in state[key]) {\n\t\t\t\t/* Mutate the state */\n\t\t\t\tstate[key][subkey] = value;\n\t\t\t\tthis.setState({ state });\n\t\t\t} else {\n\t\t\t\tconsole.error(\"Could not be found in state\");\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\t/* \n\t\tadds configurations to sequential model\n\t\t@param model : tfjs sequential \n\t*/\n\taddModel(model) {\n\t\treturn tf.tidy(() => {\n\t\t\tlet shape = this.state.shape;\n\t\t\tmodel.add(\n\t\t\t\ttf.layers.dense({\n\t\t\t\t\tinputShape: [1],\n\t\t\t\t\tunits: shape[1],\n\t\t\t\t\tactivation: \"relu\",\n\t\t\t\t\tuseBias: true,\n\t\t\t\t})\n\t\t\t);\n\t\t\tfor (let layer = 2; layer < shape.length - 1; layer++) {\n\t\t\t\tmodel.add(\n\t\t\t\t\ttf.layers.dense({\n\t\t\t\t\t\tunits: shape[layer],\n\t\t\t\t\t\tactivation: \"relu\",\n\t\t\t\t\t\tuseBias: true,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t\tmodel.add(\n\t\t\t\ttf.layers.dense({\n\t\t\t\t\tunits: 1,\n\t\t\t\t\tactivation: \"linear\",\n\t\t\t\t\tuseBias: true,\n\t\t\t\t})\n\t\t\t);\n\n\t\t\treturn model;\n\t\t});\n\t}\n\n\t/* \n\t\tcompiles the model with learning rate given\t\n\t\t@lr : learning rate\t\n\t*/\n\tmodelCompile(lr) {\n\t\tlet model = tf.sequential();\n\t\tthis.addModel(model);\n\t\tmodel.compile({\n\t\t\toptimizer: tf.train.sgd(lr),\n\t\t\tloss: \"meanSquaredError\",\n\t\t});\n\t\treturn model;\n\t}\n\n\t/* \n\t\ttrains the model on one epoch and one input\n\t\t@param X, y\n\t*/\n\tasync train(X, y) {\n\t\t/* START SETUP */\n\t\tconst XTensor = tf.tidy(() => {\n\t\t\treturn tf.tensor(X);\n\t\t});\n\t\tconst yTensor = tf.tidy(() => {\n\t\t\treturn tf.tensor(y);\n\t\t});\n\t\tconst model = tf.tidy(() => {\n\t\t\treturn this.state.tensorFlowNN;\n\t\t});\n\t\tconst timer = (ms) => new Promise((res) => setTimeout(res, ms));\n\t\t/* START SETUP */\n\n\t\t///* Until broken by user */\n\t\tlet play = this.state.controls.playing;\n\t\t////let epoch = 0;\n\t\twhile (play !== false) {\n\t\t\tthis.setState({ stopRender: true });\n\t\t\tconst { playing, speed } = this.state.controls;\n\t\t\tplay = playing;\n\t\t\tawait model.fit(XTensor, yTensor, {\n\t\t\t\tepochs: 1,\n\t\t\t\tbatchSize: 1,\n\t\t\t});\n\t\t\ttf.tidy(() => {\n\t\t\t\tlet yhatTensor = model.predict(XTensor);\n\t\t\t\tlet yhat = tools.tensorToArray(yhatTensor);\n\t\t\t\tlet loss = tf.losses.meanSquaredError(y, yhat).dataSync()[0];\n\t\t\t\tthis.printParameters(model, loss, yhat, this.state.epoch + 1);\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t\tthis.setState({ stopRender: false });\n\t\t\tawait timer(speed);\n\t\t}\n\t\tthis.setState({ tensorFlowNN: model });\n\t\ttf.dispose(XTensor);\n\t\ttf.dispose(yTensor);\n\t}\n\n\t/* \n\t\tgenerate the data in tensor form \t\n\t\t@param eqn, scaled, volume\t\n\t*/\n\tasync genTensorData(eqn, scaled, volume) {\n\t\tawait tf.ready();\n\t\ttf.tidy(() => {\n\t\t\tconst XTensor = tf.linspace(\n\t\t\t\t-this.state.scale,\n\t\t\t\tthis.state.scale,\n\t\t\t\tvolume\n\t\t\t);\n\t\t\tconst yTensor = tf.mul(eqn(XTensor), scaled);\n\t\t\tconst yhatTensor = tf.zerosLike(XTensor);\n\t\t\tconst X = tools.tensorToArray(XTensor);\n\t\t\tconst y = tools.tensorToArray(yTensor);\n\t\t\tconst yhat = tools.tensorToArray(yhatTensor);\n\n\t\t\tthis.setState({\n\t\t\t\tX,\n\t\t\t\ty,\n\t\t\t\tyhat,\n\t\t\t});\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\t/* \n\t\tformats and updates the state for bias and weights from tfjs model \n\t\tin an effort to eventually print them / use them for svg\n\t\t@param model, loss, yhat, epoch\t\n\t*/\n\tprintParameters(model, loss, yhat, epoch) {\n\t\tlet weightsData = [];\n\t\tlet biasesData = [];\n\t\tfor (let i = 0; i < model.getWeights().length; i++) {\n\t\t\t(i % 2 === 0 ? weightsData : biasesData).push(\n\t\t\t\tArray.from(model.getWeights()[i].dataSync())\n\t\t\t);\n\t\t}\n\t\tconst lossArray = [...this.state.lossArray, loss];\n\t\tthis.setState({\n\t\t\tbiasesData,\n\t\t\tweightsData,\n\t\t\tloss,\n\t\t\tyhat,\n\t\t\tepoch,\n\t\t\tlossArray,\n\t\t});\n\t\tthis.initNeuralNetwork(this.state.shape);\n\t}\n\n\t/* \n\t\tsimply to pause\n\t*/\n\tasync asyncPause() {\n\t\tthis.setState({ controls: { ...this.state.controls, playing: false } });\n\t}\n\n\t/* \n\t\tresets all the parameters\n\t\t@param scale\t\n\t*/\n\tasync resetParameters(scale) {\n\t\ttf.dispose(this.state.tensorFlowNN);\n\t\tconst { curve } = this.state;\n\t\tlet eqn;\n\t\tlet optimizer;\n\t\ttf.tidy(() => {\n\t\t\tif (curve === \"sin\") {\n\t\t\t\teqn = tf.sin;\n\t\t\t} else if (curve === \"tanh\") {\n\t\t\t\teqn = tf.tanh;\n\t\t\t} else if (curve === \"cos\") {\n\t\t\t\teqn = tf.cos;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t});\n\t\tawait this.genTensorData(eqn, scale, 50);\n\t\tconst model = tf.tidy(() => {\n\t\t\treturn this.modelCompile(this.state.lr);\n\t\t});\n\t\tthis.setState({\n\t\t\tepoch: 0,\n\t\t\tloss: null,\n\t\t\tminiNN: null,\n\t\t\ttensorFlowNN: model,\n\t\t\tshapedWeights: [],\n\t\t\tlossArray: [],\n\t\t});\n\t\ttf.dispose(optimizer);\n\t}\n\n\t/* \n\t\tfull reset\t\n\t\tresets the paramters and pauses \n\t*/\n\tasync reset(scale) {\n\t\tthis.asyncPause();\n\t\tthis.resetParameters(scale);\n\t}\n\n\t/* \n\t\tused a linear equation to get the zoom for the svg\n\t\t@param clientWidth\n\t\t@TODO figure out how to do this more dynamically\t\n\t*/\n\tcorrectZoom(width) {\n\t\tconst zoomFactor = (1 - 0.75) / (1387 - 913);\n\t\tconst zoomShift = 0.75 - zoomFactor * 913;\n\t\tconst zoom = Math.min(1, zoomFactor * width + zoomShift - 0.2);\n\t\treturn zoom;\n\t}\n\n\tasync componentDidMount() {\n\t\t/* initialize the everything on mount */\n\t\ttf.setBackend(\"cpu\"); //for some reason webgl not working on safari\n\t\tthis.genTensorData(tf.sin, this.state.scale, 50);\n\t\tthis.initNeuralNetwork(this.state.shape);\n\t\tconst model = tf.tidy(() => {\n\t\t\treturn this.modelCompile(this.state.lr);\n\t\t});\n\t\tconst width = document.body.clientWidth;\n\t\tconst zoom = this.correctZoom(width);\n\t\tthis.setState({ tensorFlowNN: model, zoom });\n\t}\n\tshouldComponentUpdate() {\n\t\tif (this.state.stopRender) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\trender() {\n\t\t/* Destructure State*/\n\t\tconst {\n\t\t\tX,\n\t\t\ty,\n\t\t\tshape,\n\t\t\tscale,\n\t\t\tminiNN,\n\t\t\tweightsData,\n\t\t\tbiasesData,\n\t\t\tyhat,\n\t\t\tmode,\n\t\t\tepoch,\n\t\t\tcurve,\n\t\t\tlr,\n\t\t\tloss,\n\t\t\tcontrols,\n\t\t\tshapedWeights,\n\t\t\tshapedLinks,\n\t\t\tshapedRects,\n\t\t\tkeyFrameLayer,\n\t\t\tkeyFrameLoss,\n\t\t\tsubEpoch,\n\t\t\tisAnimating,\n\t\t\tsingleInputExample,\n\t\t\tsingleLabelExample,\n\t\t\tlossSavings,\n\t\t\tcontrolCenterHelp,\n\t\t\tcustomizationHelp,\n\t\t\tneuralNetworkHelp,\n\t\t\tlossChange,\n\t\t\tkeyFrameScatter,\n\t\t\tzoom,\n\t\t} = this.state;\n\t\tconst { playing, speed } = controls;\n\n\t\tconst lrs = [0.0001, 0.001, 0.003, 0.005];\n\t\tconst dataSets = [\n\t\t\t{ label: \"sin\", eqn: tf.sin, scale: 5 },\n\t\t\t{ label: \"cos\", eqn: tf.cos, scale: 5 },\n\t\t\t{ label: \"tanh\", eqn: tf.tanh, scale: 5 },\n\t\t];\n\n\t\t/* Destructure render */\n\t\tconst PlayButtonClick = (\n\t\t\t// eslint-disable-next-line\n\t\t\t<Fab\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: !this.state.controls.playing\n\t\t\t\t\t\t? \"#175676\"\n\t\t\t\t\t\t: \"#D62839\",\n\t\t\t\t\tcolor: \"white\",\n\t\t\t\t}}\n\t\t\t\tdisableTouchRipple\n\t\t\t\tonClick={() => this.run()}\n\t\t\t>\n\t\t\t\t{!playing ? <PlayArrow /> : <Stop />}\n\t\t\t</Fab>\n\t\t);\n\t\tconst controlsReg = (\n\t\t\t<CardActions>\n\t\t\t\t<Tooltip title=\"reset\" arrow>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tdisabled={playing}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Replay />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t\t{PlayButtonClick}\n\t\t\t\t<Tooltip title=\"speed up\" arrow>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: speed === 0 ? \"#FFC006\" : \"grey\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tcontrols: {\n\t\t\t\t\t\t\t\t\t...controls,\n\t\t\t\t\t\t\t\t\tspeed: speed === 0 ? 100 : 0,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FastForward />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t</CardActions>\n\t\t);\n\t\tconst controlsBackProp = (\n\t\t\t<Box marginTop={2}>\n\t\t\t\t<CardActions>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\tawait this.anim();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdisabled={isAnimating}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: isAnimating ? \"lightgrey\" : \"black\",\n\n\t\t\t\t\t\t\tborderColor: isAnimating ? \"lightgrey\" : \"black\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t>\n\t\t\t\t\t\tREPLAY\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\tthis.randExampleEpoch(\n\t\t\t\t\t\t\t\tX,\n\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\tweightsData,\n\t\t\t\t\t\t\t\tbiasesData,\n\t\t\t\t\t\t\t\tshape,\n\t\t\t\t\t\t\t\tlr,\n\t\t\t\t\t\t\t\tmode\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait this.anim();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: isAnimating ? \"lightgrey\" : \"#4BA3C3\",\n\t\t\t\t\t\t\tborderColor: isAnimating ? \"lightgrey\" : \"#4BA3C3\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdisabled={isAnimating}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t>\n\t\t\t\t\t\tNew Training Example\n\t\t\t\t\t</Button>\n\t\t\t\t</CardActions>\n\t\t\t</Box>\n\t\t);\n\t\tconst controlCenter = (\n\t\t\t<Box width={400} marginLeft={10}>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: \"#4BA3C3\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{\"Control Center\"}\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tstyle={{ color: \"orange\" }}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.setState({ controlCenterHelp: true });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Help />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<div></div>\n\n\t\t\t\t\t\t<Typography variant=\"h4\">\n\t\t\t\t\t\t\tEPOCH: {mode ? this.state.cpyEpoch : epoch}\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t{mode ? (\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: \"orange\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tPhase:\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\t\t\tsubEpoch === \"forward\"\n\t\t\t\t\t\t\t\t\t\t\t\t? \"orange\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"grey\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tForward\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\t\t\tsubEpoch === \"backward\"\n\t\t\t\t\t\t\t\t\t\t\t\t? \"orange\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"grey\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tBackward\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\t\t\tsubEpoch === \"update\"\n\t\t\t\t\t\t\t\t\t\t\t\t? \"orange\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"grey\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t{loss == null || mode\n\t\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t\t: `Loss: ${loss.toPrecision(6)}`}\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t<Typography variant=\"h6\" style={{ color: \"#4BA3C3\" }}>\n\t\t\t\t\t\t\t{mode\n\t\t\t\t\t\t\t\t? `Training Example: (${singleInputExample.toPrecision(\n\t\t\t\t\t\t\t\t\t\t3\n\t\t\t\t\t\t\t\t  )}, ${singleLabelExample.toPrecision(3)})`\n\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant=\"h5\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\tkeyFrameScatter < 3 ? \"black\" : \"orangered\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{mode && lossChange !== 0\n\t\t\t\t\t\t\t\t? keyFrameScatter < 3\n\t\t\t\t\t\t\t\t\t? \"loss: \"\n\t\t\t\t\t\t\t\t\t: \"new loss: \"\n\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t\t{mode && lossChange !== 0 ? (\n\t\t\t\t\t\t\t\t<AnimatedNumber\n\t\t\t\t\t\t\t\t\tvalue={lossChange}\n\t\t\t\t\t\t\t\t\tformatValue={(value) =>\n\t\t\t\t\t\t\t\t\t\tvalue.toPrecision(6)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tduration={750}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography style={{ color: \"grey\" }} variant=\"caption\">\n\t\t\t\t\t\t\t{keyFrameScatter > 3 && mode\n\t\t\t\t\t\t\t\t? \"loss decrease: \"\n\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t\t{keyFrameScatter > 3 && mode ? (\n\t\t\t\t\t\t\t\t<AnimatedNumber\n\t\t\t\t\t\t\t\t\tvalue={this.state.lossDifference}\n\t\t\t\t\t\t\t\t\tformatValue={(value) =>\n\t\t\t\t\t\t\t\t\t\tvalue.toPrecision(6)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tduration={750}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t{mode ? controlsBackProp : controlsReg}\n\n\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t{loss == null || isAnimating ? (\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: \"#175676\",\n\t\t\t\t\t\t\t\t\t\tborderColor: \"#175676\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\tif (mode) {\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\tsubEpoch: \"\",\n\t\t\t\t\t\t\t\t\t\t\t\tmode: !mode,\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tthis.run();\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tthis.randExampleEpoch(\n\t\t\t\t\t\t\t\t\t\t\t\tX,\n\t\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\t\tweightsData,\n\t\t\t\t\t\t\t\t\t\t\t\tbiasesData,\n\t\t\t\t\t\t\t\t\t\t\t\tshape,\n\t\t\t\t\t\t\t\t\t\t\t\tlr,\n\t\t\t\t\t\t\t\t\t\t\t\tmode\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tawait this.anim();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{mode ? <ArrowBackIos /> : \"\"}\n\t\t\t\t\t\t\t\t\t{mode\n\t\t\t\t\t\t\t\t\t\t? \"go back to fitting\"\n\t\t\t\t\t\t\t\t\t\t: `Click to Animate epoch ${epoch}`}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\n\t\t\t\t<Box marginTop={5}>\n\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: \"#4BA3C3\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{\"Customization\"}\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"orange\" }}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\tcustomizationHelp: true,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Help />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t\t\t\tLearning Rate\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t{lrs.map((num, i) => (\n\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\tdisabled={playing || mode}\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tlabel={`${num}`}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\t\t\t\tlr === num ? \"white\" : \"grey\",\n\t\t\t\t\t\t\t\t\t\t\tbackground:\n\t\t\t\t\t\t\t\t\t\t\t\tlr === num\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"#175676\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"lightgrey\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\ttf.tidy(() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.changeModelLr(num);\n\t\t\t\t\t\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Chip>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t\t\t\tData Set\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t{dataSets.map((item, i) => (\n\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\tdisabled={playing || mode}\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tlabel={item.label}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\t\t\t\tcurve === item.label\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"white\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"grey\",\n\t\t\t\t\t\t\t\t\t\t\tbackground:\n\t\t\t\t\t\t\t\t\t\t\t\tcurve === item.label\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"#175676\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"lightgrey\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\tshape,\n\t\t\t\t\t\t\t\t\t\t\t\tcurve: item.label,\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t\t\t\t\t\ttf.tidy(() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.genTensorData(\n\t\t\t\t\t\t\t\t\t\t\t\t\titem.eqn,\n\t\t\t\t\t\t\t\t\t\t\t\t\titem.scale,\n\t\t\t\t\t\t\t\t\t\t\t\t\t50\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Chip>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\">Layer</Typography>\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={playing || mode}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tlet a = shape;\n\t\t\t\t\t\t\t\t\t\tif (a.length < 5) {\n\t\t\t\t\t\t\t\t\t\t\ta[a.length - 1] = 8;\n\t\t\t\t\t\t\t\t\t\t\ta.push(1);\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ shape: a });\n\t\t\t\t\t\t\t\t\t\t\tthis.initNeuralNetwork(a);\n\t\t\t\t\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t+\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={playing || mode}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tlet a = shape;\n\t\t\t\t\t\t\t\t\t\tif (a.length > 3) {\n\t\t\t\t\t\t\t\t\t\t\ta.splice(a.length - 2, 1);\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ shape: a });\n\t\t\t\t\t\t\t\t\t\t\tthis.initNeuralNetwork(a);\n\t\t\t\t\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t–\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t\tconst scatter = (\n\t\t\t<Box marginLeft={10}>\n\t\t\t\t<Box>\n\t\t\t\t\t{mode ? (\n\t\t\t\t\t\t<AnimatedScatterPlot\n\t\t\t\t\t\t\twidth={300}\n\t\t\t\t\t\t\theight={300}\n\t\t\t\t\t\t\tpadding={0}\n\t\t\t\t\t\t\tstart={-scale}\n\t\t\t\t\t\t\tstop={scale}\n\t\t\t\t\t\t\tX={X}\n\t\t\t\t\t\t\ty={y}\n\t\t\t\t\t\t\tyhat={yhat}\n\t\t\t\t\t\t\tpotential={this.state.potentialYhat}\n\t\t\t\t\t\t\tid={2}\n\t\t\t\t\t\t\tselect={this.state.singleInputIndex}\n\t\t\t\t\t\t\ttimes={this.state.keyFrameScatter}\n\t\t\t\t\t\t\tshouldNotRender={this.state.shouldNotRender}\n\t\t\t\t\t\t\tstatus={this.state.status}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<ScatterPlot\n\t\t\t\t\t\t\twidth={300}\n\t\t\t\t\t\t\theight={300}\n\t\t\t\t\t\t\tpadding={0}\n\t\t\t\t\t\t\tstart={-scale}\n\t\t\t\t\t\t\tstop={scale}\n\t\t\t\t\t\t\tX={X}\n\t\t\t\t\t\t\ty={y}\n\t\t\t\t\t\t\tyhat={yhat}\n\t\t\t\t\t\t\tid={1}\n\t\t\t\t\t\t\tduration={200}\n\t\t\t\t\t\t\tselect={-1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Box>\n\t\t\t\t<Box marginTop={10}>\n\t\t\t\t\t<Loss lossArray={this.state.lossArray} duration={100} />\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t\tconst neuralNetwork = (\n\t\t\t<Box>\n\t\t\t\t<NeuralNetworkComponent\n\t\t\t\t\tminiNN={miniNN}\n\t\t\t\t\tinput={singleInputExample}\n\t\t\t\t\tlabel={singleLabelExample}\n\t\t\t\t\tshapedWeights={shapedWeights}\n\t\t\t\t\tshapedLinks={shapedLinks}\n\t\t\t\t\tshapedRects={shapedRects}\n\t\t\t\t\tshape={shape}\n\t\t\t\t\tbiases={biasesData}\n\t\t\t\t\tplaying={\n\t\t\t\t\t\tplaying\n\t\t\t\t\t\t\t? speed === 0\n\t\t\t\t\t\t\t\t? \"edgeForward\"\n\t\t\t\t\t\t\t\t: \"edgeSlowed\"\n\t\t\t\t\t\t\t: \"edgePaused\"\n\t\t\t\t\t}\n\t\t\t\t\tshow={playing}\n\t\t\t\t\tmode={mode}\n\t\t\t\t\tbackward={this.state.direction}\n\t\t\t\t\tkeyFrameLayer={keyFrameLayer}\n\t\t\t\t\tkeyFrameLoss={keyFrameLoss}\n\t\t\t\t\tsubEpoch={subEpoch}\n\t\t\t\t\tlossSavings={lossSavings}\n\t\t\t\t\tisAnimating={isAnimating}\n\t\t\t\t\tlr={lr}\n\t\t\t\t></NeuralNetworkComponent>\n\t\t\t\t<IconButton\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: \"orange\",\n\t\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\t\tbottom: \"500px\",\n\t\t\t\t\t\tleft: \"100px\",\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tneuralNetworkHelp: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Help />\n\t\t\t\t</IconButton>\n\t\t\t</Box>\n\t\t);\n\n\t\tconst dialogs = (\n\t\t\t<div>\n\t\t\t\t<Dialog\n\t\t\t\t\tPaperProps={{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tbackgroundColor: \"#F7F7F7\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\topen={controlCenterHelp}\n\t\t\t\t>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.setState({ controlCenterHelp: false });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Close />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</DialogActions>\n\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t<Box marginBottom={1}>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\t\t<b>Getting Stuck?</b>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\tPress{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t<Fab\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tbackground: \"#175676\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<PlayArrow fontSize=\"small\" />\n\t\t\t\t\t\t\t\t\t\t\t</Fab>{\" \"}\n\t\t\t\t\t\t\t\t\t\t\tto start training and fitting the\n\t\t\t\t\t\t\t\t\t\t\tcurve to the data\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\tThen press{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tborderColor: \"#175676\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#175676\",\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tClick to animate epoch #\n\t\t\t\t\t\t\t\t\t\t\t</Button>{\" \"}\n\t\t\t\t\t\t\t\t\t\t\tto see forward propagation,{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t<b>backward propagation</b>, and\n\t\t\t\t\t\t\t\t\t\t\tupdate animation at the epoch #.\n\t\t\t\t\t\t\t\t\t\t\tWhile in this mode, you will have\n\t\t\t\t\t\t\t\t\t\t\taccess to the control center{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t<b>below</b>\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"epochMode\"\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={epochModePNG}\n\t\t\t\t\t\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\t\t\t\t\t></img>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\tTo go back to training and fitting\n\t\t\t\t\t\t\t\t\t\t\tthe curve to the data click{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tborderColor: \"#175676\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#175676\",\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<ArrowBackIos /> Go back to\n\t\t\t\t\t\t\t\t\t\t\t\tfitting\n\t\t\t\t\t\t\t\t\t\t\t</Button>{\" \"}\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t</Dialog>\n\t\t\t\t<Dialog\n\t\t\t\t\tPaperProps={{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tbackgroundColor: \"#F7F7F7\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\topen={customizationHelp}\n\t\t\t\t>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.setState({ customizationHelp: false });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Close />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</DialogActions>\n\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t<Box marginBottom={5}>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\t\t<b>What you can't and can change</b>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t\t\t<b>Fixed</b>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\t\t\t\tBy default, this Neural Network stays fixed\n\t\t\t\t\t\t\t\t\twith\n\t\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\tone input neuron, at least one\n\t\t\t\t\t\t\t\t\t\t\thidden layer of eight ReLU neurons,\n\t\t\t\t\t\t\t\t\t\t\tand an output layer with one linear\n\t\t\t\t\t\t\t\t\t\t\tneuron.\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\tStochastic Gradient Descent (one\n\t\t\t\t\t\t\t\t\t\t\ttraining example per epoch)\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t\t\t<b>Variable</b>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\t\t\t\tYou have the ability to change\n\t\t\t\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\tLearning Rate (0.0001, 0.001, 0.003,\n\t\t\t\t\t\t\t\t\t\t\tor 0.005)\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\tData set (sine wave, cosine wave, or\n\t\t\t\t\t\t\t\t\t\t\ttanh curve)\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\tHidden layer neurons (min 1 and max\n\t\t\t\t\t\t\t\t\t\t\t3)\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t</Dialog>\n\n\t\t\t\t<Dialog\n\t\t\t\t\tPaperProps={{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tbackgroundColor: \"#FAFAFA\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\topen={neuralNetworkHelp}\n\t\t\t\t>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.setState({ neuralNetworkHelp: false });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Close />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</DialogActions>\n\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<img src={Summary} alt=\"summary\" width=\"400\" />\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t<Box marginBottom={5}>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t\t\t<b>Neural Network</b>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\t\t\t\tEach square is a neuron in the neural\n\t\t\t\t\t\t\t\t\tnetwork. To see what activation function the\n\t\t\t\t\t\t\t\t\tneuron has, check the key located right\n\t\t\t\t\t\t\t\t\tabove the neural network.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={singleSummarySVG}\n\t\t\t\t\t\t\talt=\"singleSummary\"\n\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t<Box marginBottom={5}>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t\t\t<b>Single EPOCH mode</b>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\t\t\t\tDuring a single epoch after clicking{\" \"}\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tborderColor: \"#175676\",\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"#175676\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tClick to animate epoch #\n\t\t\t\t\t\t\t\t\t</Button>{\" \"}\n\t\t\t\t\t\t\t\t\t, each arrow will represent the direction to\n\t\t\t\t\t\t\t\t\tnudge the output to lower loss.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\t\t\t\tThe fill color shows the activation output,\n\t\t\t\t\t\t\t\t\tbrighter is more active.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t);\n\n\t\treturn (\n\t\t\t<div id=\"app\">\n\t\t\t\t<Card\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackground: \"#FAFAFA\",\n\t\t\t\t\t\toutlineColor: \"white\",\n\t\t\t\t\t\tpaddingBottom: \"1em\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<CardContent\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttransform: `scale(${zoom})`,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t<Box marginRight={90}>\n\t\t\t\t\t\t\t\t<img src={keySVG} alt=\"key\"></img>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<Typography variant=\"h2\">\n\t\t\t\t\t\t\t\t\t<b>EPOCH Tool</b>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tclassName=\"regular\"\n\t\t\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\t\tmarginTop={2}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{neuralNetwork}\n\t\t\t\t\t\t\t{scatter}\n\t\t\t\t\t\t\t{controlCenter}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\t\t\t\t{dialogs}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default EPOCHTool;\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis component displays all the acknowledgements\n*/\n\nimport React from \"react\";\nimport { Typography, Button, Box, IconButton } from \"@material-ui/core\";\nimport { GitHub } from \"@material-ui/icons\";\nimport { $ } from \"./Typeset\";\n\nconst link = (href, content, isPerson) => (\n\t<Button\n\t\tstyle={{ color: isPerson ? \"#FFA500\" : \"#155676\" }}\n\t\thref={href}\n\t\ttarget=\"_blank\"\n\t\trel=\"noopener noreferrer\"\n\t>\n\t\t{content}\n\t</Button>\n);\n\nconst Acknowledge = () => (\n\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t<Box width=\"60%\" marginTop={4}>\n\t\t\t<Typography variant=\"h3\">\n\t\t\t\t<b>Acknowledgements</b>\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\t{link(\n\t\t\t\t\t\"https://playground.tensorflow.org/\",\n\t\t\t\t\t\"TensorFlow Playground\",\n\t\t\t\t\tfalse\n\t\t\t\t)}\n\t\t\t\tby\n\t\t\t\t{link(\"https://smilkov.com/\", \"Daniel Smilkov\", true)}\n\t\t\t\t{link(\"http://shancarter.com/\", \"Shan Carter\", true)}\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tInspiration for the representation of the neural network\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tAdapted d3 code for the loss graph’s and best fit graphs\n\t\t\t\t\t\taxis scaling\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>Adapted css code for the links keyframe animation</li>\n\t\t\t\t</ul>\n\t\t\t</Typography>\n\t\t\t<br />\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\t{link(\n\t\t\t\t\t\"https://www.youtube.com/watch?v=Ilg3gGewQ5U\",\n\t\t\t\t\t\"What is backpropagation really doing?\",\n\t\t\t\t\tfalse\n\t\t\t\t)}\n\t\t\t\tby\n\t\t\t\t{link(\"https://www.3blue1brown.com/\", \"3Blue1Brown\", true)}\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tInspiration to use arrows to represent where to nudge\n\t\t\t\t\t\toutputs to lower loss\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>Inspiration for weights color scheme</li>\n\t\t\t\t</ul>\n\t\t\t</Typography>\n\t\t\t<br />\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\t{link(\n\t\t\t\t\t\"https://poloclub.github.io/cnn-explainer/\",\n\t\t\t\t\t\"CNN explainer\",\n\t\t\t\t\tfalse\n\t\t\t\t)}\n\t\t\t\tby\n\t\t\t\t{link(\"https://zijie.wang/\", \"Jay Wang\", true)}\n\t\t\t\t{link(\n\t\t\t\t\t\"https://www.linkedin.com/in/robert-turko/\",\n\t\t\t\t\t\"Robert Turko\",\n\t\t\t\t\ttrue\n\t\t\t\t)}\n\t\t\t\t{link(\"https://oshaikh.com/\", \"Omar Shaikh\", true)}\n\t\t\t\t{link(\"https://haekyu.com/\", \"Haekyu Park\", true)}\n\t\t\t\t{link(\"http://nilakshdas.com/\", \"Nilaksh Das\", true)}\n\t\t\t\t{link(\"https://fredhohman.com/\", \"Fred Hohman\", true)}\n\t\t\t\t{link(\"https://minsuk.com/\", \"Minsuk Kahng\", true)}\n\t\t\t\t{link(\"https://www.cc.gatech.edu/~dchau/\", \"Polo Chau\", true)}\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Model for what good animation look like</li>\n\t\t\t\t\t<li>Inspiration for the article format with components</li>\n\t\t\t\t\t<li>Inspiration for the name backprop explainer</li>\n\t\t\t\t</ul>\n\t\t\t</Typography>\n\t\t\t<br />\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\t{link(\n\t\t\t\t\t\"https://distill.pub/2020/communicating-with-interactive-articles/\",\n\t\t\t\t\t\"Communicating with Interactive Articles\",\n\t\t\t\t\tfalse\n\t\t\t\t)}\n\t\t\t\t{link(\"https://fredhohman.com/\", \"Fred Hohman\", true)}\n\t\t\t\t{link(\"https://mathisonian.com/\", \"Matthew Conlen\", true)}\n\t\t\t\t{link(\n\t\t\t\t\t\"https://homes.cs.washington.edu/~jheer/\",\n\t\t\t\t\t\"Jeffrey Heer\",\n\t\t\t\t\ttrue\n\t\t\t\t)}\n\t\t\t\t{link(\"https://www.cc.gatech.edu/~dchau/\", \"Polo Chau\", true)}\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Used colored labeling to toggle labels for notation</li>\n\t\t\t\t</ul>\n\t\t\t</Typography>\n\n\t\t\t<br />\n\t\t\t<Typography variant=\"h4\">\n\t\t\t\t<b>How was this made?</b>\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\tMade with{link(\"https://d3js.org/\", \"d3.js\", false)}\n\t\t\t\tand\n\t\t\t\t{link(\"https://reactjs.org/\", \"react.js\", false)}for interactive\n\t\t\t\tvisualization components,\n\t\t\t\t{link(\"https://www.tensorflow.org/js\", \"tensorflow.js\", false)}\n\t\t\t\tfor neural network training and fast math operations, and\n\t\t\t\t{link(\"https://katex.org/\", $(\"\\\\KaTeX\"), false)}\n\t\t\t\tto render {$(\"\\\\LaTeX\")} math equations.\n\t\t\t</Typography>\n\t\t\t<br />\n\t\t\t<Typography variant=\"h4\">\n\t\t\t\t<b>Found any errors?</b>\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\tPlease create an issue on\n\t\t\t\t<IconButton href=\"https://github.com/xnought/backprop-explainer\">\n\t\t\t\t\t<GitHub />\n\t\t\t\t</IconButton>\n\t\t\t\tif you found an issue in the article, any of the components, or\n\t\t\t\tin the <b>EPOCH Tool</b>.\n\t\t\t</Typography>\n\t\t\t<br />\n\t\t\t<Typography variant=\"h4\">\n\t\t\t\t<b>Who made this?</b>\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\tCreated by\n\t\t\t\t{link(\"http://donnybertucci.com/\", \"Donny Bertucci\", true)}\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\tProject advised by\n\t\t\t\t{link(\"http://minsuk.com/\", \"Minsuk Kahng\", true)}\n\t\t\t</Typography>\n\t\t\t<br />\n\t\t</Box>\n\t</Box>\n);\n\nexport default Acknowledge;\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tFile that brings everything together\n*/\n\nimport React, { Component } from \"react\";\nimport ReactGa from \"react-ga\";\nimport { EPOCHTool, Article, Acknowledge, Header } from \"./components/exports\";\nimport { Element } from \"react-scroll\";\n\nclass App extends Component {\n\tcomponentDidMount() {\n\t\t/* Counting pageviews, probobaly shouldve just made my own API */\n\t\tReactGa.initialize(\"UA-192166007-1\");\n\t\tReactGa.pageview(\"/\");\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header />\n\t\t\t\t<Article />\n\t\t\t\t<Element name=\"mainTool\">\n\t\t\t\t\t<EPOCHTool />\n\t\t\t\t</Element>\n\t\t\t\t<Element name=\"acknowledgements\">\n\t\t\t\t\t<Acknowledge />\n\t\t\t\t</Element>\n\t\t\t\t<br />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}