{"version":3,"sources":["components/def/Legend.js","components/def/PlayGround.js","components/def/ScatterPlot.js","components/def/Loss.js","nn/def/Neuron.js","nn/def/Loss.js","nn/def/NeuralNetwork.js","nn/def/Tools.js","App.js","reportWebVitals.js","index.js"],"names":["Legend","width","height","class","overflow","fill","fontFamily","fontSize","x","y","PlayGround","props","state","widths","zoom","macro","micro","bind","d3node","d3zoom","scaleZoom","duration","attr","array","flattendArray","i","length","e","push","model","this","mode","trans","flatten","children","l","weights","negWeight","posWeight","link","d3","d","playing","id","transform","stroke","className","source","target","links","map","strokeWidth","Math","pow","rects","onClick","lin","connection","color","inputWeightComponent","input","weight","dInput","dWeight","add","relu","notPlaying","backward","console","log","svgGroup","select","setState","nshow","output","toFixed","bshow","dInputsSum","neuron","inputs","dInputs","dWeights","bias","dBias","multStep","dSumStep","sumStep","dActStep","actStep","dvalue","loss","Infinity","Component","ScatterPlot","node","formattedPoints","selectAll","data","enter","append","style","a","padding","start","stop","container","svg","xScale","domain","range","yScale","xAxis","scale","yAxis","call","X","yhat","dataSet","remove","plotPoints","Loss","ticks","lossArray","lossMin","lossMax","Neuron","array1","array2","item","dvalues","oppositeParameter","mult","reduce","b","numInputs","dSumArray","activation","sum","dSum","MeanSquaredErrorLoss","subStep","squareStep","NeuralNetwork","shape","biases","layer","dense","max","label","lastLayer","outputs","forward","ReLU","linear","dValues","dValue","dLinear","dReLU","formatWeightArray","uweights","increment","weightSet","t","w","toFunc2DArray","arr","fixed","getRandomInt","floor","random","tensorToArray","tensor","Array","from","dataSync","tools","App","anim","timer","ms","Promise","res","setTimeout","subEpoch","direction","curr","duringEpoch","epoch","biasesData","weightsData","lr","curve","controls","speed","microShow","nn","sliderVal","vSliderVal","vSliderConv","run","genTensorData","mutate","train","printParameters","reset","asyncPause","resetParameters","changeModelLr","initNeuralNetwork","flattenedWeights","rw","rh","layerProportion","ns","flatns","aaron","interval","prevNeuron","lrChange","tf","key","subkey","value","error","inputShape","units","useBias","addModel","compile","optimizer","sgd","XTensor","yTensor","play","fit","epochs","yhatTensor","predict","meanSquaredError","eqn","scaled","getWeights","modelCompile","newShape","splice","lrs","dataSets","PlayButtonClick","Fab","background","disableTouchRipple","Stop","PlayArrow","controlsReg","CardActions","Tooltip","title","arrow","IconButton","disabled","Replay","SlowMotionVideo","controlsBackProp","Button","controlCenter","Box","Card","variant","CardContent","Typography","on","placement","open","formattedWeights","marginTop","num","Chip","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","marks","onChange","n","min","scatter","marginLeft","AppBar","position","Toolbar","display","justifyContent","shapedWeights","show","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6c36655.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./d3.css\";\n\nfunction Legend() {\n\tconst height = 20;\n\tconst width = 150;\n\treturn (\n\t\t<div>\n\t\t\t<svg width={width} height={height} class=\"grad\" overflow=\"visible\">\n\t\t\t\t<text\n\t\t\t\t\tfill=\"black\"\n\t\t\t\t\tfontFamily=\"sans-serif\"\n\t\t\t\t\tfontSize=\"12px\"\n\t\t\t\t\tx={0}\n\t\t\t\t\ty={-4}\n\t\t\t\t>\n\t\t\t\t\tColor Indicates Weight\n\t\t\t\t</text>\n\t\t\t\t<text fill=\"grey\" x={0} y={30}>\n\t\t\t\t\t|\n\t\t\t\t</text>\n\t\t\t\t<text fill=\"grey\" x={-3} y={45}>\n\t\t\t\t\t–\n\t\t\t\t</text>\n\n\t\t\t\t<text fill=\"grey\" x={width / 2 - 2} y={30}>\n\t\t\t\t\t|\n\t\t\t\t</text>\n\t\t\t\t<text fontSize=\"13px\" fill=\"grey\" x={width / 2 - 3} y={45}>\n\t\t\t\t\t0\n\t\t\t\t</text>\n\n\t\t\t\t<text fill=\"grey\" x={width - 3} y={30}>\n\t\t\t\t\t|\n\t\t\t\t</text>\n\t\t\t\t<text fill=\"grey\" x={width - 3 - 3} y={45}>\n\t\t\t\t\t+\n\t\t\t\t</text>\n\t\t\t</svg>\n\t\t</div>\n\t);\n}\n\nexport default Legend;\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tNeural Network component that is what the user interacts with\n*/\nimport React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport Legend from \"./Legend\";\nimport \"./d3.css\";\n\nclass PlayGround extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\twidths: 32,\n\t\t\tzoom: 15,\n\t\t\tmacro: false,\n\t\t\tmicro: false,\n\t\t};\n\t\tthis.zoom = this.zoom.bind(this);\n\t}\n\tzoom(d3node, d3zoom, x, y, scaleZoom, duration) {\n\t\td3node\n\t\t\t//.transition()\n\t\t\t//.duration(duration)\n\t\t\t//.ease(d3zoom)\n\t\t\t.attr(\n\t\t\t\t\"transform\",\n\t\t\t\t`translate(${-x * scaleZoom}, ${\n\t\t\t\t\t-y * scaleZoom\n\t\t\t\t})scale(${scaleZoom})`\n\t\t\t);\n\t}\n\tflatten(array) {\n\t\tlet flattendArray = [];\n\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\tfor (let e = 0; e < array[i].length; e++) {\n\t\t\t\tflattendArray.push(array[i][e]);\n\t\t\t}\n\t\t}\n\t\treturn flattendArray;\n\t}\n\n\trender() {\n\t\tlet model = [];\n\t\tif (this.props.mode) {\n\t\t\tconst { trans } = this.props;\n\n\t\t\t//console.log(trans);\n\t\t\tmodel = this.flatten(trans.model);\n\t\t\t/* Now create array of output values from each neuron */\n\t\t}\n\t\tconst { children } = this.props;\n\n\t\tlet l = this.props.weights.length;\n\t\tconst negWeight = \"#D62839\";\n\t\tconst posWeight = \"#4BA3C3\";\n\n\t\tconst link = d3\n\t\t\t.linkHorizontal()\n\t\t\t.x((d) => d.x)\n\t\t\t.y((d) => d.y);\n\t\tconst playing = (\n\t\t\t<svg id=\"p\" width=\"800\" height=\"500\" overflow=\"visible\">\n\t\t\t\t<g transform={\"scale(1)\"}>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M 750, 234 L 750, 300\"\n\t\t\t\t\t\tstroke={l != 0 ? \"#F50257\" : \"#ededed\"}\n\t\t\t\t\t\tclassName={this.props.playing}\n\t\t\t\t\t></path>\n\t\t\t\t\t<path\n\t\t\t\t\t\td={link({\n\t\t\t\t\t\t\tsource: { x: 766, y: 315 },\n\t\t\t\t\t\t\ttarget: { x: 880, y: 430 },\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tstroke={l != 0 ? \"#F50257\" : \"#ededed\"}\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tclassName={this.props.playing}\n\t\t\t\t\t></path>\n\t\t\t\t\t<path\n\t\t\t\t\t\td={link({\n\t\t\t\t\t\t\tsource: { x: 766, y: 250 },\n\t\t\t\t\t\t\ttarget: { x: 880, y: 150 },\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tstroke={l != 0 ? \"#F50257\" : \"#ededed\"}\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tclassName={this.props.playing}\n\t\t\t\t\t></path>\n\t\t\t\t\t{this.props.links.map((d, i) => (\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\td={d}\n\t\t\t\t\t\t\tclassName={this.props.playing}\n\t\t\t\t\t\t\tstrokeWidth={\n\t\t\t\t\t\t\t\tl === 0\n\t\t\t\t\t\t\t\t\t? 1\n\t\t\t\t\t\t\t\t\t: Math.pow(this.props.weights[i], 2) + 0.1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstroke={\n\t\t\t\t\t\t\t\tl !== 0\n\t\t\t\t\t\t\t\t\t? this.props.weights[i] > 0\n\t\t\t\t\t\t\t\t\t\t? posWeight\n\t\t\t\t\t\t\t\t\t\t: negWeight\n\t\t\t\t\t\t\t\t\t: \"#ededed\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t></path>\n\t\t\t\t\t))}\n\t\t\t\t\t{this.props.rects.map((d, i) => (\n\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tx={d.x}\n\t\t\t\t\t\t\ty={d.y}\n\t\t\t\t\t\t\twidth={this.state.widths}\n\t\t\t\t\t\t\theight={this.state.widths}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.props.onClick();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tfill=\"lightgrey\"\n\t\t\t\t\t\t></rect>\n\t\t\t\t\t))}\n\n\t\t\t\t\t<rect\n\t\t\t\t\t\tx={734}\n\t\t\t\t\t\ty={300}\n\t\t\t\t\t\twidth={32}\n\t\t\t\t\t\theight={32}\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tstroke=\"black\"\n\t\t\t\t\t></rect>\n\t\t\t\t\t<text\n\t\t\t\t\t\tfontFamily=\"sans-serif\"\n\t\t\t\t\t\tfontSize=\"12px\"\n\t\t\t\t\t\tx={739}\n\t\t\t\t\t\ty={318}\n\t\t\t\t\t>\n\t\t\t\t\t\tloss\n\t\t\t\t\t</text>\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t);\n\n\t\t//Lets create the computational graph\n\t\tlet fontSize = \"1px\";\n\t\tconst lin = d3.line();\n\n\t\tconst mult = (x, y) => (\n\t\t\t<svg x={x} y={y} width={2} height={2}>\n\t\t\t\t<rect width={2} height={2} x={0} y={0} fill=\"white\"></rect>\n\t\t\t\t<text fontSize=\"2px\" x={0.5} y={2}>\n\t\t\t\t\t*\n\t\t\t\t</text>\n\t\t\t</svg>\n\t\t);\n\t\tconst connection = (x, y, color) => (\n\t\t\t<path d={lin([x, y])} stroke={color} strokeWidth=\"0.1\"></path>\n\t\t);\n\n\t\tconst inputWeightComponent = (input, weight, dInput, dWeight) => (\n\t\t\t<g>\n\t\t\t\t{connection([1, 0.75], [4, 0.75], \"black\")}\n\t\t\t\t{connection([1, 2.25], [4, 2.25], \"black\")}\n\t\t\t\t{connection([4, 0.75], [6, 1.5], \"black\")}\n\t\t\t\t{connection([4, 2.25], [6, 1.5], \"black\")}\n\t\t\t\t{mult(5, 0.5)}\n\t\t\t</g>\n\t\t);\n\n\t\tconst add = (x, y) => (\n\t\t\t<svg x={x} y={y} width={2} height={2}>\n\t\t\t\t<rect width={2} height={2} x={0} y={0} fill=\"white\"></rect>\n\t\t\t\t<text fontSize=\"2px\" x={0.5} y={1.5}>\n\t\t\t\t\t+\n\t\t\t\t</text>\n\t\t\t</svg>\n\t\t);\n\t\tconst relu = (x, y) => (\n\t\t\t<svg x={x} y={y} width={2} height={2}>\n\t\t\t\t<rect width={2} height={2} x={0} y={0} fill=\"white\"></rect>\n\t\t\t\t<text fontSize=\"0.5px\" x={0.25} y={0.5}>\n\t\t\t\t\tReLU\n\t\t\t\t</text>\n\t\t\t\t{connection([0, 1.5], [1, 1.5], \"black\")}\n\t\t\t\t{connection([1, 1.5], [2, 0.5], \"black\")}\n\t\t\t</svg>\n\t\t);\n\n\t\tconst graph = (x, y, neuron) => (\n\t\t\t<svg width={32} height={32} x={x} y={y}>\n\t\t\t\t{neuron.length == 0\n\t\t\t\t\t? \"\"\n\t\t\t\t\t: neuron.inputs.map((d, i) => (\n\t\t\t\t\t\t\t<g key={i}>\n\t\t\t\t\t\t\t\t<svg width={10} height={4} x={0} y={i * 3.5}>\n\t\t\t\t\t\t\t\t\t<text fontSize={fontSize} x={0} y={1}>\n\t\t\t\t\t\t\t\t\t\tx\n\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t<text fontSize={\"0.5px\"} x={0.5} y={1.2}>\n\t\t\t\t\t\t\t\t\t\t{i}\n\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t<text fontSize={fontSize} x={0} y={2.5}>\n\t\t\t\t\t\t\t\t\t\tw\n\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t<text fontSize={\"0.5px\"} x={0.6} y={2.7}>\n\t\t\t\t\t\t\t\t\t\t{i}\n\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t{connection([6, 1.5], [10, 1.5], \"black\")}\n\t\t\t\t\t\t\t\t\t{inputWeightComponent(1, 1, 1, 1)}\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t{connection(\n\t\t\t\t\t\t\t\t\t[10, i * 3.5 + 1.5],\n\t\t\t\t\t\t\t\t\t[18.25, 16],\n\t\t\t\t\t\t\t\t\t\"black\"\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{neuron.inputs.map((d, i) => (\n\t\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\t\tfill=\"blue\"\n\t\t\t\t\t\t\t\t\t\tx={1}\n\t\t\t\t\t\t\t\t\t\ty={0.7 + 3.5 * i}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{d.toFixed(4)}\n\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t{neuron.dInputs.map((d, i) => (\n\t\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\t\tfill=\"red\"\n\t\t\t\t\t\t\t\t\t\tx={1}\n\t\t\t\t\t\t\t\t\t\ty={1.4 + 3.5 * i}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{d.toFixed(4)}\n\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t\t{neuron.weights.map((d, i) => (\n\t\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\t\tfill=\"blue\"\n\t\t\t\t\t\t\t\t\t\tx={1}\n\t\t\t\t\t\t\t\t\t\ty={2.2 + 3.5 * i}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{d.toFixed(4)}\n\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t{neuron.dWeights.map((d, i) => (\n\t\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\t\tfill=\"red\"\n\t\t\t\t\t\t\t\t\t\tx={1}\n\t\t\t\t\t\t\t\t\t\ty={2.9 + 3.5 * i}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{d.toFixed(4)}\n\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\tfill=\"blue\"\n\t\t\t\t\t\t\t\t\tx={1}\n\t\t\t\t\t\t\t\t\ty={29.7}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{neuron.bias.toFixed(4)}\n\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\tfill=\"red\"\n\t\t\t\t\t\t\t\t\tx={1}\n\t\t\t\t\t\t\t\t\ty={30.4}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{neuron.dBias.toFixed(4)}\n\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t{neuron.multStep.map((d, i) => (\n\t\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\t\tfill=\"blue\"\n\t\t\t\t\t\t\t\t\t\tx={7.25}\n\t\t\t\t\t\t\t\t\t\ty={1.4 + 3.5 * i}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{d.toFixed(4)}\n\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t{neuron.dSumStep.map((d, i) => (\n\t\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\t\tfill=\"red\"\n\t\t\t\t\t\t\t\t\t\tx={7.25}\n\t\t\t\t\t\t\t\t\t\ty={2.1 + 3.5 * i}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{d.toFixed(4)}\n\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\tfill=\"blue\"\n\t\t\t\t\t\t\t\t\tx={20.1}\n\t\t\t\t\t\t\t\t\ty={16}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{neuron.sumStep.toFixed(4)}\n\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\tfill=\"red\"\n\t\t\t\t\t\t\t\t\tx={20.1}\n\t\t\t\t\t\t\t\t\ty={16.7}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{neuron.dActStep.toFixed(4)}\n\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\tfill=\"blue\"\n\t\t\t\t\t\t\t\t\tx={26.2}\n\t\t\t\t\t\t\t\t\ty={16}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{neuron.actStep.toFixed(4)}\n\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\tfontSize={\"0.75px\"}\n\t\t\t\t\t\t\t\t\tfill=\"red\"\n\t\t\t\t\t\t\t\t\tx={26.2}\n\t\t\t\t\t\t\t\t\ty={16.7}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{neuron.dvalue.toFixed(4)}\n\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t</g>\n\t\t\t\t\t  ))}\n\n\t\t\t\t<text fontSize={fontSize} x={0} y={30}>\n\t\t\t\t\tb\n\t\t\t\t</text>\n\t\t\t\t{connection([0.75, 29.75], [10, 29.75], \"black\")}\n\t\t\t\t{connection([10, 29.75], [18.25, 16], \"black\")}\n\n\t\t\t\t{connection([19, 16], [30, 16], \"black\")}\n\t\t\t\t{add(18, 15)}\n\t\t\t\t{relu(24, 15)}\n\t\t\t</svg>\n\t\t);\n\n\t\tconst notPlaying = (\n\t\t\t<svg id=\"pp\" width=\"800\" height=\"500\">\n\t\t\t\t<g id=\"gpp\">\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M 750, 234 L 750, 300\"\n\t\t\t\t\t\tstroke=\"black\"\n\t\t\t\t\t\tclassName={this.props.backward}\n\t\t\t\t\t></path>\n\t\t\t\t\t{this.props.rects.map((d, i) => (\n\t\t\t\t\t\t<g id=\"ggpp\" key={i}>\n\t\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\t\tx={d.x}\n\t\t\t\t\t\t\t\ty={d.y}\n\t\t\t\t\t\t\t\twidth={this.state.widths}\n\t\t\t\t\t\t\t\theight={this.state.widths}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t//console.log(model[i]);\n\t\t\t\t\t\t\t\t\tconsole.log(d);\n\t\t\t\t\t\t\t\t\tconst svgGroup = d3\n\t\t\t\t\t\t\t\t\t\t.select(\"#pp\")\n\t\t\t\t\t\t\t\t\t\t.select(\"g\");\n\t\t\t\t\t\t\t\t\tthis.zoom(\n\t\t\t\t\t\t\t\t\t\tsvgGroup,\n\t\t\t\t\t\t\t\t\t\td3.easeExpInOut,\n\t\t\t\t\t\t\t\t\t\td.x - 16,\n\t\t\t\t\t\t\t\t\t\td.y,\n\t\t\t\t\t\t\t\t\t\tthis.state.zoom,\n\t\t\t\t\t\t\t\t\t\t1500\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.setState({ micro: true });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tfill=\"lightgrey\"\n\t\t\t\t\t\t\t></rect>\n\n\t\t\t\t\t\t\t<text fill=\"blue\" x={d.x + 32} y={d.y + 16}>\n\t\t\t\t\t\t\t\t{model.length !== 0 && i < this.props.nshow\n\t\t\t\t\t\t\t\t\t? i > 0\n\t\t\t\t\t\t\t\t\t\t? model[i - 1].output.toFixed(2)\n\t\t\t\t\t\t\t\t\t\t: this.props.input\n\t\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t<text fill=\"red\" x={d.x - 40} y={d.y + 16}>\n\t\t\t\t\t\t\t\t{model.length !== 0 && i > this.props.bshow\n\t\t\t\t\t\t\t\t\t? i > 0\n\t\t\t\t\t\t\t\t\t\t? model[i - 1].dInputsSum.toFixed(2)\n\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t{i > 0 && this.state.micro\n\t\t\t\t\t\t\t\t? graph(\n\t\t\t\t\t\t\t\t\t\td.x + 2,\n\t\t\t\t\t\t\t\t\t\td.y,\n\t\t\t\t\t\t\t\t\t\tmodel.length > 0 ? model[i - 1] : []\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t</g>\n\t\t\t\t\t))}\n\n\t\t\t\t\t{this.props.links.map((d, i) => (\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\td={d}\n\t\t\t\t\t\t\tclassName={this.props.backward}\n\t\t\t\t\t\t\tstrokeWidth={\n\t\t\t\t\t\t\t\tMath.pow(this.props.weights[i], 2) + 0.05\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstroke={\n\t\t\t\t\t\t\t\tthis.props.weights.length !== 0\n\t\t\t\t\t\t\t\t\t? this.props.weights[i] > 0\n\t\t\t\t\t\t\t\t\t\t? posWeight\n\t\t\t\t\t\t\t\t\t\t: negWeight\n\t\t\t\t\t\t\t\t\t: \"#ededed\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t></path>\n\t\t\t\t\t))}\n\t\t\t\t\t<rect\n\t\t\t\t\t\tx={734}\n\t\t\t\t\t\ty={300}\n\t\t\t\t\t\twidth={32}\n\t\t\t\t\t\theight={32}\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tstroke=\"black\"\n\t\t\t\t\t></rect>\n\t\t\t\t\t<text\n\t\t\t\t\t\tfontFamily=\"sans-serif\"\n\t\t\t\t\t\tfontSize=\"13px\"\n\t\t\t\t\t\tx={738}\n\t\t\t\t\t\ty={318}\n\t\t\t\t\t>\n\t\t\t\t\t\tLoss\n\t\t\t\t\t</text>\n\t\t\t\t\t<text x={734} y={350}>\n\t\t\t\t\t\t{this.props.mode && this.props.nshow > 18\n\t\t\t\t\t\t\t? this.props.trans.loss.output.toFixed(2)\n\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t</text>\n\t\t\t\t\t<text x={734} y={295} fill=\"red\">\n\t\t\t\t\t\t{this.props.mode &&\n\t\t\t\t\t\tthis.props.bshow < Infinity &&\n\t\t\t\t\t\tthis.props.bshow > 0\n\t\t\t\t\t\t\t? this.props.trans.loss.dInputs.toFixed(2)\n\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t</text>\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t);\n\t\treturn (\n\t\t\t<div id=\"nn\">\n\t\t\t\t{children}\n\t\t\t\t{!this.props.mode ? playing : notPlaying}\n\t\t\t\t<Legend />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PlayGround;\n","import React, { Component } from \"react\";\nimport \"./d3.css\";\nimport * as d3 from \"d3\";\n\nclass ScatterPlot extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\tplotPoints(node, formattedPoints) {\n\t\t/* Now need to plot said data */\n\t\tnode.selectAll(\"circle\")\n\t\t\t.data(formattedPoints)\n\t\t\t.enter()\n\t\t\t.append(\"circle\")\n\t\t\t.attr(\"cx\", (d) => d.x)\n\t\t\t.attr(\"cy\", (d) => d.y)\n\t\t\t.attr(\"r\", 2)\n\t\t\t.style(\"fill\", \"#175676\");\n\t}\n\t/* This is where we initialize the Scatter Plot */\n\tasync componentDidMount() {\n\t\tconst { width, height, padding, start, stop } = this.props;\n\t\tconst container = d3.select(\"#nice\");\n\n\t\tconst svg = container\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.style(\"overflow\", \"visible\");\n\t\tsvg.append(\"rect\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.attr(\"class\", \"cord\");\n\t\tlet xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([0, width - 2 * padding]);\n\n\t\tlet yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([height - 2 * padding, 0]);\n\n\t\tlet xAxis = d3.axisBottom().scale(xScale);\n\t\tlet yAxis = d3.axisRight().scale(yScale);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"transform\", `translate(0,${height - 2 * padding})`)\n\t\t\t.call(xAxis);\n\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"transform\", \"translate(\" + (width - 2 * padding) + \",0)\")\n\t\t\t.call(yAxis);\n\n\t\tsvg.append(\"line\")\n\t\t\t.attr(\"x1\", 0)\n\t\t\t.attr(\"y1\", (height + 1) / 2)\n\t\t\t.attr(\"x2\", width)\n\t\t\t.attr(\"y2\", (height + 1) / 2)\n\t\t\t.attr(\"class\", \"split\");\n\t\tsvg.append(\"line\")\n\t\t\t.attr(\"x1\", (width + 1) / 2)\n\t\t\t.attr(\"y1\", 0)\n\t\t\t.attr(\"x2\", (width + 1) / 2)\n\t\t\t.attr(\"y2\", height)\n\t\t\t.attr(\"class\", \"split\");\n\n\t\tsvg.append(\"path\")\n\t\t\t.attr(\"id\", \"epic\")\n\t\t\t.attr(\"stroke\", \"none\")\n\t\t\t.attr(\"fill\", \"none\");\n\t}\n\tcomponentDidUpdate() {\n\t\tconst { width, height, padding, start, stop, X, y, yhat } = this.props;\n\t\tlet xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([0, width - 2 * padding]);\n\n\t\tlet yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([height - 2 * padding, 0]);\n\t\tconst svg = d3.select(\"#nice\").select(\"svg\");\n\t\tlet dataSet = [];\n\t\tfor (let i = 0; i < X.length; i++) {\n\t\t\tdataSet.push({\n\t\t\t\tx: xScale(X[i]),\n\t\t\t\ty: yScale(y[i]),\n\t\t\t});\n\t\t}\n\t\tlet a = [];\n\t\tfor (let i = 0; i < X.length; i++) {\n\t\t\ta.push([xScale(X[i]), yScale(yhat[i])]);\n\t\t}\n\t\tsvg.selectAll(\"circle\").remove();\n\t\tthis.plotPoints(svg, dataSet);\n\n\t\tsvg.select(\"#epic\")\n\t\t\t.attr(\"d\", d3.line()(a))\n\t\t\t.attr(\"stroke\", \"#F50257\")\n\t\t\t.attr(\"fill\", \"none\");\n\t}\n\t//componentDidUpdate() {\n\t//const { width, height, padding, start, stop, X, y } = this.props;\n\t//console.log(X);\n\t//console.log(y);\n\t//let xScale = d3\n\t//.scaleLinear()\n\t//.domain([start, stop])\n\t//.range([0, width - 2 * padding]);\n\n\t//let yScale = d3\n\t//.scaleLinear()\n\t//.domain([start, stop])\n\t//.range([height - 2 * padding, 0]);\n\t//const svg = d3.select(\"#nice\").select(\"svg\");\n\t//let dataSet = [];\n\t//for (let i = 0; i < X.length; i++) {\n\t//dataSet.push({\n\t//x: xScale(X[i]),\n\t//y: yScale(y[i]),\n\t//});\n\t//}\n\t///* Now need to plot said data */\n\t//svg.selectAll(\"circle\")\n\t//.data(dataSet)\n\t//.enter()\n\t//.append(\"circle\")\n\t//.attr(\"cx\", (d) => d.x)\n\t//.attr(\"cy\", (d) => d.y)\n\t//.attr(\"r\", 2)\n\t//.style(\"fill\", \"#F50257\");\n\t//}\n\trender() {\n\t\treturn <div id=\"nice\"></div>;\n\t}\n}\n\nexport default ScatterPlot;\n","import React, { Component } from \"react\";\nimport \"./d3.css\";\nimport * as d3 from \"d3\";\n\nclass Loss extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\tcomponentDidMount() {\n\t\tconst container = d3.select(\"#sweet\");\n\t\tconst height = 100;\n\t\tconst width = 300;\n\t\tconst padding = 0;\n\t\tlet xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([0, -1])\n\t\t\t.range([0, width - 2 * padding]);\n\n\t\tlet yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([0, 1])\n\t\t\t.range([height - 2 * padding, 0]);\n\t\tconst svg = container\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.style(\"overflow\", \"visible\");\n\n\t\tsvg.append(\"rect\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.attr(\"class\", \"cord\");\n\t\tlet xAxis = d3.axisBottom().scale(xScale);\n\t\tlet yAxis = d3.axisRight().scale(yScale);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"id\", \"x\")\n\t\t\t.attr(\"transform\", `translate(0,${height - 2 * padding})`)\n\t\t\t.call(xAxis);\n\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"id\", \"y\")\n\t\t\t.attr(\"transform\", \"translate(\" + (width - 2 * padding) + \",0)\")\n\t\t\t.call(yAxis.ticks(0));\n\t\tsvg.append(\"path\")\n\t\t\t.attr(\"id\", \"line\")\n\t\t\t.attr(\"stroke\", \"none\")\n\t\t\t.attr(\"fill\", \"none\");\n\t\t//svg.append(\"text\").attr(\"x\", 1).attr(\"y\", -5).text(\"loss:\");\n\t}\n\tcomponentDidUpdate() {\n\t\tconst { lossArray, loss } = this.props;\n\t\tconst height = 100;\n\t\tconst width = 300;\n\t\tconst start = 0;\n\t\tconst stop = lossArray.length - 1;\n\t\tconst padding = 0;\n\t\tlet xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([0, width - 2 * padding]);\n\n\t\tlet lossMin = d3.min(lossArray);\n\t\tlet lossMax = d3.max(lossArray);\n\t\tlet yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([lossMin, lossMax])\n\t\t\t.range([height - 2 * padding, 0]);\n\t\tconst svg = d3.select(\"#sweet\").select(\"svg\");\n\t\tlet a = [];\n\t\tfor (let i = 0; i < lossArray.length; i++) {\n\t\t\ta.push([xScale(i), yScale(lossArray[i])]);\n\t\t}\n\n\t\tlet xAxis = d3.axisBottom().scale(xScale);\n\t\tlet yAxis = d3.axisRight().scale(yScale);\n\t\tsvg.select(\"#x\")\n\t\t\t.attr(\"transform\", `translate(0,${height - 2 * padding})`)\n\t\t\t.call(xAxis.ticks(5));\n\n\t\tsvg.select(\"#y\")\n\t\t\t.attr(\"transform\", \"translate(\" + (width - 2 * padding) + \",0)\")\n\t\t\t.call(yAxis.ticks(5));\n\t\tsvg.select(\"#line\")\n\t\t\t.attr(\"d\", d3.line()(a))\n\t\t\t.attr(\"stroke\", \"#F50257\")\n\t\t\t.attr(\"fill\", \"none\");\n\t}\n\trender() {\n\t\treturn <div id=\"sweet\"></div>;\n\t}\n}\n\nexport default Loss;\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis is the class definiton and implmentation of Neuron for Nerual Network\n*/\nexport class Neuron {\n\tconstructor(weights, bias) {\n\t\tthis.weights = weights;\n\t\tthis.bias = bias;\n\t}\n\t/* Next functions are just helper functions for the operations */\n\tmult(array1, array2) {\n\t\treturn array1.map((item, i) => {\n\t\t\treturn item * array2[i];\n\t\t});\n\t}\n\tdMult(dvalues, oppositeParameter) {\n\t\treturn this.mult(dvalues, oppositeParameter);\n\t}\n\tsum(array) {\n\t\treturn array.reduce((a, b) => a + b);\n\t}\n\tdSum(dvalue, numInputs) {\n\t\tlet dSumArray = [];\n\t\tfor (let i = 0; i < numInputs; i++) {\n\t\t\tdSumArray.push(dvalue);\n\t\t}\n\t\treturn dSumArray;\n\t}\n\tlinear(input) {\n\t\treturn input;\n\t}\n\n\t/* \n\t\tPurpose: feed forward of single neuron\n\t\t@param: inputs, activation\n\t\t@store inputs, multStep, sumStep, actStep, output\n\t*/\n\tforward(inputs, activation) {\n\t\t/* Destructure the class values */\n\t\tconst { weights, bias } = this;\n\t\tconst { mult, sum } = this;\n\t\t/* propogate forward */\n\t\tconst multStep = mult(inputs, weights);\n\t\tconst sumStep = sum(multStep) + bias;\n\t\tconst actStep = activation(sumStep);\n\n\t\t/* Save values */\n\t\tthis.inputs = inputs;\n\t\tthis.multStep = multStep;\n\t\tthis.sumStep = sumStep;\n\t\tthis.actStep = actStep;\n\t\tthis.output = actStep;\n\t}\n\n\t/* \n\t\tPurpose: feed backward of single neuron\n\t\t@param: dvalue, activation\n\t\t@store inputs, multStep, sumStep, actStep, output\n\t*/\n\tbackward(dvalue, activation) {\n\t\t/* Destructure the class values */\n\t\tconst { inputs, weights, actStep } = this;\n\t\tconst { dSum, mult, sum } = this;\n\t\t/* propgate backwards */\n\t\tconst dActStep = activation(actStep) * dvalue;\n\t\tconst dSumStep = dSum(dActStep, inputs.length);\n\t\tconst dBias = dActStep;\n\t\tconst dWeights = mult(dSumStep, inputs);\n\t\tconst dInputs = mult(dSumStep, weights);\n\t\tconst dInputsSum = sum(dInputs);\n\n\t\t/* Save values */\n\t\tthis.dvalue = dvalue;\n\t\tthis.dActStep = dActStep;\n\t\tthis.dSumStep = dSumStep;\n\t\tthis.dBias = dBias;\n\t\tthis.dWeights = dWeights;\n\t\tthis.dInputs = dInputs;\n\t\tthis.dInputsSum = dInputsSum;\n\t}\n}\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\texports the losses to be used for the neural network\n\t\t\n*/\nexport class MeanSquaredErrorLoss {\n\t/* \n\t\tPurpose: feed forward of the nerual network\n\t\t@param yhat, y\n\t\t@stores y, yhat, subStep, squareStep, output\n\t*/\n\tforward(yhat, y) {\n\t\tconst subStep = yhat - y;\n\t\tconst squareStep = (this.output = Math.pow(yhat - y, 2));\n\n\t\tthis.subStep = subStep;\n\t\tthis.squareStep = squareStep;\n\t\tthis.output = squareStep;\n\t}\n\t/* \n\t\tPurpose: feed backward of the nerual network\n\t\t@stores dInputs\n\t*/\n\tbackward() {\n\t\tthis.dInputs = 2 * this.subStep;\n\t}\n}\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis creates the definiton and implemntation of the neural network in a non vectorized more manual way \n\t\tdesigned to show all the operations\n\tTODO: add the update that would update to the weights sgd style and compute forward once more to see difference\n*/\nimport { Neuron } from \"./Neuron\";\nimport { MeanSquaredErrorLoss } from \"./Loss\";\nexport class NeuralNetwork {\n\t/* here we construct the Neuron model */\n\tconstructor(shape, weights, biases) {\n\t\tthis.model = [];\n\t\tthis.loss = new MeanSquaredErrorLoss();\n\t\tthis.shape = shape;\n\n\t\t/* HERE WE CONSTRUCT THE MODEL ON CLASS CREATION */\n\t\tfor (let layer = 0; layer < weights.length; layer++) {\n\t\t\tlet dense = [];\n\t\t\tfor (let neuron = 0; neuron < weights[layer].length; neuron++) {\n\t\t\t\tdense.push(\n\t\t\t\t\tnew Neuron(weights[layer][neuron], biases[layer][neuron])\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.model.push(dense);\n\t\t}\n\t}\n\t/* Next are some helper functions */\n\tsum(array) {\n\t\treturn array.reduce((a, b) => a + b);\n\t}\n\tdReLU(input) {\n\t\treturn input > 0 ? 1 : 0;\n\t}\n\tdLinear(input) {\n\t\treturn 1;\n\t}\n\n\tReLU(input) {\n\t\treturn Math.max(0, input);\n\t}\n\n\tlinear(input) {\n\t\treturn input;\n\t}\n\n\t/* \n\t\tPurpose: to feed forward the entire layer\n\t\t@param input, label\n\t\t@store model, yhat, loss\n\t*/\n\tforward(input, label) {\n\t\tlet inputs = [input];\n\t\tconst lastLayer = this.model.length;\n\t\tconst outputNeuron = 0;\n\t\t/* First iterate through each layer */\n\t\tfor (let layer = 0; layer < lastLayer - 1; layer++) {\n\t\t\t/* Then iterate through each neuron in the layer */\n\t\t\tlet outputs = [];\n\t\t\tfor (let neuron = 0; neuron < this.model[layer].length; neuron++) {\n\t\t\t\t/* Then feed forward each individual neuron and push to output array */\n\t\t\t\tthis.model[layer][neuron].forward(inputs, this.ReLU);\n\t\t\t\toutputs.push(this.model[layer][neuron].output);\n\t\t\t}\n\n\t\t\t/* Then outputs will be the inputs for the next layer */\n\t\t\tinputs = outputs;\n\t\t}\n\t\tthis.model[lastLayer - 1][0].forward(inputs, this.linear);\n\t\tthis.yhat = this.model[lastLayer - 1][outputNeuron].output;\n\t\tthis.loss.forward(this.yhat, label);\n\t}\n\t/* \n\t\tPurpose: to feed backward the entire model per layer\n\t*/\n\tbackward() {\n\t\tconst { sum } = this;\n\t\tthis.loss.backward();\n\t\tlet dValues = [this.loss.dInputs];\n\t\tconst lastLayer = this.model.length;\n\t\tlet dValue = sum(dValues);\n\t\t/* take care of output neuron */\n\t\tthis.model[lastLayer - 1][0].backward(dValue, this.dLinear);\n\t\tdValues = [this.model[lastLayer - 1][0].dInputsSum];\n\t\t/* Iterate backwards */\n\t\tfor (let layer = lastLayer - 2; layer >= 0; layer--) {\n\t\t\t/* First sum the dvalues */\n\t\t\tdValue = sum(dValues);\n\t\t\tdValues = [];\n\t\t\tfor (let neuron = 0; neuron < this.model[layer].length; neuron++) {\n\t\t\t\tthis.model[layer][neuron].backward(dValue, this.dReLU);\n\t\t\t\tdValues.push(this.model[layer][neuron].dInputsSum);\n\t\t\t}\n\t\t}\n\t}\n}\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tExports some tools that make it easier to deal with the data\n*/\n\n/* \n\tPurpose: format the weight array given from tensorflow\n\t@param uweights (unformatted weights), shape\n\t@return layer (formated weights per layer)\n*/\nexport function formatWeightArray(uweights, shape) {\n\tlet layer = [];\n\t/* Increment over each layer l */\n\tfor (let l = 0; l < uweights.length; l++) {\n\t\t/* First num in shape is input neuron which is why we skip here by adding 1 */\n\t\tlet increment = shape[l + 1];\n\t\tlet weightSet = [];\n\t\t/* Increment over each neuron */\n\t\tfor (let t = 0; t < increment; t++) {\n\t\t\tlet weights = [];\n\t\t\t/* Increment over each weight per neuron */\n\t\t\tfor (let w = t; w < uweights[l].length; w += increment) {\n\t\t\t\tweights.push(uweights[l][w]);\n\t\t\t}\n\t\t\tweightSet.push(weights);\n\t\t}\n\t\tlayer.push(weightSet);\n\t}\n\treturn layer;\n}\n\n/* \n\tPurpose: to turn a 2d array into the same array but fixed to a certian number of numbers/figures\n\t@param arr  (not fixed array), fixed\n\t@return arr (fixed array)\n*/\nexport function toFunc2DArray(arr, fixed) {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tfor (let e = 0; e < arr[i].length; e++) {\n\t\t\tarr[i][e] = +arr[i][e].toFixed(fixed);\n\t\t}\n\t}\n\treturn arr;\n}\n\n/* \n\tPurpose: Flattens the array\n\t@param array\n\t@return flattenedArray\n*/\nexport function flatten(array) {\n\tlet flattendArray = [];\n\tfor (let i = 0; i < array.length; i++) {\n\t\tfor (let e = 0; e < array[i].length; e++) {\n\t\t\tflattendArray.push(array[i][e]);\n\t\t}\n\t}\n\treturn flattendArray;\n}\n\n/* \n\tPurpose: generate random integer from 0 to given paramter\n\t@param max\n\t@return Number [0,max)\n*/\nexport function getRandomInt(max) {\n\treturn Math.floor(Math.random() * Math.floor(max));\n}\n\n/* \n\tPurpose: turn tensor to array\n\t@param tensor \n\t@return array\n*/\nexport function tensorToArray(tensor) {\n\treturn Array.from(tensor.dataSync());\n}\n","/* \n  Donny Bertucci: @xnought\n  Summary: \n    This file acts as the highest state and act as the controls \n    for the entire application\n*/\nimport React, { Component } from \"react\";\nimport {\n\tTypography,\n\tBox,\n\tAppBar,\n\tToolbar,\n\tCard,\n\tCardContent,\n\tIconButton,\n\tCardActions,\n\tChip,\n\tButton,\n\tFab,\n\tSlider,\n\tTooltip,\n} from \"@material-ui/core\";\nimport { Replay, SlowMotionVideo, PlayArrow, Stop } from \"@material-ui/icons\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as d3 from \"d3\";\nimport { PlayGround, ScatterPlot, Loss } from \"./components/exports\";\nimport { NeuralNetwork, tools } from \"./nn/exports\";\nimport \"./App.css\";\nconst { flatten, formatWeightArray, tensorToArray } = tools;\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t/* Treat the app state as the global state */\n\t\tthis.state = {\n\t\t\tloss: null,\n\t\t\tduringEpoch: false,\n\t\t\tshape: [1, 8, 8, 1],\n\t\t\tepoch: 0,\n\t\t\tyhat: [],\n\t\t\tbiasesData: [],\n\t\t\tweightsData: [],\n\t\t\tlr: 0.01,\n\t\t\tdata: {\n\t\t\t\tX: [],\n\t\t\t\ty: [],\n\t\t\t},\n\t\t\tscale: 5,\n\t\t\tcurve: \"sin\",\n\t\t\tcontrols: {\n\t\t\t\tplaying: false,\n\t\t\t\tspeed: 0,\n\t\t\t},\n\t\t\tnshow: 0,\n\t\t\tbshow: Infinity,\n\t\t\tmicroShow: 0,\n\t\t\trects: [],\n\t\t\tweights: [],\n\t\t\tlinks: [],\n\t\t\tnn: null,\n\t\t\tmode: false,\n\t\t\ttrans: null,\n\t\t\tmacro: false,\n\t\t\tdirection: \"edgePaused\",\n\t\t\tsubEpoch: \"forward\",\n\t\t\tsliderVal: 2,\n\t\t\tvSliderVal: 2,\n\t\t\tvSliderConv: 6,\n\t\t\tlossArray: [],\n\t\t};\n\n\t\t/* Prototype: Functions Binds to \"this\" */\n\t\t/* Main Logic */\n\t\tthis.run = this.run.bind(this);\n\t\t/* Neural Network Logic */\n\t\tthis.genTensorData = this.genTensorData.bind(this);\n\t\t/* Mutators of State */\n\t\tthis.mutate = this.mutate.bind(this);\n\n\t\tthis.train = this.train.bind(this);\n\t\tthis.printParameters = this.printParameters.bind(this);\n\t\tthis.reset = this.reset.bind(this);\n\t\tthis.asyncPause = this.asyncPause.bind(this);\n\t\tthis.resetParameters = this.resetParameters.bind(this);\n\t\tthis.changeModelLr = this.changeModelLr.bind(this);\n\t\tthis.initNeuralNetwork = this.initNeuralNetwork.bind(this);\n\t\tthis.anim = this.anim.bind(this);\n\t}\n\n\tanim = async () => {\n\t\tconst timer = (ms) => new Promise((res) => setTimeout(res, ms));\n\t\tconst ms = 500;\n\t\tconst l = this.state.shape.reduce((a, b) => a + b) - 1;\n\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tsubEpoch: \"forward\",\n\t\t\tdirection: \"edgeForward\",\n\t\t\tnshow: 0,\n\t\t\tbshow: Infinity,\n\t\t});\n\t\tawait timer(ms);\n\n\t\tthis.setState({ nshow: 1 });\n\t\tlet i = 1;\n\t\twhile (this.state.nshow < l) {\n\t\t\tlet curr = this.state.shape[i];\n\t\t\tawait timer(ms);\n\t\t\tthis.setState({\n\t\t\t\tnshow: (this.state.nshow += curr),\n\t\t\t});\n\t\t\ti++;\n\t\t}\n\t\tawait timer(ms);\n\t\tthis.setState({\n\t\t\tnshow: (this.state.nshow += 1),\n\t\t});\n\t\tawait timer(ms);\n\t\tthis.setState({\n\t\t\tnshow: (this.state.nshow += 1),\n\t\t});\n\n\t\tthis.setState({ bshow: Infinity });\n\t\t/* Pause! now go backward */\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tdirection: \"edgeBackward\",\n\t\t\tsubEpoch: \"backward\",\n\t\t});\n\n\t\tawait timer(ms);\n\t\tthis.setState({ bshow: l });\n\n\t\tawait timer(ms);\n\t\tthis.setState({ bshow: (this.state.bshow -= 1) });\n\n\t\tlet e = this.state.shape.length - 2;\n\t\twhile (this.state.bshow > 0) {\n\t\t\tlet curr = this.state.shape[e];\n\t\t\tawait timer(ms);\n\t\t\tthis.setState({\n\t\t\t\tbshow: (this.state.bshow -= curr),\n\t\t\t});\n\t\t\te--;\n\t\t}\n\n\t\tthis.setState({ direction: \"edgePaused\" });\n\t};\n\tinitNeuralNetwork(shape) {\n\t\tif (!this.state.controls.playing) {\n\t\t\tconst rw = 32;\n\t\t\tconst rh = 32;\n\t\t\tlet xScale = d3.scaleLinear().domain([0, 100]).range([50, 750]);\n\t\t\tlet yScale = d3.scaleLinear().domain([0, 100]).range([500, 0]);\n\t\t\tlet start = { x: 50 - rw / 2, y: 250 - rh / 2 };\n\t\t\tlet stop = { x: 750 - rw / 2, y: 250 - rh / 2 };\n\t\t\tconst link = d3\n\t\t\t\t.linkHorizontal()\n\t\t\t\t.x((d) => d.x + rw / 2)\n\t\t\t\t.y((d) => d.y + rh / 2);\n\t\t\t/* First we figure our how to create the neurons */\n\t\t\t/* GIVEN A SHAPE OF [1,2,2,1] */\n\t\t\tconst layerProportion = [0, 25, 50, 75, 0];\n\t\t\tlet ns = [];\n\t\t\tlet flatns = [];\n\t\t\tns.push([start]);\n\t\t\tflatns.push(start);\n\t\t\tfor (let layer = 1; layer < shape.length - 1; layer++) {\n\t\t\t\tlet dense = [];\n\t\t\t\tfor (let neuron = 0; neuron < shape[layer]; neuron++) {\n\t\t\t\t\t/* First generate neuron */\n\t\t\t\t\tlet aaron = {\n\t\t\t\t\t\tx: xScale(layerProportion[layer]) - rw / 2,\n\t\t\t\t\t\ty: yScale(92 - neuron * 12) - rh / 2,\n\t\t\t\t\t};\n\t\t\t\t\tdense.push(aaron);\n\t\t\t\t\tflatns.push(aaron);\n\t\t\t\t}\n\t\t\t\tns.push(dense);\n\t\t\t}\n\t\t\tflatns.push(stop);\n\t\t\tns.push([stop]);\n\n\t\t\tif (this.state.mode || true) {\n\t\t\t\t/* We start to iterate over ns */\n\t\t\t\tlet links = [];\n\t\t\t\tfor (let layer = shape.length - 1; layer > 0; layer--) {\n\t\t\t\t\tlet interval = -14.5;\n\t\t\t\t\tfor (\n\t\t\t\t\t\tlet prevNeuron = 0;\n\t\t\t\t\t\tprevNeuron < shape[layer - 1];\n\t\t\t\t\t\tprevNeuron++\n\t\t\t\t\t) {\n\t\t\t\t\t\tfor (let neuron = 0; neuron < shape[layer]; neuron++) {\n\t\t\t\t\t\t\tlinks.push(\n\t\t\t\t\t\t\t\tlink({\n\t\t\t\t\t\t\t\t\tsource: {\n\t\t\t\t\t\t\t\t\t\tx: ns[layer - 1][prevNeuron].x + 15.5,\n\t\t\t\t\t\t\t\t\t\ty: ns[layer - 1][prevNeuron].y,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\t\tx: ns[layer][neuron].x - 15,\n\t\t\t\t\t\t\t\t\t\ty: ns[layer][neuron].y + interval,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinterval += 3.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.setState({ rects: flatns });\n\t\t\t\tthis.setState({ links });\n\t\t\t} else {\n\t\t\t\t/* We start to iterate over ns */\n\t\t\t\tlet links = [];\n\t\t\t\tfor (let layer = shape.length - 1; layer > 0; layer--) {\n\t\t\t\t\tlet interval = -14.5;\n\t\t\t\t\tfor (\n\t\t\t\t\t\tlet prevNeuron = 0;\n\t\t\t\t\t\tprevNeuron < shape[layer - 1];\n\t\t\t\t\t\tprevNeuron++\n\t\t\t\t\t) {\n\t\t\t\t\t\tfor (let neuron = 0; neuron < shape[layer]; neuron++) {\n\t\t\t\t\t\t\tlinks.push(\n\t\t\t\t\t\t\t\tlink({\n\t\t\t\t\t\t\t\t\tsource: ns[layer - 1][prevNeuron],\n\t\t\t\t\t\t\t\t\ttarget: ns[layer][neuron],\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinterval += 3.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.setState({ rects: flatns });\n\t\t\t\tthis.setState({ links });\n\t\t\t}\n\t\t} else if (this.state.controls.playing) {\n\t\t\tlet flattenedWeights = flatten(this.state.weightsData);\n\t\t\tthis.setState({ weights: flattenedWeights });\n\t\t}\n\t}\n\n\tchangeModelLr(lrChange) {\n\t\ttf.tidy(() => {\n\t\t\tthis.setState({ lr: lrChange });\n\t\t\treturn undefined;\n\t\t});\n\t}\n\tasync run() {\n\t\tlet playing = !this.state.controls.playing;\n\t\tthis.mutate(\"controls\", \"playing\", playing);\n\t\tif (playing === true) {\n\t\t\tawait this.train(this.state.data.X, this.state.data.y);\n\t\t\tconsole.log(\"epic\");\n\t\t}\n\t}\n\n\tmutate(key, subkey, value) {\n\t\t/* copy of the state */\n\t\ttf.tidy(() => {\n\t\t\tlet state = { ...this.state };\n\t\t\t/* If this.state.key.subkey exists */\n\t\t\tif (key in state && subkey in state[key]) {\n\t\t\t\t/* Mutate the state */\n\t\t\t\tstate[key][subkey] = value;\n\t\t\t\tthis.setState({ state });\n\t\t\t} else {\n\t\t\t\tconsole.error(\"Could not be found in state\");\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\taddModel(model) {\n\t\treturn tf.tidy(() => {\n\t\t\tlet shape = this.state.shape;\n\t\t\tmodel.add(\n\t\t\t\ttf.layers.dense({\n\t\t\t\t\tinputShape: [1],\n\t\t\t\t\tunits: shape[1],\n\t\t\t\t\tactivation: \"relu\",\n\t\t\t\t\tuseBias: true,\n\t\t\t\t})\n\t\t\t);\n\t\t\tfor (let layer = 2; layer < shape.length - 1; layer++) {\n\t\t\t\tmodel.add(\n\t\t\t\t\ttf.layers.dense({\n\t\t\t\t\t\tunits: shape[layer],\n\t\t\t\t\t\tactivation: \"relu\",\n\t\t\t\t\t\tuseBias: true,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t\tmodel.add(\n\t\t\t\ttf.layers.dense({\n\t\t\t\t\tunits: 1,\n\t\t\t\t\tactivation: \"linear\",\n\t\t\t\t\tuseBias: true,\n\t\t\t\t})\n\t\t\t);\n\n\t\t\treturn model;\n\t\t});\n\t}\n\tmodelCompile(lr) {\n\t\tlet model = tf.sequential();\n\t\tthis.addModel(model);\n\t\tmodel.compile({\n\t\t\toptimizer: tf.train.sgd(lr),\n\t\t\tloss: \"meanSquaredError\",\n\t\t});\n\t\treturn model;\n\t}\n\tasync train(X, y) {\n\t\tconst XTensor = tf.tidy(() => {\n\t\t\treturn tf.tensor(X);\n\t\t});\n\t\tconst yTensor = tf.tidy(() => {\n\t\t\treturn tf.tensor(y);\n\t\t});\n\n\t\tconst model = tf.tidy(() => {\n\t\t\treturn this.state.nn;\n\t\t});\n\t\tconst timer = (ms) => new Promise((res) => setTimeout(res, ms));\n\t\t///* Until broken by user */\n\t\tlet play = this.state.controls.playing;\n\t\t////let epoch = 0;\n\t\twhile (play !== false) {\n\t\t\tthis.setState({ duringEpoch: true });\n\t\t\tconst { playing /* speed */ } = this.state.controls;\n\t\t\tplay = playing;\n\t\t\tawait model.fit(XTensor, yTensor, {\n\t\t\t\tepochs: 1,\n\t\t\t});\n\t\t\ttf.tidy(() => {\n\t\t\t\tlet yhatTensor = model.predict(XTensor);\n\t\t\t\tlet yhat = tensorToArray(yhatTensor);\n\t\t\t\tlet loss = tf.losses.meanSquaredError(y, yhat).dataSync()[0];\n\t\t\t\tthis.printParameters(model, loss, yhat, this.state.epoch + 1);\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t\tthis.setState({ duringEpoch: false });\n\t\t\tawait timer(this.state.controls.speed);\n\t\t}\n\t\tthis.setState({ nn: model });\n\t\ttf.dispose(XTensor);\n\t\ttf.dispose(yTensor);\n\t}\n\tasync genTensorData(eqn, scaled) {\n\t\tawait tf.ready();\n\t\ttf.tidy(() => {\n\t\t\tlet XTensor = tf.linspace(-this.state.scale, this.state.scale, 50);\n\t\t\tlet yTensor;\n\t\t\tyTensor = tf.mul(eqn(XTensor), scaled);\n\t\t\tlet yhatTensor = tf.zerosLike(XTensor);\n\t\t\tlet X = tensorToArray(XTensor);\n\t\t\tlet y = tensorToArray(yTensor);\n\t\t\tlet yhat = tensorToArray(yhatTensor);\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\tdata: { X, y },\n\t\t\t\tyhat,\n\t\t\t});\n\t\t\treturn undefined;\n\t\t});\n\t}\n\tprintParameters(model, loss, yhat, epoch) {\n\t\tlet weightsData = [];\n\t\tlet biasesData = [];\n\t\tfor (let i = 0; i < model.getWeights().length; i++) {\n\t\t\t(i % 2 === 0 ? weightsData : biasesData).push(\n\t\t\t\tArray.from(model.getWeights()[i].dataSync())\n\t\t\t);\n\t\t}\n\n\t\tlet lossArray = [...this.state.lossArray, loss];\n\t\tthis.setState({\n\t\t\tbiasesData,\n\t\t\tweightsData,\n\t\t\tloss,\n\t\t\tyhat,\n\t\t\tepoch,\n\t\t\tlossArray,\n\t\t});\n\t\tthis.initNeuralNetwork(this.state.shape);\n\t}\n\tasync asyncPause() {\n\t\tthis.setState({ controls: { ...this.state.controls, playing: false } });\n\t}\n\tasync resetParameters(scale) {\n\t\ttf.dispose(this.state.nn);\n\t\tconst { curve } = this.state;\n\t\tlet eqn;\n\t\tlet optimizer;\n\t\ttf.tidy(() => {\n\t\t\tif (curve === \"sin\") {\n\t\t\t\teqn = tf.sin;\n\t\t\t} else if (curve === \"tanh\") {\n\t\t\t\teqn = tf.tanh;\n\t\t\t} else if (curve === \"cos\") {\n\t\t\t\teqn = tf.cos;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t});\n\t\tawait this.genTensorData(eqn, scale);\n\t\tconst model = tf.tidy(() => {\n\t\t\treturn this.modelCompile(this.state.lr);\n\t\t});\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tepoch: 0,\n\t\t\tloss: null,\n\t\t\tweights: [],\n\t\t\tnn: model,\n\t\t\tlossArray: [],\n\t\t});\n\t\ttf.dispose(optimizer);\n\t}\n\n\tasync reset(scale) {\n\t\tthis.asyncPause();\n\t\tthis.resetParameters(scale);\n\t}\n\tasync componentDidMount() {\n\t\ttf.setBackend(\"cpu\");\n\t\tthis.genTensorData(tf.sin, this.state.scale);\n\t\tthis.initNeuralNetwork(this.state.shape);\n\t\tconst model = tf.tidy(() => {\n\t\t\treturn this.modelCompile(0.01);\n\t\t});\n\t\tthis.setState({ nn: model });\n\t}\n\tshouldComponentUpdate() {\n\t\tif (this.state.duringEpoch) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\trender() {\n\t\t/* Destructure State*/\n\t\tconst {\n\t\t\tshape,\n\t\t\tscale,\n\t\t\ttrans,\n\t\t\tweightsData,\n\t\t\tbiasesData,\n\t\t\tyhat,\n\t\t\trects,\n\t\t\tlinks,\n\t\t\tweights,\n\t\t\tmode,\n\t\t\tepoch,\n\t\t\tcurve,\n\t\t\tlr,\n\t\t\tloss,\n\t\t\tcontrols,\n\t\t\tdata,\n\t\t} = this.state;\n\t\tconst { playing, speed } = controls;\n\t\tconst { X, y } = data;\n\n\t\tlet newShape = [...shape];\n\t\tnewShape.splice(0, 1);\n\t\tnewShape.splice(newShape.length - 1, 1);\n\t\tconst lrs = [0.001, 0.01, 0.1, 0.3, (1.0).toFixed(1)];\n\t\tconst dataSets = [\n\t\t\t{ label: \"sin\", eqn: tf.sin, scale: 5 },\n\t\t\t{ label: \"cos\", eqn: tf.cos, scale: 5 },\n\t\t\t{ label: \"tanh\", eqn: tf.tanh, scale: 5 },\n\t\t];\n\n\t\t/* Destructure render */\n\t\tconst PlayButtonClick = (\n\t\t\t// eslint-disable-next-line\n\t\t\t<Fab\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: !this.state.controls.playing\n\t\t\t\t\t\t? \"#175676\"\n\t\t\t\t\t\t: \"#D62839\",\n\t\t\t\t\tcolor: \"white\",\n\t\t\t\t}}\n\t\t\t\tdisableTouchRipple\n\t\t\t\tonClick={() => this.run()}\n\t\t\t>\n\t\t\t\t{!playing ? <PlayArrow /> : <Stop />}\n\t\t\t</Fab>\n\t\t);\n\t\tconst controlsReg = (\n\t\t\t<CardActions>\n\t\t\t\t<Tooltip title=\"reset\" arrow>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tdisabled={playing}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Replay />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t\t{PlayButtonClick}\n\t\t\t\t<Tooltip title=\"slomo\" arrow>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: speed === 0 ? \"grey\" : \"#FFC006\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tcontrols: {\n\t\t\t\t\t\t\t\t\t...controls,\n\t\t\t\t\t\t\t\t\tspeed: speed === 0 ? 100 : 0,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SlowMotionVideo />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t</CardActions>\n\t\t);\n\t\tconst controlsBackProp = (\n\t\t\t<CardActions>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\tawait this.anim();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tREPLAY\n\t\t\t\t</Button>\n\t\t\t</CardActions>\n\t\t);\n\n\t\tconst controlCenter = (\n\t\t\t<Box width={400}>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: \"#4BA3C3\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tControl Center\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<div on></div>\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t\t\t{this.state.mode\n\t\t\t\t\t\t\t\t\t\t? \"Click to go back\"\n\t\t\t\t\t\t\t\t\t\t: \"Click to see Backpropagation\"}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tarrow\n\t\t\t\t\t\t\tplacement=\"right-start\"\n\t\t\t\t\t\t\topen={this.state.loss != null}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tdisabled={this.state.loss == null}\n\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\tconst timer = (ms) =>\n\t\t\t\t\t\t\t\t\t\tnew Promise((res) =>\n\t\t\t\t\t\t\t\t\t\t\tsetTimeout(res, ms)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tlet formattedWeights = formatWeightArray(\n\t\t\t\t\t\t\t\t\t\tweightsData,\n\t\t\t\t\t\t\t\t\t\tshape\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tlet nn = new NeuralNetwork(\n\t\t\t\t\t\t\t\t\t\tshape,\n\t\t\t\t\t\t\t\t\t\tformattedWeights,\n\t\t\t\t\t\t\t\t\t\tbiasesData\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tnn.forward(X[0], y[0]);\n\t\t\t\t\t\t\t\t\tnn.backward();\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t...this.state,\n\t\t\t\t\t\t\t\t\t\ttrans: nn,\n\t\t\t\t\t\t\t\t\t\tmode: !mode,\n\t\t\t\t\t\t\t\t\t\tcontrols: {\n\t\t\t\t\t\t\t\t\t\t\t...this.state.controls,\n\t\t\t\t\t\t\t\t\t\t\tplaying: false,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tawait timer(1000);\n\t\t\t\t\t\t\t\t\tthis.setState({ nshow: 1 });\n\t\t\t\t\t\t\t\t\tconst anim = async () => {\n\t\t\t\t\t\t\t\t\t\twhile (this.state.nshow < 19) {\n\t\t\t\t\t\t\t\t\t\t\tawait timer(1000);\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\tnshow: (this.state.nshow += 8),\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tawait this.anim();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography variant=\"h4\">\n\t\t\t\t\t\t\t\t\tEpoch: {epoch}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\tloss:\n\t\t\t\t\t\t\t{loss == null ? \"\" : loss.toFixed(6)}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t{this.state.mode ? controlsBackProp : controlsReg}\n\t\t\t\t\t\t<CardActions></CardActions>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\n\t\t\t\t<Box marginTop={5}>\n\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: \"#4BA3C3\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCustomization\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t\t\t\tLearning Rate\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t{lrs.map((num, i) => (\n\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\tdisabled={playing}\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tlabel={`${num}`}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\t\t\t\tlr === num ? \"white\" : \"grey\",\n\t\t\t\t\t\t\t\t\t\t\tbackground:\n\t\t\t\t\t\t\t\t\t\t\t\tlr === num\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"#175676\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"lightgrey\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\ttf.tidy(() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.changeModelLr(num);\n\t\t\t\t\t\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Chip>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t\t\t\tData Set\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t{dataSets.map((item, i) => (\n\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\tdisabled={playing}\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tlabel={item.label}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\t\t\t\tcurve === item.label\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"white\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"grey\",\n\t\t\t\t\t\t\t\t\t\t\tbackground:\n\t\t\t\t\t\t\t\t\t\t\t\tcurve === item.label\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"#175676\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"lightgrey\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\tshape,\n\t\t\t\t\t\t\t\t\t\t\t\tcurve: item.label,\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t\t\t\t\t\ttf.tidy(() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.genTensorData(\n\t\t\t\t\t\t\t\t\t\t\t\t\titem.eqn,\n\t\t\t\t\t\t\t\t\t\t\t\t\titem.scale\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Chip>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t\t\t\tNeurons\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#175676\" }}\n\t\t\t\t\t\t\t\t\tdefaultValue={4}\n\t\t\t\t\t\t\t\t\tdisabled={playing}\n\t\t\t\t\t\t\t\t\taria-labelledby=\"discrete-slider\"\n\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\t\t\tmarks\n\t\t\t\t\t\t\t\t\tonChange={(e, n) => {\n\t\t\t\t\t\t\t\t\t\tthis.setState({ sliderVal: n });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\t\tmax={8}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={playing}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tlet a = shape;\n\t\t\t\t\t\t\t\t\t\tconsole.log(a.length);\n\t\t\t\t\t\t\t\t\t\tif (a.length < 5) {\n\t\t\t\t\t\t\t\t\t\t\ta[\n\t\t\t\t\t\t\t\t\t\t\t\ta.length - 1\n\t\t\t\t\t\t\t\t\t\t\t] = this.state.sliderVal;\n\t\t\t\t\t\t\t\t\t\t\ta.push(1);\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ shape: a });\n\t\t\t\t\t\t\t\t\t\t\tthis.initNeuralNetwork(a);\n\t\t\t\t\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t+\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={playing}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tlet a = shape;\n\t\t\t\t\t\t\t\t\t\tconsole.log(a.length);\n\t\t\t\t\t\t\t\t\t\tif (a.length > 2) {\n\t\t\t\t\t\t\t\t\t\t\ta.splice(a.length - 2, 1);\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ shape: a });\n\t\t\t\t\t\t\t\t\t\t\tthis.initNeuralNetwork(a);\n\t\t\t\t\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t–\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t\tconst scatter = (\n\t\t\t<Box marginLeft={10}>\n\t\t\t\t<Box>\n\t\t\t\t\t<ScatterPlot\n\t\t\t\t\t\twidth={300}\n\t\t\t\t\t\theight={300}\n\t\t\t\t\t\tpadding={0}\n\t\t\t\t\t\tstart={-scale}\n\t\t\t\t\t\tstop={scale}\n\t\t\t\t\t\tX={X}\n\t\t\t\t\t\ty={y}\n\t\t\t\t\t\tyhat={yhat}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t\t<Box marginTop={10}>\n\t\t\t\t\t<Loss lossArray={this.state.lossArray} loss={loss} />\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\n\t\treturn (\n\t\t\t<div id=\"app\">\n\t\t\t\t<AppBar\n\t\t\t\t\tposition=\"static\"\n\t\t\t\t\tstyle={{ background: \"#175676\", color: \"white\" }}\n\t\t\t\t>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\tBackpropagation Visualizer\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\n\t\t\t\t<Box display=\"flex\" justifyContent=\"center\" marginTop={10}>\n\t\t\t\t\t{controlCenter}\n\t\t\t\t\t<Box marginLeft={10}>\n\t\t\t\t\t\t<div className=\"regular\">\n\t\t\t\t\t\t\t<PlayGround\n\t\t\t\t\t\t\t\ttrans={trans}\n\t\t\t\t\t\t\t\tinput={X[0]}\n\t\t\t\t\t\t\t\tlabel={y[0]}\n\t\t\t\t\t\t\t\tshapedWeights={weightsData}\n\t\t\t\t\t\t\t\tshape={shape}\n\t\t\t\t\t\t\t\tbiases={biasesData}\n\t\t\t\t\t\t\t\tweights={weights}\n\t\t\t\t\t\t\t\trects={rects}\n\t\t\t\t\t\t\t\tlinks={links}\n\t\t\t\t\t\t\t\tplaying={\n\t\t\t\t\t\t\t\t\tplaying\n\t\t\t\t\t\t\t\t\t\t? speed === 0\n\t\t\t\t\t\t\t\t\t\t\t? \"edgeForward\"\n\t\t\t\t\t\t\t\t\t\t\t: \"edgeSlowed\"\n\t\t\t\t\t\t\t\t\t\t: \"edgePaused\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tshow={playing}\n\t\t\t\t\t\t\t\tnshow={this.state.nshow}\n\t\t\t\t\t\t\t\tbshow={this.state.bshow}\n\t\t\t\t\t\t\t\tmicroShow={this.state.microShow}\n\t\t\t\t\t\t\t\tmode={mode}\n\t\t\t\t\t\t\t\tbackward={this.state.direction}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.asyncPause();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></PlayGround>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Box>\n\t\t\t\t\t{scatter}\n\t\t\t\t</Box>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}