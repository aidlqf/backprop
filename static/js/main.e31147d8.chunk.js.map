{"version":3,"sources":["header.svg","components/implementations/svg/Legend.js","components/implementations/svg/Arrow.js","components/implementations/graphs/NeuralNetworkComponent.js","components/implementations/graphs/ScatterPlot.js","components/implementations/graphs/AnimatedScatterPlot.js","components/implementations/graphs/Loss.js","components/implementations/article/Typeset.js","components/implementations/article/LinearFunction.js","components/implementations/article/assets/forward.svg","components/implementations/article/NestedFunction.js","components/implementations/article/assets/nn.svg","components/implementations/article/assets/backward.svg","components/implementations/article/LinearScatter.js","components/implementations/article/ContourLoss.js","components/implementations/article/SubTool.js","components/implementations/article/Explanation.js","components/implementations/app/assets/controlcenter.gif","components/implementations/app/assets/customization.gif","components/implementations/app/assets/nn.png","components/implementations/app/assets/scatter.gif","nnMiniLibrary/implementations/Neuron.js","nnMiniLibrary/implementations/Loss.js","nnMiniLibrary/implementations/NeuralNetwork.js","nnMiniLibrary/implementations/Tools.js","Utils/implementations/Draw.js","components/implementations/app/MainTool.js","App.js","components/implementations/article/Header.js","reportWebVitals.js","index.js"],"names":["Legend","width","height","className","overflow","fill","fontFamily","fontSize","x","y","source","target","color","isAnimating","id","orient","markerWidth","markerHeight","refX","refY","d","markerEnd","stroke","NeuralNetworkComponent","props","state","array","flattendArray","i","length","e","push","val","array3d","j","k","this","isUndefined","playing","mode","shapedLinks","shapedWeights","shapedRects","miniNN","subEpoch","keyFrameLoss","keyFrameLayer","link","input","label","children","d3","graphConnectionColor","squareWidth","VerticalArrow","xStart","yStart","dirIsUp","vector","Arrow","nn","map","layer","neuron","moving","colorChange","isUndefined3d","currentWeight","sw","Math","abs","s","gradient","model","dWeights","gradientWithLr","select","transition","duration","ease","attr","strokeWidth","actColor","beforeUpdate","brighter","actStep","lr","dActStep","Component","ScatterPlot","node","formattedPoints","selectAll","data","enter","append","_","style","a","padding","start","stop","container","svg","xScale","domain","range","yScale","xAxis","scale","yAxis","call","X","yhat","dataSet","remove","plotPoints","AnimatedScatterPlot","potential","times","realYhat","zeroArray","potentialYhat","xNum","Loss","ticks","lossArray","loss","lossMin","lossMax","$","inlineLaTeX","math","$$","blockLaTeX","LinearScatter","weight","bias","line","show","y_pred","len","tf","yTensor","y_predTensor","dataSync","output","Array","increment","initDomain","initRange","computeLine","initLine","setState","dataGenerator","Box","display","justifyContent","filter","marginLeft","Card","variant","CardContent","Slider","value","onChange","n","newLine","min","step","max","valueLabelDisplay","toFixed","Button","size","onClick","ContourLoss","m","b","summed","pow","darkness","values","thresholds","contours","join","ms","SubTool","playButton","linreg","meanSquaredError","rsquared","hyperparams","learningRate","epochs","speed","tunableparams","generateData","bind","linearRegression","handleSlider","reset","mean","XTensor","yPred","h","shape","dlossdm","dlossdb","lossValue","from","timer","Promise","res","setTimeout","upperBounds","changeSpeed","event","num","precision","marginTop","marginRight","Typography","component","toPrecision","IconButton","Replay","Fab","background","disableTouchRipple","PlayArrow","Stop","SlowMotionVideo","isFinite","Explanation","introduction","disabled","pointerEvents","type","paper","src","forwardSVG","backwardSVG","maxWidth","Neuron","weights","array1","array2","item","dvalues","oppositeParameter","mult","reduce","dvalue","numInputs","dSumArray","inputs","activation","sum","multStep","sumStep","dSum","dSumStep","dBias","dInputs","dInputsSum","MeanSquaredErrorLoss","subStep","squareStep","NeuralNetwork","biases","dense","array1Length","array2Length","console","error","result","lastLayer","outputs","forward","ReLU","linear","add","zeros","backward","dValues","dLinear","dReLU","gd","dweight","newWeights","newBias","change","calcChange","l","formatWeightArray","uweights","weightSet","t","w","toFunc2DArray","arr","fixed","flatten","getRandomInt","floor","random","tensorToArray","tensor","generateLinearScale","generateLink","adjustment","generateNeuronPlacement","layerProportion","startNeuron","stopNeuron","shapedNeurons","flattenedNeurons","coordinate","generateLinksPlacement","linksGenerator","perLink","layerLinks","neuronLinks","nextNeuron","MainTool","tensorFlowNN","epoch","cpyEpoch","biasesData","weightsData","rects","direction","curve","controls","sliderVal","stopRender","keyFrameScatter","lossSavings","lossDifference","singleInputExample","singleLabelExample","newOutput","controlCenterHelp","customizationHelp","neuralNetworkHelp","scatterHelp","lossHelp","lossChange","singleInputIndex","initNeuralNetwork","run","genTensorData","mutate","train","printParameters","resetParameters","asyncPause","changeModelLr","anim","randomInputGeneration","randomInput","tools","formattedWeights","clone","update","updatedLoss","inputArray","inputArrayLength","outputArray","forwardAll","flattenedWeights","draw","splice","lrChange","key","subkey","inputShape","units","useBias","addModel","compile","optimizer","sgd","play","fit","yhatTensor","predict","eqn","scaled","volume","getWeights","modelCompile","dataSets","PlayButtonClick","controlsReg","CardActions","Tooltip","title","arrow","controlsBackProp","controlCenter","Help","placement","open","formatValue","Chip","defaultValue","aria-labelledby","marks","scatter","position","bottom","right","neuralNetwork","left","outlineColor","paddingBottom","Dialog","PaperProps","backgroundColor","DialogActions","Close","DialogContent","controlGif","alt","marginBottom","customGif","nnDiagram","scatterGif","App","reactGA","initialize","pageview","header","headerSvg","acks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e31147d8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header.f51054ca.svg\";","import React from \"react\";\nimport \"../d3.css\";\n\nfunction Legend() {\n\tconst height = 10;\n\tconst width = 100;\n\treturn (\n\t\t<div>\n\t\t\t<svg\n\t\t\t\twidth={width}\n\t\t\t\theight={height}\n\t\t\t\tclassName=\"grad\"\n\t\t\t\toverflow=\"visible\"\n\t\t\t>\n\t\t\t\t<text\n\t\t\t\t\tfill=\"grey\"\n\t\t\t\t\tfontFamily=\"sans-serif\"\n\t\t\t\t\tfontSize=\"10px\"\n\t\t\t\t\tx={0}\n\t\t\t\t\ty={-13}\n\t\t\t\t>\n\t\t\t\t\tColor and stroke\n\t\t\t\t</text>\n\n\t\t\t\t<text\n\t\t\t\t\tfill=\"grey\"\n\t\t\t\t\tfontFamily=\"sans-serif\"\n\t\t\t\t\tfontSize=\"10px\"\n\t\t\t\t\tx={0}\n\t\t\t\t\ty={-4}\n\t\t\t\t>\n\t\t\t\t\tindicate weight\n\t\t\t\t</text>\n\n\t\t\t\t<text fontSize=\"12px\" fill=\"grey\" x={-0.5} y={18}>\n\t\t\t\t\t|\n\t\t\t\t</text>\n\t\t\t\t<text fontSize=\"13px\" fill=\"grey\" x={-2.5} y={28}>\n\t\t\t\t\t–\n\t\t\t\t</text>\n\n\t\t\t\t<text fontSize=\"12px\" fill=\"grey\" x={width / 2 - 2} y={18}>\n\t\t\t\t\t|\n\t\t\t\t</text>\n\t\t\t\t<text fontSize=\"13px\" fill=\"grey\" x={width / 2 - 4.5} y={30}>\n\t\t\t\t\t0\n\t\t\t\t</text>\n\n\t\t\t\t<text fontSize=\"12px\" fill=\"grey\" x={width - 2} y={18}>\n\t\t\t\t\t|\n\t\t\t\t</text>\n\t\t\t\t<text fontSize=\"13px\" fill=\"grey\" x={width - 3 - 1.5} y={28}>\n\t\t\t\t\t+\n\t\t\t\t</text>\n\t\t\t</svg>\n\t\t</div>\n\t);\n}\n\nexport default Legend;\n","import React from \"react\";\nimport \"../d3.css\";\nconst Legend = ({ source, target, color, isAnimating }) => (\n\t<g>\n\t\t<defs>\n\t\t\t<marker\n\t\t\t\tid=\"head\"\n\t\t\t\torient=\"auto\"\n\t\t\t\tmarkerWidth=\"3\"\n\t\t\t\tmarkerHeight=\"4\"\n\t\t\t\trefX=\"0.1\"\n\t\t\t\trefY=\"2\"\n\t\t\t>\n\t\t\t\t<path d=\"M0,0 V4 L2,2 Z\" fill={color} />\n\t\t\t</marker>\n\t\t</defs>\n\t\t<path\n\t\t\tclassName={!isAnimating ? \"arrow\" : \"absorb\"}\n\t\t\tid=\"arrow-line\"\n\t\t\tmarkerEnd=\"url(#head)\"\n\t\t\tfill=\"none\"\n\t\t\tstroke={color}\n\t\t\td={`M${source.x},${source.y}, ${target.x}, ${target.y}`}\n\t\t/>\n\t</g>\n);\nexport default Legend;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport { Help } from \"@material-ui/icons\";\nimport { IconButton } from \"@material-ui/core\";\nimport Legend from \"../svg/Legend\";\nimport Arrow from \"../svg/Arrow\";\nimport \"../d3.css\";\n\nclass NeuralNetworkComponent extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\tflatten(array) {\n\t\tlet flattendArray = [];\n\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\tfor (let e = 0; e < array[i].length; e++) {\n\t\t\t\tflattendArray.push(array[i][e]);\n\t\t\t}\n\t\t}\n\t\treturn flattendArray;\n\t}\n\tisEmpty(array) {\n\t\treturn array.length === 0;\n\t}\n\tisUndefined(val) {\n\t\treturn typeof val === \"undefined\";\n\t}\n\tisUndefined3d(array3d, i, j, k) {\n\t\treturn (\n\t\t\tthis.isUndefined(array3d[i]) ||\n\t\t\tthis.isUndefined(array3d[i][j]) ||\n\t\t\tthis.isUndefined(array3d[i][j][k])\n\t\t);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tplaying,\n\t\t\tmode,\n\t\t\tshapedLinks,\n\t\t\tshapedWeights,\n\t\t\tshapedRects,\n\t\t\tminiNN,\n\t\t\tsubEpoch,\n\t\t\tkeyFrameLoss,\n\t\t\tkeyFrameLayer,\n\t\t\tinput,\n\t\t\tlabel,\n\t\t\tchildren,\n\t\t} = this.props;\n\t\tconst link = d3\n\t\t\t.linkHorizontal()\n\t\t\t.x((d) => d.x)\n\t\t\t.y((d) => d.y);\n\t\tconst negWeight = \"#D62839\";\n\t\tconst posWeight = \"#4BA3C3\";\n\t\tconst graphConnectionColor = \"black\";\n\t\tconst squareWidth = 32;\n\n\t\tconst VerticalArrow = (xStart, yStart, length, dirIsUp, color) => {\n\t\t\tconst vector = dirIsUp ? -length : length;\n\t\t\treturn (\n\t\t\t\t<Arrow\n\t\t\t\t\tsource={{ x: xStart, y: yStart }}\n\t\t\t\t\ttarget={{ x: xStart, y: yStart + vector }}\n\t\t\t\t\tcolor={color}\n\t\t\t\t\tisAnimating={subEpoch === \"transition\"}\n\t\t\t\t/>\n\t\t\t);\n\t\t};\n\t\tconst keyFrameLossCalc = () => {\n\t\t\tif (keyFrameLoss === 1) {\n\t\t\t\treturn \"edgeForward\";\n\t\t\t} else if (keyFrameLoss === 2) {\n\t\t\t\treturn \"edgeBackward\";\n\t\t\t} else {\n\t\t\t\treturn \"edgePaused\";\n\t\t\t}\n\t\t};\n\n\t\tconst nn = (\n\t\t\t<svg id=\"p\" width=\"810\" height=\"500\" overflow=\"visible\">\n\t\t\t\t<g id=\"ee\">\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M 750, 234 L 750, 300\"\n\t\t\t\t\t\tstroke={\n\t\t\t\t\t\t\tkeyFrameLoss === 2 || keyFrameLoss === 1\n\t\t\t\t\t\t\t\t? \"orange\"\n\t\t\t\t\t\t\t\t: graphConnectionColor\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tmode && keyFrameLoss > 0\n\t\t\t\t\t\t\t\t? keyFrameLossCalc()\n\t\t\t\t\t\t\t\t: playing\n\t\t\t\t\t\t}\n\t\t\t\t\t></path>\n\n\t\t\t\t\t<path\n\t\t\t\t\t\td={link({\n\t\t\t\t\t\t\tsource: { x: 766, y: 315 },\n\t\t\t\t\t\t\ttarget: { x: 890, y: 430 },\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tstroke={graphConnectionColor}\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tclassName={playing}\n\t\t\t\t\t></path>\n\t\t\t\t\t<path\n\t\t\t\t\t\td={link({\n\t\t\t\t\t\t\tsource: { x: 766, y: 250 },\n\t\t\t\t\t\t\ttarget: { x: 890, y: 150 },\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tstroke={graphConnectionColor}\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tclassName={playing}\n\t\t\t\t\t></path>\n\t\t\t\t\t{shapedLinks.map((layer, i) => {\n\t\t\t\t\t\treturn layer.map((neuron, j) => {\n\t\t\t\t\t\t\tlet moving = \"edgePaused\";\n\t\t\t\t\t\t\tlet color = \"orange\";\n\t\t\t\t\t\t\tlet colorChange = false;\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tmode &&\n\t\t\t\t\t\t\t\tsubEpoch === \"forward\" &&\n\t\t\t\t\t\t\t\ti === keyFrameLayer\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tmoving = \"edgeForward\";\n\t\t\t\t\t\t\t\tcolorChange = true;\n\t\t\t\t\t\t\t\tcolor = \"orange\";\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tmode &&\n\t\t\t\t\t\t\t\tsubEpoch === \"backward\" &&\n\t\t\t\t\t\t\t\ti === keyFrameLayer\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tmoving = \"edgeBackward\";\n\t\t\t\t\t\t\t\tcolorChange = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn neuron.map((d, k) => {\n\t\t\t\t\t\t\t\tconst isUndefined = this.isUndefined3d(\n\t\t\t\t\t\t\t\t\tshapedWeights,\n\t\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\t\t\tk\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst currentWeight = isUndefined\n\t\t\t\t\t\t\t\t\t? []\n\t\t\t\t\t\t\t\t\t: shapedWeights[i][j][k];\n\t\t\t\t\t\t\t\tconst sw = isUndefined\n\t\t\t\t\t\t\t\t\t? 1\n\t\t\t\t\t\t\t\t\t: 2 * Math.abs(currentWeight) + 0.1;\n\t\t\t\t\t\t\t\tconst s = isUndefined\n\t\t\t\t\t\t\t\t\t? \"lightgrey\"\n\t\t\t\t\t\t\t\t\t: currentWeight > 0\n\t\t\t\t\t\t\t\t\t? posWeight\n\t\t\t\t\t\t\t\t\t: negWeight;\n\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tmode &&\n\t\t\t\t\t\t\t\t\tsubEpoch === \"update\" &&\n\t\t\t\t\t\t\t\t\tthis.props.isAnimating === true\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tlet gradient =\n\t\t\t\t\t\t\t\t\t\t2 * miniNN.model[i][j].dWeights[k];\n\t\t\t\t\t\t\t\t\tlet gradientWithLr = gradient * 0.01;\n\n\t\t\t\t\t\t\t\t\td3.select(\"#nn\")\n\t\t\t\t\t\t\t\t\t\t.select(\"#p\")\n\t\t\t\t\t\t\t\t\t\t.select(\"#ee\")\n\t\t\t\t\t\t\t\t\t\t.select(`#cpath${i}${j}${k}`)\n\t\t\t\t\t\t\t\t\t\t.transition()\n\t\t\t\t\t\t\t\t\t\t.duration(750)\n\t\t\t\t\t\t\t\t\t\t.ease(d3.easeExpIn)\n\t\t\t\t\t\t\t\t\t\t.attr(\"stroke-width\", sw - gradient)\n\t\t\t\t\t\t\t\t\t\t.transition()\n\t\t\t\t\t\t\t\t\t\t.duration(750)\n\t\t\t\t\t\t\t\t\t\t.ease(d3.easeExpOut)\n\t\t\t\t\t\t\t\t\t\t.attr(\n\t\t\t\t\t\t\t\t\t\t\t\"stroke-width\",\n\t\t\t\t\t\t\t\t\t\t\tsw - gradientWithLr\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\tid={`cpath${i}${j}${k}`}\n\t\t\t\t\t\t\t\t\t\tkey={k}\n\t\t\t\t\t\t\t\t\t\td={d}\n\t\t\t\t\t\t\t\t\t\tclassName={mode ? moving : playing}\n\t\t\t\t\t\t\t\t\t\tstrokeWidth={sw}\n\t\t\t\t\t\t\t\t\t\tstroke={colorChange ? color : s}\n\t\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t})}\n\t\t\t\t\t<rect\n\t\t\t\t\t\tx={34}\n\t\t\t\t\t\ty={234}\n\t\t\t\t\t\twidth={squareWidth}\n\t\t\t\t\t\theight={squareWidth}\n\t\t\t\t\t\tfill=\"darkgrey\"\n\t\t\t\t\t></rect>\n\n\t\t\t\t\t{shapedRects.map((neuron, i) =>\n\t\t\t\t\t\tneuron.map((d, j) => {\n\t\t\t\t\t\t\tlet actColor = false;\n\t\t\t\t\t\t\tconst beforeUpdate =\n\t\t\t\t\t\t\t\tsubEpoch === \"backward\" ||\n\t\t\t\t\t\t\t\tsubEpoch === \"transition\";\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t(mode && i <= keyFrameLayer) ||\n\t\t\t\t\t\t\t\tbeforeUpdate ||\n\t\t\t\t\t\t\t\tsubEpoch === \"update\"\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tactColor = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\t\t\t\tx={d.x}\n\t\t\t\t\t\t\t\t\t\ty={d.y}\n\t\t\t\t\t\t\t\t\t\twidth={squareWidth}\n\t\t\t\t\t\t\t\t\t\theight={squareWidth}\n\t\t\t\t\t\t\t\t\t\tfill={d3\n\t\t\t\t\t\t\t\t\t\t\t.rgb(104, 104, 104)\n\t\t\t\t\t\t\t\t\t\t\t.brighter(\n\t\t\t\t\t\t\t\t\t\t\t\tactColor\n\t\t\t\t\t\t\t\t\t\t\t\t\t? miniNN.model[i][j]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.actStep +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.lr\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 1\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\tstroke={\"black\"}\n\t\t\t\t\t\t\t\t\t\tstrokeWidth={2}\n\t\t\t\t\t\t\t\t\t\tclassName=\"bar\"\n\t\t\t\t\t\t\t\t\t></rect>\n\n\t\t\t\t\t\t\t\t\t{miniNN !== null &&\n\t\t\t\t\t\t\t\t\tmode &&\n\t\t\t\t\t\t\t\t\tbeforeUpdate &&\n\t\t\t\t\t\t\t\t\ti >= keyFrameLayer - 1\n\t\t\t\t\t\t\t\t\t\t? VerticalArrow(\n\t\t\t\t\t\t\t\t\t\t\t\td.x + 16,\n\t\t\t\t\t\t\t\t\t\t\t\td.y + 16,\n\t\t\t\t\t\t\t\t\t\t\t\tMath.abs(\n\t\t\t\t\t\t\t\t\t\t\t\t\tminiNN.model[i][j].dActStep\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\tminiNN.model[i][j].dActStep < 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\"orange\"\n\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t)}\n\n\t\t\t\t\t<rect\n\t\t\t\t\t\tx={734}\n\t\t\t\t\t\ty={300}\n\t\t\t\t\t\twidth={squareWidth}\n\t\t\t\t\t\theight={squareWidth}\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tstroke=\"black\"\n\t\t\t\t\t></rect>\n\t\t\t\t\t<text\n\t\t\t\t\t\tfontFamily=\"sans-serif\"\n\t\t\t\t\t\tfontSize=\"12px\"\n\t\t\t\t\t\tx={739}\n\t\t\t\t\t\ty={318}\n\t\t\t\t\t>\n\t\t\t\t\t\tloss\n\t\t\t\t\t</text>\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t);\n\t\treturn (\n\t\t\t<div id=\"nn\">\n\t\t\t\t{nn}\n\t\t\t\t<Legend />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NeuralNetworkComponent;\n","import React, { Component } from \"react\";\nimport \"../d3.css\";\nimport * as d3 from \"d3\";\n\nclass ScatterPlot extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\tplotPoints(node, formattedPoints, select) {\n\t\t/* Now need to plot said data */\n\t\tnode.selectAll(\"circle\")\n\t\t\t.data(formattedPoints)\n\t\t\t.enter()\n\t\t\t.append(\"circle\")\n\t\t\t.attr(\"cx\", (d) => d.x)\n\t\t\t.attr(\"cy\", (d) => d.y)\n\t\t\t.attr(\"r\", (_, i) => (i === select ? 5 : 2))\n\t\t\t.style(\"fill\", (_, i) => (i === select ? \"orange\" : \"grey\"));\n\t}\n\t/* This is where we initialize the Scatter Plot */\n\tasync componentDidMount() {\n\t\tconst { width, height, padding, start, stop, id } = this.props;\n\t\tconst container = d3.select(`#nice${id}`);\n\n\t\tconst svg = container\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.style(\"overflow\", \"visible\");\n\t\tsvg.append(\"rect\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.attr(\"class\", \"cord\");\n\t\tlet xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([0, width - 2 * padding]);\n\n\t\tlet yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([height - 2 * padding, 0]);\n\n\t\tlet xAxis = d3.axisBottom().scale(xScale);\n\t\tlet yAxis = d3.axisRight().scale(yScale);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"transform\", `translate(0,${height - 2 * padding})`)\n\t\t\t.call(xAxis);\n\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"transform\", \"translate(\" + (width - 2 * padding) + \",0)\")\n\t\t\t.call(yAxis);\n\n\t\tsvg.append(\"line\")\n\t\t\t.attr(\"x1\", 0)\n\t\t\t.attr(\"y1\", (height + 1) / 2)\n\t\t\t.attr(\"x2\", width)\n\t\t\t.attr(\"y2\", (height + 1) / 2)\n\t\t\t.attr(\"class\", \"split\");\n\t\tsvg.append(\"line\")\n\t\t\t.attr(\"x1\", (width + 1) / 2)\n\t\t\t.attr(\"y1\", 0)\n\t\t\t.attr(\"x2\", (width + 1) / 2)\n\t\t\t.attr(\"y2\", height)\n\t\t\t.attr(\"class\", \"split\");\n\n\t\tsvg.append(\"path\")\n\t\t\t.attr(\"id\", \"epic\")\n\t\t\t.attr(\"stroke\", \"none\")\n\t\t\t.attr(\"fill\", \"none\");\n\t}\n\tcomponentDidUpdate() {\n\t\tconst {\n\t\t\twidth,\n\t\t\theight,\n\t\t\tpadding,\n\t\t\tstart,\n\t\t\tstop,\n\t\t\tX,\n\t\t\ty,\n\t\t\tyhat,\n\t\t\tid,\n\t\t\tselect,\n\t\t} = this.props;\n\t\tlet xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([0, width - 2 * padding]);\n\n\t\tlet yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([height - 2 * padding, 0]);\n\t\tconst svg = d3.select(`#nice${id}`).select(\"svg\");\n\t\tlet dataSet = [];\n\t\tfor (let i = 0; i < X.length; i++) {\n\t\t\tdataSet.push({\n\t\t\t\tx: xScale(X[i]),\n\t\t\t\ty: yScale(y[i]),\n\t\t\t});\n\t\t}\n\t\tlet a = [];\n\t\tfor (let i = 0; i < X.length; i++) {\n\t\t\ta.push([xScale(X[i]), yScale(yhat[i])]);\n\t\t}\n\t\tsvg.selectAll(\"circle\").remove();\n\t\tthis.plotPoints(svg, dataSet, select);\n\n\t\tsvg.select(\"#epic\")\n\t\t\t.transition()\n\t\t\t.duration(this.props.duration)\n\t\t\t.attr(\"d\", d3.line()(a))\n\t\t\t.attr(\"stroke\", \"black\")\n\t\t\t.attr(\"fill\", \"none\");\n\t}\n\n\trender() {\n\t\tconst { id } = this.props;\n\t\treturn <div id={`nice${id}`}></div>;\n\t}\n}\n\nexport default ScatterPlot;\n","import React, { Component } from \"react\";\nimport \"../d3.css\";\nimport * as d3 from \"d3\";\nimport { zerosLike } from \"@tensorflow/tfjs-core\";\n\nclass AnimatedScatterPlot extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tplotPoints(node, formattedPoints, select) {\n\t\t/* Now need to plot said data */\n\t\tnode.selectAll(\"circle\")\n\t\t\t.data(formattedPoints)\n\t\t\t.enter()\n\t\t\t.append(\"circle\")\n\t\t\t.attr(\"cx\", (d) => d.x)\n\t\t\t.attr(\"cy\", (d) => d.y)\n\t\t\t.attr(\"r\", (_, i) => (i === select ? 5 : 2))\n\t\t\t.style(\"fill\", (_, i) => (i === select ? \"#4BA3C3\" : \"grey\"));\n\t}\n\t/* This will plot the real line and have an animation till it gets into place */\n\tanimateTruePredictions(svg, a) {\n\t\tsvg.select(\"#epic\")\n\t\t\t.transition()\n\t\t\t.duration(1000)\n\t\t\t.ease(d3.easeLinear)\n\t\t\t.attr(\"d\", d3.line()(a))\n\t\t\t.attr(\"stroke\", \"blue\")\n\t\t\t.attr(\"fill\", \"none\");\n\t}\n\t/* This will plot the potential line and have animation till it gets into place */\n\tanimatePotentialPredictions() {\n\t\t/* We start by plotting the line at 0 points */\n\t\t/* We then use the same path to plot the potential points */\n\t\t/* We use a transition to show the change */\n\t}\n\n\t/* This is where we initialize the Scatter Plot */\n\tasync componentDidMount() {\n\t\tconst { width, height, padding, start, stop, id } = this.props;\n\t\tconst container = d3.select(`#animatedPlot${id}`);\n\n\t\tconst svg = container\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.style(\"overflow\", \"visible\");\n\t\tsvg.append(\"rect\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.attr(\"class\", \"cord\");\n\t\tlet xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([0, width - 2 * padding]);\n\n\t\tlet yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([height - 2 * padding, 0]);\n\n\t\tlet xAxis = d3.axisBottom().scale(xScale);\n\t\tlet yAxis = d3.axisRight().scale(yScale);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"transform\", `translate(0,${height - 2 * padding})`)\n\t\t\t.call(xAxis);\n\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"transform\", \"translate(\" + (width - 2 * padding) + \",0)\")\n\t\t\t.call(yAxis);\n\n\t\tsvg.append(\"line\")\n\t\t\t.attr(\"x1\", 0)\n\t\t\t.attr(\"y1\", (height + 1) / 2)\n\t\t\t.attr(\"x2\", width)\n\t\t\t.attr(\"y2\", (height + 1) / 2)\n\t\t\t.attr(\"class\", \"split\");\n\t\tsvg.append(\"line\")\n\t\t\t.attr(\"x1\", (width + 1) / 2)\n\t\t\t.attr(\"y1\", 0)\n\t\t\t.attr(\"x2\", (width + 1) / 2)\n\t\t\t.attr(\"y2\", height)\n\t\t\t.attr(\"class\", \"split\");\n\n\t\tsvg.append(\"path\")\n\t\t\t.attr(\"id\", \"epic\")\n\t\t\t.attr(\"stroke\", \"none\")\n\t\t\t.attr(\"fill\", \"none\");\n\t}\n\ta() {\n\t\tconst {\n\t\t\twidth,\n\t\t\theight,\n\t\t\tpadding,\n\t\t\tstart,\n\t\t\tstop,\n\t\t\tX,\n\t\t\ty,\n\t\t\tyhat,\n\t\t\tid,\n\t\t\tselect,\n\t\t\tpotential,\n\t\t\ttimes,\n\t\t} = this.props;\n\n\t\tlet xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([0, width - 2 * padding]);\n\n\t\tlet yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([height - 2 * padding, 0]);\n\t\tconst svg = d3.select(`#animatedPlot${id}`).select(\"svg\");\n\t\tlet dataSet = [];\n\t\tfor (let i = 0; i < X.length; i++) {\n\t\t\tdataSet.push({\n\t\t\t\tx: xScale(X[i]),\n\t\t\t\ty: yScale(y[i]),\n\t\t\t});\n\t\t}\n\t\tlet realYhat = [];\n\t\tlet zeroArray = [];\n\t\tlet potentialYhat = [];\n\t\tfor (let i = 0; i < X.length; i++) {\n\t\t\tconst xNum = xScale(X[i]);\n\t\t\trealYhat.push([xNum, yScale(yhat[i])]);\n\t\t\tpotentialYhat.push([xNum, yScale(potential[i])]);\n\t\t\tzeroArray.push([xNum, yScale(0)]);\n\t\t}\n\t\tsvg.selectAll(\"circle\").remove();\n\t\tthis.plotPoints(svg, dataSet, select);\n\t\tif (times === 0) {\n\t\t\tsvg.select(\"#epic\")\n\t\t\t\t.attr(\"id\", \"epic\")\n\t\t\t\t.attr(\"stroke\", \"none\")\n\t\t\t\t.attr(\"fill\", \"none\");\n\t\t}\n\t\tif (times === 2) {\n\t\t\t//do nothing\n\t\t} else if (times !== 2) {\n\t\t\tif (this.props.times === 1) {\n\t\t\t\t/* This is how we plot the point */\n\t\t\t\tsvg.select(\"#epic\")\n\t\t\t\t\t.attr(\"d\", d3.line()(zeroArray))\n\t\t\t\t\t.attr(\"stroke\", \"black\")\n\t\t\t\t\t.attr(\"fill\", \"none\");\n\t\t\t\tsvg.select(\"#epic\")\n\t\t\t\t\t.transition()\n\t\t\t\t\t.duration(1000)\n\t\t\t\t\t.attr(\"d\", d3.line()(realYhat));\n\t\t\t} else if (this.props.times === 4) {\n\t\t\t\tsvg.select(\"#epic\")\n\t\t\t\t\t.attr(\"d\", d3.line()(zeroArray))\n\t\t\t\t\t.attr(\"stroke\", \"orangered\")\n\t\t\t\t\t.attr(\"fill\", \"none\");\n\t\t\t\tsvg.select(\"#epic\")\n\t\t\t\t\t.transition()\n\t\t\t\t\t.duration(1000)\n\t\t\t\t\t.attr(\"d\", d3.line()(potentialYhat));\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tthis.a();\n\t\tconst { id } = this.props;\n\t\treturn <div id={`animatedPlot${id}`}></div>;\n\t}\n}\n\nexport default AnimatedScatterPlot;\n","import React, { Component } from \"react\";\nimport \"../d3.css\";\nimport * as d3 from \"d3\";\n\nclass Loss extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\tcomponentDidMount() {\n\t\tconst container = d3.select(\"#sweet\");\n\t\tconst height = 100;\n\t\tconst width = 300;\n\t\tconst padding = 0;\n\t\tlet xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([0, -1])\n\t\t\t.range([0, width - 2 * padding]);\n\n\t\tlet yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([1, 1])\n\t\t\t.range([height - 2 * padding, 0]);\n\t\tconst svg = container\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.style(\"overflow\", \"visible\");\n\n\t\tsvg.append(\"rect\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.attr(\"class\", \"cord\");\n\t\tlet xAxis = d3.axisBottom().scale(xScale);\n\t\tlet yAxis = d3.axisRight().scale(yScale);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"id\", \"x\")\n\t\t\t.attr(\"transform\", `translate(0,${height - 2 * padding})`)\n\t\t\t.call(xAxis);\n\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"class\", \"axis\")\n\t\t\t.attr(\"id\", \"y\")\n\t\t\t.attr(\"transform\", \"translate(\" + (width - 2 * padding) + \",0)\")\n\t\t\t.call(yAxis.ticks(0));\n\t\tsvg.append(\"path\")\n\t\t\t.attr(\"id\", \"line\")\n\t\t\t.attr(\"stroke\", \"none\")\n\t\t\t.attr(\"fill\", \"none\");\n\t\t//svg.append(\"text\").attr(\"x\", 1).attr(\"y\", -5).text(\"loss:\");\n\t}\n\tcomponentDidUpdate() {\n\t\tconst { lossArray, loss } = this.props;\n\t\tconst height = 100;\n\t\tconst width = 300;\n\t\tconst start = 0;\n\t\tconst stop = lossArray.length - 1;\n\t\tconst padding = 0;\n\t\tlet xScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([start, stop])\n\t\t\t.range([1, width - 2 * padding]);\n\n\t\tlet lossMin = d3.min(lossArray);\n\t\tlet lossMax = d3.max(lossArray);\n\t\tlet yScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([lossMin, lossMax])\n\t\t\t.range([height - 2 * padding, 0]);\n\t\tconst svg = d3.select(\"#sweet\").select(\"svg\");\n\t\tlet a = [];\n\t\tfor (let i = 0; i < lossArray.length; i++) {\n\t\t\ta.push([xScale(i), yScale(lossArray[i])]);\n\t\t}\n\n\t\tlet xAxis = d3.axisBottom().scale(xScale);\n\t\tlet yAxis = d3.axisRight().scale(yScale);\n\t\tsvg.select(\"#x\")\n\t\t\t.attr(\"transform\", `translate(0,${height - 2 * padding})`)\n\t\t\t.call(xAxis.ticks(5));\n\n\t\tsvg.select(\"#y\")\n\t\t\t.attr(\"transform\", \"translate(\" + (width - 2 * padding) + \",0)\")\n\t\t\t.call(yAxis.ticks(5));\n\t\tsvg.select(\"#line\")\n\t\t\t.attr(\"d\", d3.line()(a))\n\t\t\t.attr(\"stroke\", \"black\")\n\t\t\t.attr(\"fill\", \"none\");\n\t}\n\trender() {\n\t\treturn <div id=\"sweet\"></div>;\n\t}\n}\n\nexport default Loss;\n","import \"katex/dist/katex.min.css\";\nimport { InlineMath, BlockMath } from \"react-katex\";\n\nexport const $ = (inlineLaTeX) => <InlineMath math={inlineLaTeX} />;\nexport const $$ = (blockLaTeX) => <BlockMath math={blockLaTeX} />;\n","import React, { Component } from \"react\";\nimport { $, $$ } from \"./Typeset\";\nimport { Typography, Slider, Box, Card, CardContent } from \"@material-ui/core\";\n\nclass LinearFunction extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tinput: 0,\n\t\t\toutput: 0,\n\t\t};\n\t\tthis.compute = this.compute.bind(this);\n\t}\n\tcompute(input) {\n\t\tconst linfunc = (x) => 2 * x + 1;\n\t\tconst output = linfunc(input);\n\t\tthis.setState({ input, output });\n\t}\n\tcomponentDidMount() {\n\t\tthis.compute(34);\n\t}\n\n\trender() {\n\t\tconst { input, output } = this.state;\n\t\treturn (\n\t\t\t<Box display=\"flex\">\n\t\t\t\t<Box minWidth={300}>\n\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\tvalue={input}\n\t\t\t\t\t\t\t\tonChange={(e, n) => {\n\t\t\t\t\t\t\t\t\tthis.compute(n);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t></Slider>\n\t\t\t\t\t\t\t{$$(`f(${input}) = 2(${input}) + 1 = ${output}`)}\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t}\n}\n\nexport default LinearFunction;\n","export default __webpack_public_path__ + \"static/media/forward.94373b2e.svg\";","import React, { Component } from \"react\";\nimport {\n\tTypography,\n\tSlider,\n\tBox,\n\tCard,\n\tCardContent,\n\tCardActions,\n\tButton,\n} from \"@material-ui/core\";\n\nclass NestedFunction extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tinput: 0,\n\t\t\toutput1: 0,\n\t\t\toutput2: 0,\n\t\t\toutput3: 0,\n\t\t\tweights: [],\n\t\t\tbiases: [],\n\t\t};\n\t\tthis.compute = this.compute.bind(this);\n\t\tthis.initParams = this.initParams.bind(this);\n\t}\n\tcompute(input) {\n\t\tconst { weights, biases } = this.state;\n\t\tconst linfunc = (x, w, b) => w * x + b;\n\t\tconst relu = (x) => Math.max(0, x);\n\n\t\tconst output1 = linfunc(input, weights[0], biases[0]).toFixed(3);\n\t\tconst output2 = linfunc(output1, weights[1], biases[1]).toFixed(3);\n\t\tconst output3 = linfunc(output2, weights[2], biases[2]).toFixed(3);\n\t\tthis.setState({ input, output1, output2, output3 });\n\t}\n\tgenRandomArray(length) {\n\t\tlet arr = new Array(length);\n\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\tarr[i] = +Math.random().toFixed(2);\n\t\t}\n\t\treturn arr;\n\t}\n\tasync initParams() {\n\t\tconst weights = this.genRandomArray(3);\n\t\tconst biases = this.genRandomArray(3);\n\t\tthis.setState({ weights, biases });\n\t}\n\tasync componentDidMount() {\n\t\tawait this.initParams();\n\t\tthis.compute(34);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tinput,\n\t\t\toutput1,\n\t\t\toutput2,\n\t\t\toutput3,\n\t\t\tweights,\n\t\t\tbiases,\n\t\t} = this.state;\n\t\tconst fixedInput = input.toFixed(3);\n\t\tconst outputArr = [\n\t\t\t{ output: output1, color: \"#8db600\" },\n\t\t\t{ output: output2, color: \"#FF8F00\" },\n\t\t\t{ output: output3, color: \"blue\" },\n\t\t];\n\t\treturn (\n\t\t\t<Box display=\"flex\">\n\t\t\t\t<Box width={580}>\n\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\tvalue={this.state.input}\n\t\t\t\t\t\t\t\tonChange={(e, n) => {\n\t\t\t\t\t\t\t\t\tthis.compute(n);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t></Slider>\n\n\t\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t\t<Box justifyContent=\"center\">\n\t\t\t\t\t\t\t\t\t<svg width={500} height={64}>\n\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\td={`M${36} 16, ${100} 16`}\n\t\t\t\t\t\t\t\t\t\t\tstroke={\"#f50557\"}\n\t\t\t\t\t\t\t\t\t\t\tstrokeDasharray=\"25, 4\"\n\t\t\t\t\t\t\t\t\t\t\tstrokeWidth={3 * weights[0] + 0.2}\n\t\t\t\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t\t\t\t\t<text x={40} y={40} fill={\"#f50557\"}>\n\t\t\t\t\t\t\t\t\t\t\t{fixedInput}\n\t\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t\t{outputArr.map((d, i) => (\n\t\t\t\t\t\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\t\t\t\t\t\t\tx={100 + 100 * i}\n\t\t\t\t\t\t\t\t\t\t\t\t\ty={0}\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth={32}\n\t\t\t\t\t\t\t\t\t\t\t\t\theight={32}\n\t\t\t\t\t\t\t\t\t\t\t\t\tfill=\"lightgrey\"\n\t\t\t\t\t\t\t\t\t\t\t\t></rect>\n\t\t\t\t\t\t\t\t\t\t\t\t<text x={111 + 100 * i} y={22}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{i + 1}\n\t\t\t\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\t\t\td={`M${132 + 100 * i} 16, ${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t200 + 100 * i\n\t\t\t\t\t\t\t\t\t\t\t\t\t} 16`}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstroke={d.color}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstrokeDasharray=\"25, 4\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tstrokeWidth={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ti < 2\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 3 *\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tweights[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ti + 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t] +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  0.2\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\t\t\t\t\t\tx={140 + 100 * i}\n\t\t\t\t\t\t\t\t\t\t\t\t\ty={40}\n\t\t\t\t\t\t\t\t\t\t\t\t\tfill={d.color}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{d.output}\n\t\t\t\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\tneuron1(\n\t\t\t\t\t\t\t\t<Typography color=\"secondary\" variant=\"inline\">\n\t\t\t\t\t\t\t\t\t{fixedInput}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) = {weights[0]}(\n\t\t\t\t\t\t\t\t<Typography color=\"secondary\" variant=\"inline\">\n\t\t\t\t\t\t\t\t\t{fixedInput}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) + {biases[0]} ={\" \"}\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#8db600\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output1}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\tneuron2(\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#8db600\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output1}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) = {weights[1]}(\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#8db600\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output1}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) + {biases[1]} ={\" \"}\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#FF8F00\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output2}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\tneuron3(\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#FF8F00\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output2}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) = {weights[2]}(\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#FF8F00\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output2}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t) + {biases[2]}={\" \"}\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"blue\" }}\n\t\t\t\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.output3}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\tawait this.initParams();\n\t\t\t\t\t\t\t\t\t//this.compute(this.state.input);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tnew Weights and biases\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t</Card>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t}\n}\n\nexport default NestedFunction;\n","export default __webpack_public_path__ + \"static/media/nn.185334eb.svg\";","export default __webpack_public_path__ + \"static/media/backward.0c67cde4.svg\";","import { Box, Card, CardContent, Slider, Button } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport { ScatterPlot } from \"../../exports\";\nimport { $ } from \"./Typeset\";\nimport * as tf from \"@tensorflow/tfjs\";\n\nclass LinearScatter extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tweight: -0.82,\n\t\t\tbias: -0.02,\n\t\t\tloss: 0,\n\t\t\tdomain: [],\n\t\t\trange: [],\n\t\t\tline: [],\n\t\t\tshow: false,\n\t\t};\n\t}\n\t//Define the loss function\n\tloss(y, y_pred, len) {\n\t\tconst outputLoss = tf.tidy(() => {\n\t\t\tconst yTensor = tf.tensor(y);\n\t\t\tconst y_predTensor = tf.tensor(y_pred);\n\t\t\tconst compute =\n\t\t\t\t(1 / (2 * len)) *\n\t\t\t\ttf.sum(tf.pow(tf.sub(y_predTensor, yTensor), 2)).dataSync()[0];\n\t\t\treturn compute;\n\t\t});\n\t\treturn outputLoss;\n\t}\n\tcomputeLine(weight, bias, domain) {\n\t\tconst line = (X) => weight * X + bias;\n\t\tlet output = new Array(domain.length);\n\t\tfor (let i = 0; i < domain.length; i++) {\n\t\t\toutput[i] = line(domain[i]);\n\t\t}\n\t\treturn output;\n\t}\n\tzeros(length) {\n\t\tlet array = new Array(length);\n\t\tfor (let i = 0; i < length; i++) array[i] = 0;\n\t\treturn array;\n\t}\n\trange(start, stop, increment) {\n\t\tlet array = [];\n\t\tfor (let i = start; i <= stop; i += increment) array.push(i);\n\t\treturn array;\n\t}\n\tdataGenerator() {\n\t\tconst initDomain = this.range(-1, 1, 0.1);\n\t\tconst initRange = this.computeLine(0.65, -0.3, initDomain);\n\t\tconst initLine = this.computeLine(\n\t\t\tthis.state.weight,\n\t\t\tthis.state.bias,\n\t\t\tinitDomain\n\t\t);\n\t\tconst loss = this.loss(initRange, initLine, initRange.length);\n\t\tthis.setState({\n\t\t\tdomain: initDomain,\n\t\t\trange: initRange,\n\t\t\tline: initLine,\n\t\t\tloss,\n\t\t});\n\t}\n\tcomponentDidMount() {\n\t\tthis.dataGenerator();\n\t}\n\trender() {\n\t\tconst width = 400;\n\t\tconst { domain, range, bias, weight, line, loss, show } = this.state;\n\t\treturn (\n\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t<Box style={{ filter: `blur(${show ? 0 : 25}px)` }}>\n\t\t\t\t\t<ScatterPlot\n\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\theight={width}\n\t\t\t\t\t\tpadding={0}\n\t\t\t\t\t\tstart={-1}\n\t\t\t\t\t\tstop={1}\n\t\t\t\t\t\tX={domain}\n\t\t\t\t\t\ty={range}\n\t\t\t\t\t\tyhat={line}\n\t\t\t\t\t\tid={69}\n\t\t\t\t\t\tselect={-1}\n\t\t\t\t\t\tduration={0}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\n\t\t\t\t<Box marginLeft={7}>\n\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<h2>Manual Best Fit</h2>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tManually tune{\" \"}\n\t\t\t\t\t\t\t\t<em style={{ color: \"#4050B5\" }}>weight</em> and{\" \"}\n\t\t\t\t\t\t\t\t<em style={{ color: \"#F50257\" }}>bias</em> and\n\t\t\t\t\t\t\t\ttry to reach a{\" \"}\n\t\t\t\t\t\t\t\t<em style={{ color: \"red\" }}>loss</em> of 0\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\tvalue={weight}\n\t\t\t\t\t\t\t\tonChange={(e, n) => {\n\t\t\t\t\t\t\t\t\tconst newLine = this.computeLine(\n\t\t\t\t\t\t\t\t\t\tweight,\n\t\t\t\t\t\t\t\t\t\tbias,\n\t\t\t\t\t\t\t\t\t\tdomain\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tconst loss = this.loss(\n\t\t\t\t\t\t\t\t\t\trange,\n\t\t\t\t\t\t\t\t\t\tnewLine,\n\t\t\t\t\t\t\t\t\t\trange.length\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tweight: n,\n\t\t\t\t\t\t\t\t\t\tline: newLine,\n\t\t\t\t\t\t\t\t\t\tloss,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tmin={-1}\n\t\t\t\t\t\t\t\tstep={0.01}\n\t\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t></Slider>\n\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\tvalue={bias}\n\t\t\t\t\t\t\t\tonChange={(e, n) => {\n\t\t\t\t\t\t\t\t\tconst newLine = this.computeLine(\n\t\t\t\t\t\t\t\t\t\tweight,\n\t\t\t\t\t\t\t\t\t\tbias,\n\t\t\t\t\t\t\t\t\t\tdomain\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tconst loss = this.loss(\n\t\t\t\t\t\t\t\t\t\trange,\n\t\t\t\t\t\t\t\t\t\tnewLine,\n\t\t\t\t\t\t\t\t\t\trange.length\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tbias: n,\n\t\t\t\t\t\t\t\t\t\tline: newLine,\n\t\t\t\t\t\t\t\t\t\tloss,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tmin={-1}\n\t\t\t\t\t\t\t\tstep={0.01}\n\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t></Slider>\n\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t{$(\"\\\\text{neuron}(x) = \")}{\" \"}\n\t\t\t\t\t\t\t\t<em style={{ color: \"#4050B5\" }}>\n\t\t\t\t\t\t\t\t\t{$(`${weight}`)}\n\t\t\t\t\t\t\t\t</em>\n\t\t\t\t\t\t\t\t{$(\"x + \")}{\" \"}\n\t\t\t\t\t\t\t\t<em style={{ color: \"#F50257\" }}>\n\t\t\t\t\t\t\t\t\t{$(`${bias}`)}\n\t\t\t\t\t\t\t\t</em>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\tMSE loss:{\" \"}\n\t\t\t\t\t\t\t\t{$(\n\t\t\t\t\t\t\t\t\t`\\\\frac{1}{J}\\\\sum_{i = 0}^J (\\\\hat{y} - y)^2 =`\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<em style={{ color: \"darkred\" }}>\n\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t{$(`${loss.toFixed(7)}`)}\n\t\t\t\t\t\t\t\t</em>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.setState({ show: !this.state.show });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tClick to Reveal Graph\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t}\n}\n\nexport default LinearScatter;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nclass ContourLoss extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\twidth: 400,\n\t\t\theight: 400,\n\t\t};\n\t}\n\tasync componentDidMount() {\n\t\tconst { width, height } = await this.state;\n\t\tconst svg = d3.select(\"#divContour\").select(\"#contour\");\n\t\tconst { data, darkness } = await this.props;\n\t\tlet n = width,\n\t\t\tm = height,\n\t\t\tvalues = new Array(n * m);\n\n\t\tfor (let j = 0.5, k = 0; j < m; ++j) {\n\t\t\tfor (let i = 0.5; i < n; ++i, ++k) {\n\t\t\t\tvalues[k] = loss((i / n) * 10 - 5, (j / m) * 20);\n\t\t\t}\n\t\t}\n\n\t\tfunction loss(m, b) {\n\t\t\tlet x = data.X,\n\t\t\t\ty = data.y;\n\t\t\tlet summed = 0;\n\t\t\tfor (let i = 0; i < data.X.length; i++) {\n\t\t\t\tsummed += Math.pow(m * x[i] + b - y[i], 2);\n\t\t\t}\n\t\t\treturn summed / (2 * x.length);\n\t\t}\n\t\tlet thresholds = await d3\n\t\t\t.range(darkness, 20, 1)\n\t\t\t.map((i) => Math.pow(2, i));\n\t\tlet color = d3.scaleSequentialLog(\n\t\t\td3.extent(thresholds),\n\t\t\td3.interpolateMagma\n\t\t);\n\t\tconst contours = d3.contours().size([n, m]).thresholds(thresholds)(\n\t\t\tvalues\n\t\t);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.selectAll(\"path\")\n\t\t\t.data(contours)\n\t\t\t.join(\"path\")\n\t\t\t.attr(\"fill\", (d) => color(d.value))\n\t\t\t.attr(\"d\", d3.geoPath());\n\n\t\tsvg.append(\"circle\")\n\t\t\t.attr(\"cx\", width / 2)\n\t\t\t.attr(\"cy\", 0)\n\t\t\t.attr(\"r\", 5)\n\t\t\t.style(\"fill\", \"none\")\n\t\t\t.style(\"stoke\", \"none\");\n\t}\n\tcomponentDidUpdate() {\n\t\tconst { width, height } = this.state;\n\t\tconst { loss, ms, m, b } = this.props;\n\t\tconst svg = d3.select(\"#divContour\").select(\"#contour\");\n\t\tif (loss == null) {\n\t\t\tsvg.select(\"circle\")\n\t\t\t\t.attr(\"cx\", width / 2)\n\t\t\t\t.attr(\"cy\", 0)\n\t\t\t\t.attr(\"r\", 5)\n\t\t\t\t.style(\"fill\", \"none\")\n\t\t\t\t.style(\"stroke\", \"none\");\n\t\t\treturn;\n\t\t}\n\t\tif (loss < 1000) {\n\t\t\tsvg.select(\"circle\")\n\t\t\t\t.transition()\n\t\t\t\t.duration(200 - ms)\n\t\t\t\t.attr(\"cx\", width / 2 + (m / 10) * width)\n\t\t\t\t.attr(\"cy\", (b / 20) * height)\n\t\t\t\t.attr(\"r\", loss * 2 + 5)\n\t\t\t\t.style(\"fill\", \"red\")\n\t\t\t\t.style(\"opacity\", \"0.5\");\n\t\t}\n\t}\n\trender() {\n\t\tconst { width, height } = this.state;\n\t\treturn (\n\t\t\t<div id=\"divContour\">\n\t\t\t\t<svg style={{ width, height }} id=\"contour\"></svg>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ContourLoss;\n","import React, { Component } from \"react\";\nimport ContourLoss from \"./ContourLoss\";\nimport { ScatterPlot } from \"../../exports\";\nimport { $$, $ } from \"./Typeset\";\n\nimport {\n\tFab,\n\tIconButton,\n\tBox,\n\tCard,\n\tCardContent,\n\tTypography,\n} from \"@material-ui/core\";\nimport { PlayArrow, Stop, Replay, SlowMotionVideo } from \"@material-ui/icons\";\nimport * as tf from \"@tensorflow/tfjs\";\n\nclass SubTool extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tyhat: [],\n\t\t\tdarkness: -8,\n\t\t\tplayButton: true,\n\t\t\tlinreg: {\n\t\t\t\tmeanSquaredError: 0,\n\t\t\t\trsquared: null,\n\t\t\t\tdata: {\n\t\t\t\t\tX: [],\n\t\t\t\t\ty: [],\n\t\t\t\t},\n\t\t\t\thyperparams: {\n\t\t\t\t\tlearningRate: 0.03,\n\t\t\t\t\tepochs: 0,\n\t\t\t\t\tloss: null,\n\t\t\t\t\tspeed: 200,\n\t\t\t\t},\n\t\t\t\ttunableparams: {\n\t\t\t\t\tm: 0,\n\t\t\t\t\tb: 0,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t\tthis.generateData = this.generateData.bind(this);\n\t\tthis.linearRegression = this.linearRegression.bind(this);\n\t\tthis.a = this.a.bind(this);\n\t\tthis.handleSlider = this.handleSlider.bind(this);\n\t\tthis.reset = this.reset.bind(this);\n\t}\n\n\treset() {\n\t\tthis.generateData();\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tplayButton: true,\n\t\t\tlinreg: {\n\t\t\t\t...this.state.linreg,\n\t\t\t\trsquared: null,\n\t\t\t\thyperparams: {\n\t\t\t\t\t...this.state.linreg.hyperparams,\n\t\t\t\t\tepochs: 0,\n\t\t\t\t\tloss: null,\n\t\t\t\t},\n\t\t\t\ttunableparams: {\n\t\t\t\t\tm: 0,\n\t\t\t\t\tb: 0,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\tgenerateData() {\n\t\ttf.tidy(() => {\n\t\t\tconst yhat = [0, 0, 0, 0, 0, 0];\n\t\t\tconst X = [0, 1, 2, 3, 4, 5];\n\t\t\tconst y = [5, 4, 3, 2, 1, 0];\n\t\t\tconst yTensor = tf.tensor(y);\n\n\t\t\tconst mean = tf.mean(yTensor).dataSync()[0];\n\t\t\tconst meanSquaredError =\n\t\t\t\t(1 / (X.length * 2)) *\n\t\t\t\ttf.sum(tf.pow(tf.sub(mean, yTensor), 2)).dataSync()[0];\n\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\tyhat,\n\t\t\t\tlinreg: {\n\t\t\t\t\t...this.state.linreg,\n\t\t\t\t\tmeanSquaredError,\n\t\t\t\t\tdata: { X, y },\n\t\t\t\t},\n\t\t\t});\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tlinearRegression() {\n\t\ttf.tidy(() => {\n\t\t\tif (this.state.linreg.hyperparams.epochs > 1000) {\n\t\t\t\tthis.setState({ playButton: !this.state.playButton });\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t//hypothesis function\n\t\t\tlet { m, b } = this.state.linreg.tunableparams;\n\t\t\tlet { learningRate } = this.state.linreg.hyperparams;\n\t\t\tconst { X, y } = this.state.linreg.data;\n\t\t\tconst XTensor = tf.tensor(X);\n\t\t\tconst yTensor = tf.tensor(y);\n\n\t\t\tlet yPred = h(XTensor, m, b);\n\t\t\tlet len = XTensor.shape[0];\n\t\t\tfunction h(X, m, b) {\n\t\t\t\treturn tf.add(tf.mul(X, m), b);\n\t\t\t}\n\t\t\t//Define the loss function\n\t\t\tfunction loss(y, y_pred) {\n\t\t\t\treturn (\n\t\t\t\t\t(1 / (2 * len)) *\n\t\t\t\t\ttf.sum(tf.pow(tf.sub(y_pred, y), 2)).dataSync()[0]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t//then compute the gradient\n\t\t\tconst dlossdm =\n\t\t\t\t(1 / len) *\n\t\t\t\ttf.sum(tf.mul(tf.sub(yPred, yTensor), XTensor)).dataSync()[0];\n\t\t\tconst dlossdb =\n\t\t\t\t(1 / len) * tf.sum(tf.sub(yPred, yTensor)).dataSync()[0];\n\t\t\tconst lossValue = loss(yTensor, yPred);\n\n\t\t\t//gradient descent by updating the m and b\n\t\t\tm += -learningRate * dlossdm;\n\t\t\tb += -learningRate * dlossdb;\n\t\t\tconst rsquared = 1 - lossValue / this.state.linreg.meanSquaredError;\n\t\t\tconst epochs = this.state.linreg.hyperparams.epochs + 1;\n\t\t\tconst yhat = Array.from(yPred.dataSync());\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\tyhat,\n\t\t\t\tlinreg: {\n\t\t\t\t\t...this.state.linreg,\n\t\t\t\t\trsquared,\n\t\t\t\t\ttunableparams: { m, b },\n\t\t\t\t\thyperparams: {\n\t\t\t\t\t\t...this.state.linreg.hyperparams,\n\t\t\t\t\t\tepochs: epochs,\n\t\t\t\t\t\tloss: lossValue,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t\treturn undefined;\n\t\t});\n\t}\n\tasync a() {\n\t\tconst timer = (ms) => new Promise((res) => setTimeout(res, ms));\n\t\tconst upperBounds = 200;\n\t\twhile (true) {\n\t\t\tconst { speed } = this.state.linreg.hyperparams;\n\t\t\tconst changeSpeed = upperBounds - speed;\n\t\t\tawait this.linearRegression();\n\t\t\t//await this.forceUpdate();\n\t\t\tawait timer(changeSpeed);\n\t\t\tif (this.state.playButton === true) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\thandleSlider(event, value) {\n\t\tthis.setState({\n\t\t\tlinreg: {\n\t\t\t\t...this.state.linreg,\n\t\t\t\thyperparams: {\n\t\t\t\t\t...this.state.linreg.hyperparams,\n\t\t\t\t\tspeed: value,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.generateData();\n\t}\n\n\trender() {\n\t\tconst { m, b } = this.state.linreg.tunableparams;\n\t\tconst { loss, speed, epochs } = this.state.linreg.hyperparams;\n\t\tconst { rsquared, data } = this.state.linreg;\n\t\tconst marginButtons = 3;\n\t\tconst nullColor = (val) => (val === null ? \"#dce0dd\" : \"black\");\n\t\tconst nullNumber = (num, precision) =>\n\t\t\tnum === null ? num : num.toPrecision(precision);\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Box display=\"flex\" justifyContent=\"center\" marginTop={2}>\n\t\t\t\t\t<Box marginTop={10} marginRight={10}>\n\t\t\t\t\t\t<ScatterPlot\n\t\t\t\t\t\t\twidth={400}\n\t\t\t\t\t\t\theight={400}\n\t\t\t\t\t\t\tpadding={0}\n\t\t\t\t\t\t\tstart={0}\n\t\t\t\t\t\t\tstop={5}\n\t\t\t\t\t\t\tX={data.X}\n\t\t\t\t\t\t\ty={data.y}\n\t\t\t\t\t\t\tyhat={this.state.yhat}\n\t\t\t\t\t\t\tid={420}\n\t\t\t\t\t\t\tselect={-1}\n\t\t\t\t\t\t\tduration={0}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<h2>Full Process Best Fit</h2>\n\t\t\t\t\t\t\t<Typography variant=\"h4\" component=\"h2\">\n\t\t\t\t\t\t\t\tEPOCH: {epochs}\n\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\t\t\tcomponent=\"h2\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: nullColor(loss),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{` loss = ${nullNumber(loss, 10)}`}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<IconButton onClick={this.reset}>\n\t\t\t\t\t\t\t\t<Replay />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Fab\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackground: this.state.playButton\n\t\t\t\t\t\t\t\t\t\t? \"#175676\"\n\t\t\t\t\t\t\t\t\t\t: \"#D62839\",\n\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\tawait this.setState({\n\t\t\t\t\t\t\t\t\t\tplayButton: !this.state.playButton,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tawait this.a();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tdisableTouchRipple\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.state.playButton ? (\n\t\t\t\t\t\t\t\t\t<PlayArrow />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Stop />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Fab>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: speed === 200 ? \"grey\" : \"#FFC006\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tlinreg: {\n\t\t\t\t\t\t\t\t\t\t\t...this.state.linreg,\n\t\t\t\t\t\t\t\t\t\t\thyperparams: {\n\t\t\t\t\t\t\t\t\t\t\t\t...this.state.linreg\n\t\t\t\t\t\t\t\t\t\t\t\t\t.hyperparams,\n\t\t\t\t\t\t\t\t\t\t\t\tspeed:\n\t\t\t\t\t\t\t\t\t\t\t\t\tspeed === 200 ? 120 : 200,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<SlowMotionVideo />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</CardContent>\n\n\t\t\t\t\t\t<ContourLoss\n\t\t\t\t\t\t\tms={speed}\n\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\tm={isFinite(m) ? m : 0}\n\t\t\t\t\t\t\tb={isFinite(b) ? b : 0}\n\t\t\t\t\t\t\tloss={loss}\n\t\t\t\t\t\t\tdarkness={this.state.darkness}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Card>\n\t\t\t\t</Box>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SubTool;\n","import React from \"react\";\nimport { $, $$ } from \"./Typeset\";\nimport LinearFunction from \"./LinearFunction\";\nimport NestedFunction from \"./NestedFunction\";\nimport { Box, Button, Card, CardContent, Typography } from \"@material-ui/core\";\nimport nnSVG from \"./assets/nn.svg\";\nimport forwardSVG from \"./assets/forward.svg\";\nimport backwardSVG from \"./assets/backward.svg\";\nimport LinearScatter from \"./LinearScatter\";\nimport SubTool from \"./SubTool\";\nconst Explanation = () => {\n\tconst link = (href, content) => (\n\t\t<Button\n\t\t\tsize=\"small\"\n\t\t\tcolor=\"primary\"\n\t\t\thref={href}\n\t\t\ttarget=\"_blank\"\n\t\t\trel=\"noopener noreferrer\"\n\t\t>\n\t\t\t{content}\n\t\t</Button>\n\t);\n\tconst introduction = (\n\t\t<div>\n\t\t\t<Typography variant=\"h3\">Table of Contents</Typography>\n\t\t\t<Button disabled={true} size=\"small\" color=\"secondary\">\n\t\t\t\tColor Legend:\n\t\t\t</Button>\n\t\t\t<Button size=\"small\" style={{ pointerEvents: \"none\" }}>\n\t\t\t\tSection\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tsize=\"small\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tstyle={{ pointerEvents: \"none\" }}\n\t\t\t>\n\t\t\t\tStatic Text\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tsize=\"small\"\n\t\t\t\tcolor=\"secondary\"\n\t\t\t\tstyle={{ pointerEvents: \"none\" }}\n\t\t\t>\n\t\t\t\tInteractive Tool\n\t\t\t</Button>\n\t\t\t<ol>\n\t\t\t\t<li>\n\t\t\t\t\t<Button size=\"large\">Introduction</Button>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Button size=\"large\">backpropagation on one neuron</Button>\n\t\t\t\t\t<ol type=\"a\">\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Button color=\"secondary\" size=\"small\">\n\t\t\t\t\t\t\t\tManual Best Fit\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Button color=\"primary\" size=\"small\">\n\t\t\t\t\t\t\t\tExplanation\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Button color=\"primary\" size=\"small\">\n\t\t\t\t\t\t\t\tMath Example\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Button color=\"secondary\" size=\"small\">\n\t\t\t\t\t\t\t\tTraining Best Fit\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ol>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Button size=\"large\">Scaling up</Button>\n\t\t\t\t\t<ol type=\"a\">\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Button color=\"primary\" size=\"small\">\n\t\t\t\t\t\t\t\tExplanation\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Button color=\"primary\" size=\"small\">\n\t\t\t\t\t\t\t\tMath Example\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Button color=\"secondary\" size=\"small\">\n\t\t\t\t\t\t\t\tFull Neural Network Backpropagation Explainer\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ol>\n\t\t\t\t</li>\n\t\t\t</ol>\n\t\t</div>\n\t);\n\n\tconst paper = (\n\t\t<div>\n\t\t\t<Typography variant=\"h3\">Introduction</Typography>\n\t\t\t<p>\n\t\t\t\tMost people abstract the idea of backpropagation when learning\n\t\t\t\tneural networks because it is by far the most notation heavy\n\t\t\t\tpart. The goal of this article is to marry the notation with\n\t\t\t\tsome interactive tools to better understand a very important\n\t\t\t\tidea.\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tOur goal in a neural network is to lower whatever loss function\n\t\t\t\twe define. For this article, we will be performing regression\n\t\t\t\tand using mean squared error loss (MSE).\n\t\t\t</p>\n\t\t\t{$$(\"\\\\text{MSE} = \\\\frac{1}{J}\\\\sum_{i=0}^{J}(\\\\hat{y} - y)^2\")}\n\n\t\t\t<Typography variant=\"h3\">Backpropogation on One Neuron</Typography>\n\t\t\t<p>\n\t\t\t\tBefore hitting the calculus, try to lower loss the best you can\n\t\t\t\tby adjusting the weight and bias on this one neuron network.\n\t\t\t\tWhen you feel like you&rsquo;ve lowered the loss enough (or need\n\t\t\t\tsome help), reveal the graph.\n\t\t\t</p>\n\t\t\t<br />\n\t\t\t<LinearScatter />\n\t\t\t<br />\n\t\t\t<p>\n\t\t\t\tThe intuition from this one scenario essentially explains all of\n\t\t\t\tbackpropagation and optimization. It is really that simple!\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tWhen you start to change the weight, you observe where the loss\n\t\t\t\tmoves, if it moves up, you probably move the weight the other\n\t\t\t\tdirection to lower the loss. This, without the math, is the main\n\t\t\t\tprinciple behind optimizing a nerual network.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe change you observed from the ouput of the loss function is\n\t\t\t\tthe rate of change. For a more accurate instantaneous rate of\n\t\t\t\tchange we essentially do the slope formula but have the change\n\t\t\t\tthe second point approach 0. For Example,\n\t\t\t\t{$$(\n\t\t\t\t\t\"\\\\lim_{h \\\\to 0} \\\\frac{f(x + h) - f(x)}{h} = \\\\frac{df}{dx}\"\n\t\t\t\t)}\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tWhere {$(\"\\\\frac{df}{dx}\")} is the derivative of {$(\"f\")} with\n\t\t\t\trespect to {$(\"x\")}, or in plain english: how the output of{\" \"}\n\t\t\t\t{$(\"f\")} is affected by the variable {$(\"x\")}. In the context of\n\t\t\t\tour one neuron network, if I represent weight as {$(\"w_0\")} bias\n\t\t\t\tas {$(\"b\")}, the neuron as {$(\"n\")} and mean squared error loss{\" \"}\n\t\t\t\t{$(\"\\\\text{MSE}\")}\n\t\t\t\t{$$(\n\t\t\t\t\t\"\\\\lim_{h \\\\to 0} \\\\frac{\\\\text{MSE}(n(w_0 + h,b)) - \\\\text{MSE}(n(w_0,b))}{h} = \\\\frac{\\\\partial \\\\text{MSE}}{\\\\partial w_0}\"\n\t\t\t\t)}\n\t\t\t\t{$$(\n\t\t\t\t\t\"\\\\lim_{h \\\\to 0} \\\\frac{\\\\text{MSE}(n(w_0,b+h)) - \\\\text{MSE}(n(w_0,b))}{h} = \\\\frac{\\\\partial \\\\text{MSE}}{\\\\partial b}\"\n\t\t\t\t)}\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tWhere {$(\"\\\\frac{\\\\partial \\\\text{MSE}}{\\\\partial w_0}\")} is the\n\t\t\t\tpartial derivative of {$(\"\\\\text{MSE}\")} with respect to{\" \"}\n\t\t\t\t{$(\"w_0\")} or in plain english: how the output of{\" \"}\n\t\t\t\t{$(\"\\\\text{MSE}\")} is affected by the variable {$(\"w_0\")}.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tWhere {$(\"\\\\frac{\\\\partial \\\\text{MSE}}{\\\\partial b}\")} is the\n\t\t\t\tpartial derivative of {$(\"\\\\text{MSE}\")} with respect to{\" \"}\n\t\t\t\t{$(\"b\")} or in plain english: how the output of{\" \"}\n\t\t\t\t{$(\"\\\\text{MSE}\")} is affected by the variable {$(\"b\")}.\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tNow we have a way to compute how each parameter affects the\n\t\t\t\toutput loss {$(\"\\\\text{MSE}\")}. Which is also called the\n\t\t\t\tgradient of {$(\"\\\\text{MSE}\")}.And can use the intuiton we\n\t\t\t\tgained from the interactive exercise before, and use the partial\n\t\t\t\tderivatives of loss with respect to each parameter to tune those\n\t\t\t\tparamters into lowering the loss.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tBackpropagation is the term we use to describe the calculuating\n\t\t\t\tof the partial derivatives of with respect to each paramter\n\t\t\t\tbecause of the direction we travel to compute the derivatives.\n\t\t\t\tIn essence, we first need to forward propagate: push the input\n\t\t\t\tthrough the network, get an output and loss. We then can go\n\t\t\t\tbackwards and compute how each value in the forward pass\n\t\t\t\taffected the loss using the chain rule in calculus. The chain\n\t\t\t\trule is very intutive and essentially takes into account how\n\t\t\t\tnested function affect each other.\n\t\t\t\t{$$(\n\t\t\t\t\t\"\\\\frac{\\\\partial \\\\text{MSE}}{\\\\partial w_0} = \\\\frac{\\\\partial \\\\text{MSE}}{\\\\partial n(w_0,b)} \\\\cdot \\\\frac{\\\\partial n(w_0,b)}{\\\\partial w_0} \"\n\t\t\t\t)}\n\t\t\t\t{$$(\n\t\t\t\t\t\"\\\\frac{\\\\partial \\\\text{MSE}}{\\\\partial b} = \\\\frac{\\\\partial \\\\text{MSE}}{\\\\partial n(w_0,b)} \\\\cdot \\\\frac{\\\\partial n(w_0,b)}{\\\\partial b} \"\n\t\t\t\t)}\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tWhere how {$(\"\\\\frac{\\\\partial \\\\text{MSE}}{\\\\partial w_0}\")}{\" \"}\n\t\t\t\t(how {$(\"w_0\")} affects loss) is broken up into how the input of\n\t\t\t\tloss (the output of the neuron) affects loss compounded with how\n\t\t\t\tthe weight affects the output of the neuron. Essnetially we are\n\t\t\t\tchaining rates of change due to the nested nature of the\n\t\t\t\tfunction.\n\t\t\t</p>\n\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tLet's go through a concrete example of a forward and backward\n\t\t\t\tpass. We will define the input as {$(\"x_0 = 2.1\")}, the weight\n\t\t\t\tas {$(\"w_0 = 1\")}, and the bias as {$(\"b = 0\")}{\" \"}\n\t\t\t</Typography>\n\t\t\t<img width=\"100%\" src={forwardSVG} />\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tNow we can go backwards and compute partial derivatives with the\n\t\t\t\tchain rule to get the gradient {$(\"\\\\nabla \\\\text{loss}\")}\n\t\t\t</Typography>\n\t\t\t<img width=\"100%\" src={backwardSVG} />\n\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\t{$$(\"\\\\frac{\\\\partial \\\\text{loss}}{\\\\partial w_0} = -7.98\")}\n\t\t\t\t{$$(\"\\\\frac{\\\\partial \\\\text{loss}}{\\\\partial b} = -3.8\")}\n\t\t\t</Typography>\n\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tReassign the parameters to opposite gradient to descend loss, in\n\t\t\t\tthis case learning rate is {$(\"\\\\text{lr} = 0.01\")}\n\t\t\t\t{$$(\n\t\t\t\t\t\"w_0 := w_0 - \\\\text{lr} \\\\cdot \\\\frac{\\\\partial \\\\text{loss}}{\\\\partial w_0} = (1) - (0.01) \\\\cdot (-7.98) = 1.0798\"\n\t\t\t\t)}\n\t\t\t\t{$$(\n\t\t\t\t\t\"b := b - \\\\text{lr} \\\\cdot \\\\frac{\\\\partial \\\\text{loss}}{\\\\partial b} = (0) - (0.01) \\\\cdot (-3.8) = 0.038 \"\n\t\t\t\t)}\n\t\t\t\tRe calculate forward pass with new weight and bias\n\t\t\t\t{$$(\"\\\\text{loss} = ((1.0798)(2.1) + 0.038) - 4)^2 = 2.87\")}\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\tTotal loss savings of {$(\"3.61 - 2.87 = 0.74\")}\n\t\t\t</Typography>\n\t\t\t<p>\n\t\t\t\tTo see this in action over many epochs try out playing the next\n\t\t\t\tcomponent which computes forward, backward and update per epoch.\n\t\t\t\tAutomatically.\n\t\t\t</p>\n\t\t\t<SubTool />\n\n\t\t\t<h1>Scaling up to larger networks</h1>\n\t\t\t<p>\n\t\t\t\tWhen scaling up to more neurons with more layers, the principles\n\t\t\t\tstay the same. The only difference now is we are going further\n\t\t\t\tback with chain rule to calculate more derivatives.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tAnd to spice things up, we&rsquo;ll add the activation function\n\t\t\t\tReLU to neurons on the hidden layers so we can fit some\n\t\t\t\tnon-linear data as opposed to boring linear data.\n\t\t\t</p>\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\tFirst feed the values through the network. Forward\n\t\t\t\t\tPropagation.\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\tCalculate the derivative of loss with respect to each\n\t\t\t\t\tvariable (going backwards using the chain rule)\n\t\t\t\t</li>\n\t\t\t\t<li>update the parameters with gradient descent</li>\n\t\t\t</ul>\n\t\t\t<p>\n\t\t\t\tNow that you see the underlying logic, Use the explainer tool\n\t\t\t\tbelow. Start by pressing play to train the network and click\n\t\t\t\tEPOCH when you want to see the whole process (forward, backward,\n\t\t\t\tupdate) at that particular epoch. If you need help or are\n\t\t\t\tconfused press on the associated question mark.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tIn explainer mode, make sure to color each neuron, this\n\t\t\t\trepresents the activation (output of the neuron), and in the\n\t\t\t\tbackwards propagation the orange arrow which represents the\n\t\t\t\tcomputed derivative of loss with respect to the activation.\n\t\t\t</p>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<Box justifyContent=\"center\" display=\"flex\">\n\t\t\t<Box maxWidth=\"65%\">\n\t\t\t\t{introduction}\n\t\t\t\t{paper}\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\nexport default Explanation;\n","export default __webpack_public_path__ + \"static/media/controlcenter.3793afef.gif\";","export default __webpack_public_path__ + \"static/media/customization.05bd2f71.gif\";","export default __webpack_public_path__ + \"static/media/nn.984f5d8c.png\";","export default __webpack_public_path__ + \"static/media/scatter.1bf50e5e.gif\";","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis is the class definiton and implmentation of Neuron for Nerual Network\n*/\nexport class Neuron {\n\tconstructor(weights, bias) {\n\t\tthis.weights = weights;\n\t\tthis.bias = bias;\n\t}\n\t/* Next functions are just helper functions for the operations */\n\tmult(array1, array2) {\n\t\treturn array1.map((item, i) => {\n\t\t\treturn item * array2[i];\n\t\t});\n\t}\n\tdMult(dvalues, oppositeParameter) {\n\t\treturn this.mult(dvalues, oppositeParameter);\n\t}\n\tsum(array) {\n\t\treturn array.reduce((a, b) => a + b);\n\t}\n\tdSum(dvalue, numInputs) {\n\t\tlet dSumArray = [];\n\t\tfor (let i = 0; i < numInputs; i++) {\n\t\t\tdSumArray.push(dvalue);\n\t\t}\n\t\treturn dSumArray;\n\t}\n\tlinear(input) {\n\t\treturn input;\n\t}\n\n\t/* \n\t\tPurpose: feed forward of single neuron\n\t\t@param: inputs, activation\n\t\t@store inputs, multStep, sumStep, actStep, output\n\t*/\n\tforward(inputs, activation) {\n\t\t/* Destructure the class values */\n\t\tconst { weights, bias } = this;\n\t\tconst { mult, sum } = this;\n\t\t/* propogate forward */\n\t\tconst multStep = mult(inputs, weights);\n\t\tconst sumStep = sum(multStep) + bias;\n\t\tconst actStep = activation(sumStep);\n\n\t\t/* Save values */\n\t\tthis.inputs = inputs;\n\t\tthis.multStep = multStep;\n\t\tthis.sumStep = sumStep;\n\t\tthis.actStep = actStep;\n\t\tthis.output = actStep;\n\t}\n\n\t/* \n\t\tPurpose: feed backward of single neuron\n\t\t@param: dvalue, activation\n\t\t@store inputs, multStep, sumStep, actStep, output\n\t*/\n\tbackward(dvalue, activation) {\n\t\t/* Destructure the class values */\n\t\tconst { inputs, weights, actStep } = this;\n\t\tconst { dSum, mult, sum } = this;\n\t\t/* propgate backwards */\n\t\tconst dActStep = activation(actStep) * dvalue;\n\t\tconst dSumStep = dSum(dActStep, inputs.length);\n\t\tconst dBias = dActStep;\n\t\tconst dWeights = mult(dSumStep, inputs);\n\t\tconst dInputs = mult(dSumStep, weights);\n\t\tconst dInputsSum = sum(dInputs);\n\n\t\t/* Save values */\n\t\tthis.dvalue = dvalue;\n\t\tthis.dActStep = dActStep;\n\t\tthis.dSumStep = dSumStep;\n\t\tthis.dBias = dBias;\n\t\tthis.dWeights = dWeights;\n\t\tthis.dInputs = dInputs;\n\t\tthis.dInputsSum = dInputsSum;\n\t}\n}\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\texports the losses to be used for the neural network\n\t\t\n*/\nexport class MeanSquaredErrorLoss {\n\t/* \n\t\tPurpose: feed forward of the nerual network\n\t\t@param yhat, y\n\t\t@stores y, yhat, subStep, squareStep, output\n\t*/\n\tforward(yhat, y) {\n\t\tconst subStep = yhat - y;\n\t\tconst squareStep = (this.output = Math.pow(yhat - y, 2));\n\n\t\tthis.subStep = subStep;\n\t\tthis.squareStep = squareStep;\n\t\tthis.output = squareStep;\n\t}\n\t/* \n\t\tPurpose: feed backward of the nerual network\n\t\t@stores dInputs\n\t*/\n\tbackward() {\n\t\tthis.dInputs = 2 * this.subStep;\n\t}\n}\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tThis creates the definiton and implemntation of the neural network in a non vectorized more manual way \n\t\tdesigned to show all the operations\n\tTODO: add the update that would update to the weights sgd style and compute forward once more to see difference\n*/\nimport { Neuron } from \"./Neuron\";\nimport { MeanSquaredErrorLoss } from \"./Loss\";\nexport class NeuralNetwork {\n\t/* here we construct the Neuron model */\n\tconstructor(shape, weights, biases) {\n\t\tthis.model = [];\n\t\tthis.loss = new MeanSquaredErrorLoss();\n\t\tthis.shape = shape;\n\n\t\t/* HERE WE CONSTRUCT THE MODEL ON CLASS CREATION */\n\t\tfor (let layer = 0; layer < weights.length; layer++) {\n\t\t\tlet dense = [];\n\t\t\tfor (let neuron = 0; neuron < weights[layer].length; neuron++) {\n\t\t\t\tdense.push(\n\t\t\t\t\tnew Neuron(weights[layer][neuron], biases[layer][neuron])\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.model.push(dense);\n\t\t}\n\t}\n\t/* Next are some helper functions */\n\tsum(array) {\n\t\treturn array.reduce((a, b) => a + b);\n\t}\n\tadd(array1, array2) {\n\t\tconst array1Length = array1.length;\n\t\tconst array2Length = array2.length;\n\t\tif (array2Length != array1Length) {\n\t\t\tconsole.error(\n\t\t\t\t`${array1Length} does not match ${array2Length}, so returned empty array`\n\t\t\t);\n\t\t\treturn [];\n\t\t} else {\n\t\t\tlet result = new Array(array1Length);\n\t\t\tfor (let i = 0; i < array1.length; i++) {\n\t\t\t\tresult[i] = array1[i] + array2[i];\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\tzeros(length) {\n\t\tlet result = new Array(length);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tresult[i] = 0;\n\t\t}\n\t\treturn result;\n\t}\n\tdReLU(input) {\n\t\treturn input > 0 ? 1 : 0;\n\t}\n\tdLinear(input) {\n\t\treturn 1;\n\t}\n\n\tReLU(input) {\n\t\treturn Math.max(0, input);\n\t}\n\n\tlinear(input) {\n\t\treturn input;\n\t}\n\n\t/* \n\t\tPurpose: to feed forward the entire layer\n\t\t@param input, label\n\t\t@store model, yhat, loss\n\t*/\n\tforward(input, label) {\n\t\tlet inputs = [input];\n\t\tconst lastLayer = this.model.length;\n\t\tconst outputNeuron = 0;\n\t\t/* First iterate through each layer */\n\t\tfor (let layer = 0; layer < lastLayer - 1; layer++) {\n\t\t\t/* Then iterate through each neuron in the layer */\n\t\t\tlet outputs = [];\n\t\t\tfor (let neuron = 0; neuron < this.model[layer].length; neuron++) {\n\t\t\t\t/* Then feed forward each individual neuron and push to output array */\n\t\t\t\tthis.model[layer][neuron].forward(inputs, this.ReLU);\n\t\t\t\toutputs.push(this.model[layer][neuron].output);\n\t\t\t}\n\n\t\t\t/* Then outputs will be the inputs for the next layer */\n\t\t\tinputs = outputs;\n\t\t}\n\t\tthis.model[lastLayer - 1][0].forward(inputs, this.linear);\n\t\tthis.yhat = this.model[lastLayer - 1][outputNeuron].output;\n\t\tthis.loss.forward(this.yhat, label);\n\t}\n\t/* \n\t\tPurpose: to feed backward the entire model per layer\n\t*/\n\tbackward() {\n\t\tconst { sum, add, zeros } = this;\n\t\tthis.loss.backward();\n\t\tlet dValues = [this.loss.dInputs];\n\t\tconst lastLayer = this.model.length;\n\t\t/* take care of output neuron */\n\t\tconst outputNeuron = 0;\n\t\tthis.model[lastLayer - 1][outputNeuron].backward(\n\t\t\tdValues[outputNeuron],\n\t\t\tthis.dLinear\n\t\t);\n\t\tdValues = this.model[lastLayer - 1][outputNeuron].dInputs;\n\n\t\t/* We want to start the second to last layer */\n\t\tfor (let layer = lastLayer - 2; layer >= 0; layer--) {\n\t\t\tlet dInputs = zeros(this.model[layer][0].inputs.length);\n\t\t\tfor (let neuron = 0; neuron < this.model[layer].length; neuron++) {\n\t\t\t\tthis.model[layer][neuron].backward(dValues[neuron], this.dReLU);\n\t\t\t\tdInputs = add(dInputs, this.model[layer][neuron].dInputs);\n\t\t\t}\n\t\t\tdValues = dInputs; //we transfer the dInputs into dValues for the next layer back\n\t\t}\n\t}\n\t/* \n\t\tPurpose: to update all the weights using gradient descent\n\t\t@param lr: learning rate\n\t*/\n\tupdate(lr) {\n\t\t/* First create the gradient descent */\n\t\tconst gd = (weight, lr, dweight) => weight - lr * dweight;\n\t\t/* Iterate over the model */\n\t\tfor (let layer = 0; layer < this.model.length; layer++) {\n\t\t\tfor (let neuron = 0; neuron < this.model[layer].length; neuron++) {\n\t\t\t\tfor (\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\ti < this.model[layer][neuron].dWeights.length;\n\t\t\t\t\ti++\n\t\t\t\t) {\n\t\t\t\t\tconst newWeights = gd(\n\t\t\t\t\t\tthis.model[layer][neuron].weights[i],\n\t\t\t\t\t\tlr,\n\t\t\t\t\t\tthis.model[layer][neuron].dWeights[i]\n\t\t\t\t\t);\n\t\t\t\t\tconst newBias = gd(\n\t\t\t\t\t\tthis.model[layer][neuron].bias,\n\t\t\t\t\t\tlr,\n\t\t\t\t\t\tthis.model[layer][neuron].dBias\n\t\t\t\t\t);\n\n\t\t\t\t\t/* Formally update the model weights */\n\t\t\t\t\tthis.model[layer][neuron].weights[i] = newWeights;\n\t\t\t\t\tthis.model[layer][neuron].bias = newBias;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthrottleForward(neuron, layer, change, label) {\n\t\t/* First Change the value of the output of this neuron */\n\t\tconst calcChange = this.model[layer][neuron].output + change;\n\t\tthis.model[layer][neuron].output = calcChange;\n\n\t\t/* First construct the inputs for the next layer which is made out of the new outputs */\n\t\tlet inputs = [];\n\t\tfor (let n = 0; n < this.model[layer].length; n++) {\n\t\t\tinputs.push(this.model[layer][n].output);\n\t\t}\n\n\t\tconst lastLayer = this.model.length;\n\t\tfor (let l = layer + 1; l < lastLayer - 1; l++) {\n\t\t\t/* Then iterate through each neuron in the layer */\n\t\t\tlet outputs = [];\n\t\t\tfor (let n = 0; n < this.model[l].length; n++) {\n\t\t\t\t/* Then feed forward each individual neuron and push to output array */\n\t\t\t\tthis.model[l][n].forward(inputs, this.ReLU);\n\t\t\t\toutputs.push(this.model[l][n].output);\n\t\t\t}\n\n\t\t\t/* Then outputs will be the inputs for the next layer */\n\t\t\tinputs = outputs;\n\t\t}\n\t\tthis.model[lastLayer - 1][0].forward(inputs, this.linear);\n\t\tthis.yhat = this.model[lastLayer - 1][0].output;\n\t\tthis.loss.forward(this.yhat, label);\n\t}\n}\n","/* \n\tDonny Bertucci: @xnought\n\tSummary: \n\t\tExports some tools that make it easier to deal with the data\n*/\n\n/* \n\tPurpose: format the weight array given from tensorflow\n\t@param uweights (unformatted weights), shape\n\t@return layer (formated weights per layer)\n*/\nexport function formatWeightArray(uweights, shape) {\n\tlet layer = [];\n\t/* Increment over each layer l */\n\tfor (let l = 0; l < uweights.length; l++) {\n\t\t/* First num in shape is input neuron which is why we skip here by adding 1 */\n\t\tlet increment = shape[l + 1];\n\t\tlet weightSet = [];\n\t\t/* Increment over each neuron */\n\t\tfor (let t = 0; t < increment; t++) {\n\t\t\tlet weights = [];\n\t\t\t/* Increment over each weight per neuron */\n\t\t\tfor (let w = t; w < uweights[l].length; w += increment) {\n\t\t\t\tweights.push(uweights[l][w]);\n\t\t\t}\n\t\t\tweightSet.push(weights);\n\t\t}\n\t\tlayer.push(weightSet);\n\t}\n\treturn layer;\n}\n\n/* \n\tPurpose: to turn a 2d array into the same array but fixed to a certian number of numbers/figures\n\t@param arr  (not fixed array), fixed\n\t@return arr (fixed array)\n*/\nexport function toFunc2DArray(arr, fixed) {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tfor (let e = 0; e < arr[i].length; e++) {\n\t\t\tarr[i][e] = +arr[i][e].toFixed(fixed);\n\t\t}\n\t}\n\treturn arr;\n}\n\n/* \n\tPurpose: Flattens the array\n\t@param array\n\t@return flattenedArray\n*/\nexport function flatten(array) {\n\tlet flattendArray = [];\n\tfor (let i = 0; i < array.length; i++) {\n\t\tfor (let e = 0; e < array[i].length; e++) {\n\t\t\tflattendArray.push(array[i][e]);\n\t\t}\n\t}\n\treturn flattendArray;\n}\n\n/* \n\tPurpose: generate random integer from 0 to given paramter\n\t@param max\n\t@return Number [0,max)\n*/\nexport function getRandomInt(max) {\n\treturn Math.floor(Math.random() * Math.floor(max));\n}\n\n/* \n\tPurpose: turn tensor to array\n\t@param tensor \n\t@return array\n*/\nexport function tensorToArray(tensor) {\n\treturn Array.from(tensor.dataSync());\n}\n","import * as d3 from \"d3\";\n\nexport function generateLinearScale(x, y) {\n\tconst xScale = d3.scaleLinear().domain(x.domain).range(x.range);\n\tconst yScale = d3.scaleLinear().domain(y.domain).range(y.range);\n\treturn { xScale, yScale };\n}\n\nexport function generateLink(adjustment) {\n\treturn d3\n\t\t.linkHorizontal()\n\t\t.x((d) => d.x + adjustment)\n\t\t.y((d) => d.y + adjustment);\n}\n\nexport function generateNeuronPlacement(\n\tshape,\n\tlayerProportion,\n\tsquareWidth,\n\tstartNeuron,\n\tstopNeuron,\n\txScale,\n\tyScale\n) {\n\tlet shapedNeurons = [];\n\tlet flattenedNeurons = [];\n\tshapedNeurons.push([startNeuron]);\n\tflattenedNeurons.push(startNeuron);\n\n\tfor (let layer = 1; layer < shape.length - 1; layer++) {\n\t\tlet dense = [];\n\t\tfor (let neuron = 0; neuron < shape[layer]; neuron++) {\n\t\t\tconst coordinate = {\n\t\t\t\tx: xScale(layerProportion[layer]) - squareWidth / 2,\n\t\t\t\ty: yScale(92 - neuron * 12) - squareWidth / 2,\n\t\t\t};\n\t\t\t// push to arrays\n\t\t\tdense.push(coordinate);\n\t\t\tflattenedNeurons.push(coordinate);\n\t\t}\n\t\tshapedNeurons.push(dense);\n\t}\n\n\tflattenedNeurons.push(stopNeuron);\n\tshapedNeurons.push([stopNeuron]);\n\n\treturn { flattenedNeurons, shapedNeurons };\n}\n\nexport function generateLinksPlacement(shape, shapedNeurons, linksGenerator) {\n\t/* We start to iterate over ns */\n\tlet perLink = [];\n\tlet layerLinks = [];\n\tlet neuronLinks = [];\n\tfor (let layer = 1; layer < shape.length; layer++) {\n\t\tneuronLinks = [];\n\t\tfor (let neuron = 0; neuron < shape[layer]; neuron++) {\n\t\t\tperLink = [];\n\t\t\tfor (\n\t\t\t\tlet nextNeuron = 0;\n\t\t\t\tnextNeuron < shape[layer - 1];\n\t\t\t\tnextNeuron++\n\t\t\t) {\n\t\t\t\tperLink.push(\n\t\t\t\t\tlinksGenerator({\n\t\t\t\t\t\tsource: shapedNeurons[layer - 1][nextNeuron],\n\t\t\t\t\t\ttarget: shapedNeurons[layer][neuron],\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t\tneuronLinks.push(perLink);\n\t\t}\n\t\tlayerLinks.push(neuronLinks);\n\t}\n\n\treturn layerLinks;\n}\n","/* \n  @author: Donny Bertucci: xnought\n  Summary: \n\tMainTool.js is the main controller of all logic of the backprop explainer\n*/\n\n/*  START IMPORTS  */\nimport React, { Component } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport AnimatedNumber from \"animated-number-react\";\nimport {\n\tNeuralNetworkComponent,\n\tScatterPlot,\n\tLoss,\n\tAnimatedScatterPlot,\n} from \"../../exports\";\nimport {\n\tTypography,\n\tBox,\n\tCard,\n\tCardContent,\n\tIconButton,\n\tCardActions,\n\tChip,\n\tButton,\n\tFab,\n\tSlider,\n\tTooltip,\n\tDialog,\n\tDialogContent,\n\tDialogActions,\n} from \"@material-ui/core\";\nimport {\n\tReplay,\n\tSlowMotionVideo,\n\tPlayArrow,\n\tStop,\n\tHelp,\n\tClose,\n} from \"@material-ui/icons\";\nimport controlGif from \"./assets/controlcenter.gif\";\nimport customGif from \"./assets/customization.gif\";\nimport nnDiagram from \"./assets/nn.png\";\nimport scatterGif from \"./assets/scatter.gif\";\nimport { NeuralNetwork, tools } from \"../../../nnMiniLibrary/exports\";\nimport { draw } from \"../../../Utils/exports\";\n/*  END IMPORTS  */\n\nclass MainTool extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t/* \n\t\t\tApp js state will be the main controller of logic to components\n\t\t\tNote to self: Keep state as shallow as possible to avoid complexity with this.setState()\n\t\t*/\n\t\tthis.state = {\n\t\t\t/* State for NN */\n\t\t\ttensorFlowNN: null,\n\t\t\tminiNN: null,\n\t\t\tX: [],\n\t\t\ty: [],\n\t\t\tyhat: [],\n\t\t\tshape: [1, 8, 8, 1],\n\t\t\tlr: 0.01,\n\t\t\tepoch: 0,\n\t\t\tcpyEpoch: 0,\n\n\t\t\tbiasesData: [],\n\t\t\tweightsData: [],\n\t\t\tlossArray: [],\n\t\t\tloss: null,\n\t\t\tscale: 5,\n\t\t\trects: [],\n\n\t\t\tweights: [],\n\t\t\tshapedWeights: [],\n\t\t\tshapedRects: [],\n\n\t\t\tshapedLinks: [],\n\n\t\t\tdirection: \"edgePaused\",\n\t\t\tcurve: \"sin\",\n\n\t\t\t/* State for Components */\n\t\t\tcontrols: {\n\t\t\t\tplaying: false,\n\t\t\t\tspeed: 0,\n\t\t\t},\n\t\t\tsliderVal: 2,\n\t\t\tmode: false,\n\t\t\tstopRender: false,\n\t\t\tkeyFrameLayer: 0,\n\t\t\tkeyFrameLoss: 0,\n\t\t\tkeyFrameScatter: 0,\n\t\t\tsubEpoch: \"\",\n\t\t\tisAnimating: false,\n\t\t\tlossSavings: 0,\n\t\t\tlossDifference: 0,\n\t\t\tsingleInputExample: 0,\n\t\t\tsingleLabelExample: 0,\n\t\t\tnewOutput: 0,\n\n\t\t\t/* Dialog showing */\n\t\t\tcontrolCenterHelp: false,\n\t\t\tcustomizationHelp: false,\n\t\t\tneuralNetworkHelp: false,\n\t\t\tscatterHelp: false,\n\t\t\tlossHelp: false,\n\t\t\tlossChange: 0,\n\t\t\tpotentialYhat: [],\n\t\t\tsingleInputIndex: -1,\n\t\t};\n\n\t\tthis.initNeuralNetwork = this.initNeuralNetwork.bind(this);\n\t\tthis.run = this.run.bind(this);\n\t\tthis.genTensorData = this.genTensorData.bind(this);\n\t\tthis.mutate = this.mutate.bind(this);\n\t\tthis.train = this.train.bind(this);\n\t\tthis.printParameters = this.printParameters.bind(this);\n\t\tthis.reset = this.reset.bind(this);\n\t\tthis.resetParameters = this.resetParameters.bind(this);\n\t\tthis.asyncPause = this.asyncPause.bind(this);\n\t\tthis.changeModelLr = this.changeModelLr.bind(this);\n\t\tthis.anim = this.anim.bind(this);\n\t\tthis.randomInputGeneration = this.randomInputGeneration.bind(this);\n\t}\n\trandomInputGeneration(X, y, weightsData, biasesData, shape, lr, mode) {\n\t\tconst randomInput = tools.getRandomInt(50);\n\t\tconst singleInputExample = X[randomInput];\n\t\tconst singleLabelExample = y[randomInput];\n\n\t\tlet formattedWeights = tools.formatWeightArray(weightsData, shape);\n\t\tlet nn = new NeuralNetwork(shape, formattedWeights, biasesData);\n\t\tlet clone = new NeuralNetwork(shape, formattedWeights, biasesData);\n\n\t\tnn.forward(singleInputExample, singleLabelExample);\n\t\tnn.backward();\n\n\t\tclone.forward(singleInputExample, singleLabelExample);\n\t\tclone.backward();\n\t\tclone.update(lr);\n\t\tclone.forward(singleInputExample, singleLabelExample);\n\n\t\tconst newOutput = clone.yhat;\n\t\tconst updatedLoss = clone.loss.output;\n\t\tconst lossSavings = updatedLoss;\n\t\tconst lossDifference = nn.loss.output - updatedLoss;\n\n\t\tconst forwardAll = (inputArray) => {\n\t\t\t/* Here we return an array of all the inputs fed forward */\n\t\t\tconst inputArrayLength = inputArray.length;\n\t\t\tlet outputArray = new Array(inputArrayLength);\n\n\t\t\tfor (let i = 0; i < inputArrayLength; i++) {\n\t\t\t\tclone.forward(inputArray[i], 0); //we dont care about loss here so the input label doesnt matter\n\t\t\t\toutputArray[i] = clone.yhat; //store all outputs to the outputArray\n\t\t\t}\n\n\t\t\treturn outputArray; //return the output array to be used elsewhere\n\t\t};\n\t\tlet a = forwardAll(X);\n\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tminiNN: nn,\n\t\t\tpotentialYhat: a,\n\t\t\tmode: true,\n\t\t\tlossSavings,\n\t\t\tlossDifference,\n\t\t\tsingleInputIndex: randomInput,\n\t\t\tsingleInputExample,\n\t\t\tsingleLabelExample,\n\t\t\tnewOutput,\n\t\t\tcontrols: {\n\t\t\t\t...this.state.controls,\n\t\t\t\tplaying: false,\n\t\t\t},\n\t\t});\n\t}\n\n\tasync anim() {\n\t\tconst { shape } = this.state;\n\t\tconst speed = 750;\n\t\t/* All anim needs to know is the shape */\n\t\tconst timer = (ms) => new Promise((res) => setTimeout(res, ms));\n\n\t\t/* animate the forward pass */\n\t\tthis.setState({\n\t\t\tsubEpoch: \"forward\",\n\t\t\tisAnimating: true,\n\t\t\tlossChange: 0,\n\t\t\tcpyEpoch: this.state.epoch,\n\t\t\tkeyFrameScatter: 0,\n\t\t});\n\t\tfor (let i = 0; i < shape.length; i++) {\n\t\t\tthis.setState({ keyFrameLayer: i });\n\t\t\tif (i === shape.length - 1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tawait timer(speed);\n\t\t}\n\n\t\tthis.setState({ keyFrameLoss: 1 });\n\t\tawait timer(speed);\n\t\tthis.setState({ keyFrameLoss: 2 });\n\t\tawait timer(speed);\n\t\tthis.setState({ keyFrameLoss: 3 });\n\n\t\t//we update the losschange\n\t\tthis.setState({\n\t\t\tlossChange: this.state.miniNN.loss.output,\n\t\t\tkeyFrameScatter: 1,\n\t\t});\n\t\tthis.setState({ subEpoch: \"backward\", keyFrameScatter: 2 });\n\n\t\tfor (let i = shape.length - 1; i >= 0; i--) {\n\t\t\tthis.setState({ keyFrameLayer: i });\n\t\t\tawait timer(speed);\n\t\t}\n\t\tthis.setState({ keyFrameLayer: -1 });\n\n\t\tawait timer(speed);\n\t\tthis.setState({ subEpoch: \"transition\" });\n\n\t\tawait timer(1000);\n\t\tthis.setState({ subEpoch: \"update\" });\n\t\tawait timer(1000);\n\t\t//we update the new loss\n\t\tthis.setState({\n\t\t\tisAnimating: false,\n\t\t\tlossChange: this.state.lossSavings,\n\t\t\tkeyFrameScatter: 4,\n\t\t\tcpyEpoch: this.state.cpyEpoch + 1,\n\t\t});\n\n\t\t/* animate update */\n\t}\n\n\tinitNeuralNetwork(shape) {\n\t\tconst { controls } = this.state;\n\t\tconst { playing } = controls;\n\n\t\t// If we are not training the tensorflow neural network\n\t\tif (!playing) {\n\t\t\t/* START SETUP */\n\t\t\tconst squareWidth = 32;\n\t\t\tconst xConstraints = { domain: [0, 100], range: [50, 750] };\n\t\t\tconst yConstraints = { domain: [0, 100], range: [500, 0] };\n\t\t\t//prettier-ignore\n\t\t\tconst {xScale, yScale} = draw.generateLinearScale(xConstraints,yConstraints);\n\t\t\t// Create the starting point and the stopping point for the neural network\n\t\t\tconst start = { x: 50 - squareWidth / 2, y: 250 - squareWidth / 2 };\n\t\t\tconst stop = { x: 750 - squareWidth / 2, y: 250 - squareWidth / 2 };\n\t\t\t// generate function to create paths from (x,y) to (x,y)\n\t\t\tconst linksGenerator = draw.generateLink(squareWidth / 2);\n\t\t\t// how the layers are proptioned compared to the linear scale\n\t\t\tconst layerProportion = [0, 25, 50, 75, 0];\n\t\t\t/* END SETUP */\n\n\t\t\t/* START GENERATING THE GRAPH */\n\t\t\tconst {\n\t\t\t\tflattenedNeurons,\n\t\t\t\tshapedNeurons,\n\t\t\t} = draw.generateNeuronPlacement(\n\t\t\t\tshape,\n\t\t\t\tlayerProportion,\n\t\t\t\tsquareWidth,\n\t\t\t\tstart,\n\t\t\t\tstop,\n\t\t\t\txScale,\n\t\t\t\tyScale\n\t\t\t);\n\t\t\tconst layerLinks = draw.generateLinksPlacement(\n\t\t\t\tshape,\n\t\t\t\tshapedNeurons,\n\t\t\t\tlinksGenerator\n\t\t\t);\n\t\t\t/* END GENERATING THE GRAPH */\n\n\t\t\tshapedNeurons.splice(0, 1); //in order for it to be lined up with the nn model\n\t\t\t//update the state of the links and rectangles to be rendered\n\t\t\tthis.setState({\n\t\t\t\tshapedLinks: layerLinks,\n\t\t\t\trects: flattenedNeurons,\n\t\t\t\tshapedRects: shapedNeurons,\n\t\t\t});\n\t\t} else if (playing) {\n\t\t\tconst { weightsData, shape } = this.state;\n\t\t\tconst flattenedWeights = tools.flatten(weightsData);\n\t\t\t//update the weights to be rendered\n\t\t\tconst shapedWeights = tools.formatWeightArray(weightsData, shape);\n\n\t\t\tthis.setState({ weights: flattenedWeights, shapedWeights });\n\t\t}\n\t}\n\n\tchangeModelLr(lrChange) {\n\t\ttf.tidy(() => {\n\t\t\tthis.setState({ lr: lrChange });\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tasync run() {\n\t\tconst playing = !this.state.controls.playing;\n\t\tthis.mutate(\"controls\", \"playing\", playing);\n\t\tif (playing === true) {\n\t\t\tawait this.train(this.state.X, this.state.y);\n\t\t}\n\t}\n\n\tmutate(key, subkey, value) {\n\t\t/* copy of the state */\n\t\ttf.tidy(() => {\n\t\t\tlet state = { ...this.state };\n\t\t\t/* If this.state.key.subkey exists */\n\t\t\tif (key in state && subkey in state[key]) {\n\t\t\t\t/* Mutate the state */\n\t\t\t\tstate[key][subkey] = value;\n\t\t\t\tthis.setState({ state });\n\t\t\t} else {\n\t\t\t\tconsole.error(\"Could not be found in state\");\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\taddModel(model) {\n\t\treturn tf.tidy(() => {\n\t\t\tlet shape = this.state.shape;\n\t\t\tmodel.add(\n\t\t\t\ttf.layers.dense({\n\t\t\t\t\tinputShape: [1],\n\t\t\t\t\tunits: shape[1],\n\t\t\t\t\tactivation: \"relu\",\n\t\t\t\t\tuseBias: true,\n\t\t\t\t})\n\t\t\t);\n\t\t\tfor (let layer = 2; layer < shape.length - 1; layer++) {\n\t\t\t\tmodel.add(\n\t\t\t\t\ttf.layers.dense({\n\t\t\t\t\t\tunits: shape[layer],\n\t\t\t\t\t\tactivation: \"relu\",\n\t\t\t\t\t\tuseBias: true,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t\tmodel.add(\n\t\t\t\ttf.layers.dense({\n\t\t\t\t\tunits: 1,\n\t\t\t\t\tactivation: \"linear\",\n\t\t\t\t\tuseBias: true,\n\t\t\t\t})\n\t\t\t);\n\n\t\t\treturn model;\n\t\t});\n\t}\n\tmodelCompile(lr) {\n\t\tlet model = tf.sequential();\n\t\tthis.addModel(model);\n\t\tmodel.compile({\n\t\t\toptimizer: tf.train.sgd(lr),\n\t\t\tloss: \"meanSquaredError\",\n\t\t});\n\t\treturn model;\n\t}\n\tasync train(X, y) {\n\t\t/* START SETUP */\n\t\tconst XTensor = tf.tidy(() => {\n\t\t\treturn tf.tensor(X);\n\t\t});\n\t\tconst yTensor = tf.tidy(() => {\n\t\t\treturn tf.tensor(y);\n\t\t});\n\t\tconst model = tf.tidy(() => {\n\t\t\treturn this.state.tensorFlowNN;\n\t\t});\n\t\tconst timer = (ms) => new Promise((res) => setTimeout(res, ms));\n\t\t/* START SETUP */\n\n\t\t///* Until broken by user */\n\t\tlet play = this.state.controls.playing;\n\t\t////let epoch = 0;\n\t\twhile (play !== false) {\n\t\t\tthis.setState({ stopRender: true });\n\t\t\tconst { playing, speed } = this.state.controls;\n\t\t\tplay = playing;\n\t\t\tawait model.fit(XTensor, yTensor, {\n\t\t\t\tepochs: 1,\n\t\t\t});\n\t\t\ttf.tidy(() => {\n\t\t\t\tlet yhatTensor = model.predict(XTensor);\n\t\t\t\tlet yhat = tools.tensorToArray(yhatTensor);\n\t\t\t\tlet loss = tf.losses.meanSquaredError(y, yhat).dataSync()[0];\n\t\t\t\tthis.printParameters(model, loss, yhat, this.state.epoch + 1);\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t\tthis.setState({ stopRender: false });\n\t\t\tawait timer(speed);\n\t\t}\n\t\tthis.setState({ tensorFlowNN: model });\n\t\ttf.dispose(XTensor);\n\t\ttf.dispose(yTensor);\n\t}\n\tasync genTensorData(eqn, scaled, volume) {\n\t\tawait tf.ready();\n\t\ttf.tidy(() => {\n\t\t\tconst XTensor = tf.linspace(\n\t\t\t\t-this.state.scale,\n\t\t\t\tthis.state.scale,\n\t\t\t\tvolume\n\t\t\t);\n\t\t\tconst yTensor = tf.mul(eqn(XTensor), scaled);\n\t\t\tconst yhatTensor = tf.zerosLike(XTensor);\n\t\t\tconst X = tools.tensorToArray(XTensor);\n\t\t\tconst y = tools.tensorToArray(yTensor);\n\t\t\tconst yhat = tools.tensorToArray(yhatTensor);\n\n\t\t\tthis.setState({\n\t\t\t\tX,\n\t\t\t\ty,\n\t\t\t\tyhat,\n\t\t\t});\n\t\t\treturn undefined;\n\t\t});\n\t}\n\tprintParameters(model, loss, yhat, epoch) {\n\t\tlet weightsData = [];\n\t\tlet biasesData = [];\n\t\tfor (let i = 0; i < model.getWeights().length; i++) {\n\t\t\t(i % 2 === 0 ? weightsData : biasesData).push(\n\t\t\t\tArray.from(model.getWeights()[i].dataSync())\n\t\t\t);\n\t\t}\n\t\tconst lossArray = [...this.state.lossArray, loss];\n\t\tthis.setState({\n\t\t\tbiasesData,\n\t\t\tweightsData,\n\t\t\tloss,\n\t\t\tyhat,\n\t\t\tepoch,\n\t\t\tlossArray,\n\t\t});\n\t\tthis.initNeuralNetwork(this.state.shape);\n\t}\n\tasync asyncPause() {\n\t\tthis.setState({ controls: { ...this.state.controls, playing: false } });\n\t}\n\tasync resetParameters(scale) {\n\t\ttf.dispose(this.state.tensorFlowNN);\n\t\tconst { curve } = this.state;\n\t\tlet eqn;\n\t\tlet optimizer;\n\t\ttf.tidy(() => {\n\t\t\tif (curve === \"sin\") {\n\t\t\t\teqn = tf.sin;\n\t\t\t} else if (curve === \"tanh\") {\n\t\t\t\teqn = tf.tanh;\n\t\t\t} else if (curve === \"cos\") {\n\t\t\t\teqn = tf.cos;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t});\n\t\tawait this.genTensorData(eqn, scale, 50);\n\t\tconst model = tf.tidy(() => {\n\t\t\treturn this.modelCompile(this.state.lr);\n\t\t});\n\t\tthis.setState({\n\t\t\tepoch: 0,\n\t\t\tloss: null,\n\t\t\tweights: [],\n\t\t\tminiNN: null,\n\t\t\ttensorFlowNN: model,\n\t\t\tshapedWeights: [],\n\t\t\tlossArray: [],\n\t\t});\n\t\ttf.dispose(optimizer);\n\t}\n\tasync reset(scale) {\n\t\tthis.asyncPause();\n\t\tthis.resetParameters(scale);\n\t}\n\tasync componentDidMount() {\n\t\ttf.setBackend(\"cpu\");\n\t\tthis.genTensorData(tf.sin, this.state.scale, 50);\n\t\tthis.initNeuralNetwork(this.state.shape);\n\t\tconst model = tf.tidy(() => {\n\t\t\treturn this.modelCompile(0.01);\n\t\t});\n\t\tthis.setState({ tensorFlowNN: model });\n\t}\n\tshouldComponentUpdate() {\n\t\tif (this.state.stopRender) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\trender() {\n\t\t/* Destructure State*/\n\t\tconst {\n\t\t\tX,\n\t\t\ty,\n\t\t\tshape,\n\t\t\tscale,\n\t\t\tminiNN,\n\t\t\tweightsData,\n\t\t\tbiasesData,\n\t\t\tyhat,\n\t\t\trects,\n\t\t\tweights,\n\t\t\tmode,\n\t\t\tepoch,\n\t\t\tcurve,\n\t\t\tlr,\n\t\t\tloss,\n\t\t\tcontrols,\n\t\t\tshapedWeights,\n\t\t\tshapedLinks,\n\t\t\tshapedRects,\n\t\t\tkeyFrameLayer,\n\t\t\tkeyFrameLoss,\n\t\t\tsubEpoch,\n\t\t\tisAnimating,\n\t\t\tsingleInputExample,\n\t\t\tsingleLabelExample,\n\t\t\tlossSavings,\n\t\t\tcontrolCenterHelp,\n\t\t\tcustomizationHelp,\n\t\t\tneuralNetworkHelp,\n\t\t\tlossChange,\n\t\t\tscatterHelp,\n\t\t\tkeyFrameScatter,\n\t\t} = this.state;\n\t\tconst { playing, speed } = controls;\n\n\t\tconst lrs = [0.001, 0.005, 0.01, 0.05, 0.1];\n\t\tconst dataSets = [\n\t\t\t{ label: \"sin\", eqn: tf.sin, scale: 5 },\n\t\t\t{ label: \"cos\", eqn: tf.cos, scale: 5 },\n\t\t\t{ label: \"tanh\", eqn: tf.tanh, scale: 5 },\n\t\t];\n\n\t\t/* Destructure render */\n\t\tconst PlayButtonClick = (\n\t\t\t// eslint-disable-next-line\n\t\t\t<Fab\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: !this.state.controls.playing\n\t\t\t\t\t\t? \"#175676\"\n\t\t\t\t\t\t: \"#D62839\",\n\t\t\t\t\tcolor: \"white\",\n\t\t\t\t}}\n\t\t\t\tdisableTouchRipple\n\t\t\t\tonClick={() => this.run()}\n\t\t\t>\n\t\t\t\t{!playing ? <PlayArrow /> : <Stop />}\n\t\t\t</Fab>\n\t\t);\n\t\tconst controlsReg = (\n\t\t\t<CardActions>\n\t\t\t\t<Tooltip title=\"reset\" arrow>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tdisabled={playing}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Replay />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t\t{PlayButtonClick}\n\t\t\t\t<Tooltip title=\"slomo\" arrow>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: speed === 0 ? \"grey\" : \"#FFC006\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tcontrols: {\n\t\t\t\t\t\t\t\t\t...controls,\n\t\t\t\t\t\t\t\t\tspeed: speed === 0 ? 100 : 0,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SlowMotionVideo />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t</CardActions>\n\t\t);\n\t\tconst controlsBackProp = (\n\t\t\t<Box marginTop={2}>\n\t\t\t\t<CardActions>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\tawait this.anim();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdisabled={isAnimating}\n\t\t\t\t\t\tstyle={{ color: isAnimating ? \"lightgrey\" : \"black\" }}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Replay /> {\"  \"}REPLAY\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\tthis.randomInputGeneration(\n\t\t\t\t\t\t\t\tX,\n\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\tweightsData,\n\t\t\t\t\t\t\t\tbiasesData,\n\t\t\t\t\t\t\t\tshape,\n\t\t\t\t\t\t\t\t0.001,\n\t\t\t\t\t\t\t\tmode\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait this.anim();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={{ color: isAnimating ? \"lightgrey\" : \"#4BA3C3\" }}\n\t\t\t\t\t\tdisabled={isAnimating}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t>\n\t\t\t\t\t\tNew Training Example\n\t\t\t\t\t</Button>\n\t\t\t\t</CardActions>\n\t\t\t</Box>\n\t\t);\n\t\tconst controlCenter = (\n\t\t\t<Box width={400} marginLeft={10}>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: \"#4BA3C3\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{\"Control Center\"}\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tstyle={{ color: \"orange\" }}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.setState({ controlCenterHelp: true });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Help />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<div></div>\n\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t\t\t{mode ? \"Click: Back\" : \"Click: Epoch Mode\"}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tarrow\n\t\t\t\t\t\t\tplacement=\"right-start\"\n\t\t\t\t\t\t\topen={loss !== null || (mode && !isAnimating)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tdisabled={loss == null || isAnimating}\n\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\tif (mode) {\n\t\t\t\t\t\t\t\t\t\tthis.setState({ subEpoch: \"\" });\n\t\t\t\t\t\t\t\t\t\tthis.setState({ mode: !mode });\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthis.randomInputGeneration(\n\t\t\t\t\t\t\t\t\t\t\tX,\n\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\tweightsData,\n\t\t\t\t\t\t\t\t\t\t\tbiasesData,\n\t\t\t\t\t\t\t\t\t\t\tshape,\n\t\t\t\t\t\t\t\t\t\t\t0.0001,\n\t\t\t\t\t\t\t\t\t\t\tmode\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tawait this.anim();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography variant=\"h4\">\n\t\t\t\t\t\t\t\t\tEpoch: {mode ? this.state.cpyEpoch : epoch}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Tooltip>\n\n\t\t\t\t\t\t{mode ? (\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: \"orange\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tPhase:\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\t\t\tsubEpoch === \"forward\"\n\t\t\t\t\t\t\t\t\t\t\t\t? \"orange\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"grey\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tForward\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\t\t\tsubEpoch === \"backward\"\n\t\t\t\t\t\t\t\t\t\t\t\t? \"orange\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"grey\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tBackward\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\t\t\tsubEpoch === \"update\"\n\t\t\t\t\t\t\t\t\t\t\t\t? \"orange\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"grey\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t{loss == null || mode\n\t\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t\t: `Loss: ${loss.toPrecision(6)}`}\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t<Typography variant=\"h6\" style={{ color: \"#4BA3C3\" }}>\n\t\t\t\t\t\t\t{mode\n\t\t\t\t\t\t\t\t? `Training Example: (${singleInputExample.toPrecision(\n\t\t\t\t\t\t\t\t\t\t3\n\t\t\t\t\t\t\t\t  )}, ${singleLabelExample.toPrecision(3)})`\n\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant=\"h5\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\tkeyFrameScatter < 3 ? \"black\" : \"orangered\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{mode && lossChange != 0\n\t\t\t\t\t\t\t\t? keyFrameScatter < 3\n\t\t\t\t\t\t\t\t\t? \"loss: \"\n\t\t\t\t\t\t\t\t\t: \"new loss: \"\n\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t\t{mode && lossChange != 0 ? (\n\t\t\t\t\t\t\t\t<AnimatedNumber\n\t\t\t\t\t\t\t\t\tvalue={lossChange}\n\t\t\t\t\t\t\t\t\tformatValue={(value) =>\n\t\t\t\t\t\t\t\t\t\tvalue.toPrecision(6)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tduration={750}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography style={{ color: \"grey\" }} variant=\"caption\">\n\t\t\t\t\t\t\t{keyFrameScatter > 3 && mode\n\t\t\t\t\t\t\t\t? \"loss decrease: \"\n\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t\t{keyFrameScatter > 3 && mode ? (\n\t\t\t\t\t\t\t\t<AnimatedNumber\n\t\t\t\t\t\t\t\t\tvalue={this.state.lossDifference}\n\t\t\t\t\t\t\t\t\tformatValue={(value) =>\n\t\t\t\t\t\t\t\t\t\tvalue.toPrecision(6)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tduration={750}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t{mode ? controlsBackProp : controlsReg}\n\n\t\t\t\t\t\t<CardActions></CardActions>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\n\t\t\t\t<Box marginTop={5}>\n\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: \"#4BA3C3\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{\"Customization \"}\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"orange\" }}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\tcustomizationHelp: true,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Help />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t\t\t\tLearning Rate\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t{lrs.map((num, i) => (\n\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\tdisabled={playing || mode}\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tlabel={`${num}`}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\t\t\t\tlr === num ? \"white\" : \"grey\",\n\t\t\t\t\t\t\t\t\t\t\tbackground:\n\t\t\t\t\t\t\t\t\t\t\t\tlr === num\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"#175676\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"lightgrey\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\ttf.tidy(() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.changeModelLr(num);\n\t\t\t\t\t\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Chip>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t\t\t\tData Set\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t{dataSets.map((item, i) => (\n\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\tdisabled={playing || mode}\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tlabel={item.label}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\t\t\t\tcurve === item.label\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"white\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"grey\",\n\t\t\t\t\t\t\t\t\t\t\tbackground:\n\t\t\t\t\t\t\t\t\t\t\t\tcurve === item.label\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"#175676\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"lightgrey\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\tshape,\n\t\t\t\t\t\t\t\t\t\t\t\tcurve: item.label,\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t\t\t\t\t\ttf.tidy(() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.genTensorData(\n\t\t\t\t\t\t\t\t\t\t\t\t\titem.eqn,\n\t\t\t\t\t\t\t\t\t\t\t\t\titem.scale,\n\t\t\t\t\t\t\t\t\t\t\t\t\t50\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Chip>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t\t\t\tNeurons\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#175676\" }}\n\t\t\t\t\t\t\t\t\tdefaultValue={2}\n\t\t\t\t\t\t\t\t\tdisabled={playing || mode}\n\t\t\t\t\t\t\t\t\taria-labelledby=\"discrete-slider\"\n\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\t\t\tmarks\n\t\t\t\t\t\t\t\t\tonChange={(e, n) => {\n\t\t\t\t\t\t\t\t\t\tthis.setState({ sliderVal: n });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\t\tmax={8}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={playing || mode}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tlet a = shape;\n\t\t\t\t\t\t\t\t\t\tif (a.length < 5) {\n\t\t\t\t\t\t\t\t\t\t\ta[\n\t\t\t\t\t\t\t\t\t\t\t\ta.length - 1\n\t\t\t\t\t\t\t\t\t\t\t] = this.state.sliderVal;\n\t\t\t\t\t\t\t\t\t\t\ta.push(1);\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ shape: a });\n\t\t\t\t\t\t\t\t\t\t\tthis.initNeuralNetwork(a);\n\t\t\t\t\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t+\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={playing || mode}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tlet a = shape;\n\t\t\t\t\t\t\t\t\t\tif (a.length > 2) {\n\t\t\t\t\t\t\t\t\t\t\ta.splice(a.length - 2, 1);\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ shape: a });\n\t\t\t\t\t\t\t\t\t\t\tthis.initNeuralNetwork(a);\n\t\t\t\t\t\t\t\t\t\t\tthis.reset(scale);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t–\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t\tconst scatter = (\n\t\t\t<Box marginLeft={10}>\n\t\t\t\t<Box>\n\t\t\t\t\t{mode ? (\n\t\t\t\t\t\t<AnimatedScatterPlot\n\t\t\t\t\t\t\twidth={300}\n\t\t\t\t\t\t\theight={300}\n\t\t\t\t\t\t\tpadding={0}\n\t\t\t\t\t\t\tstart={-scale}\n\t\t\t\t\t\t\tstop={scale}\n\t\t\t\t\t\t\tX={X}\n\t\t\t\t\t\t\ty={y}\n\t\t\t\t\t\t\tyhat={yhat}\n\t\t\t\t\t\t\tpotential={this.state.potentialYhat}\n\t\t\t\t\t\t\tid={2}\n\t\t\t\t\t\t\tselect={this.state.singleInputIndex}\n\t\t\t\t\t\t\ttimes={this.state.keyFrameScatter}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<ScatterPlot\n\t\t\t\t\t\t\twidth={300}\n\t\t\t\t\t\t\theight={300}\n\t\t\t\t\t\t\tpadding={0}\n\t\t\t\t\t\t\tstart={-scale}\n\t\t\t\t\t\t\tstop={scale}\n\t\t\t\t\t\t\tX={X}\n\t\t\t\t\t\t\ty={y}\n\t\t\t\t\t\t\tyhat={yhat}\n\t\t\t\t\t\t\tid={1}\n\t\t\t\t\t\t\tduration={100}\n\t\t\t\t\t\t\tselect={-1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: \"orange\",\n\t\t\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\t\t\tbottom: \"300px\",\n\t\t\t\t\t\t\tright: \"40px\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tscatterHelp: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Help />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Box>\n\t\t\t\t<Box marginTop={10}>\n\t\t\t\t\t<Loss lossArray={this.state.lossArray} loss={loss} />\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t\tconst neuralNetwork = (\n\t\t\t<Box>\n\t\t\t\t<NeuralNetworkComponent\n\t\t\t\t\tminiNN={miniNN}\n\t\t\t\t\tinput={singleInputExample}\n\t\t\t\t\tlabel={singleLabelExample}\n\t\t\t\t\tshapedWeights={shapedWeights}\n\t\t\t\t\tshapedLinks={shapedLinks}\n\t\t\t\t\tshapedRects={shapedRects}\n\t\t\t\t\tshape={shape}\n\t\t\t\t\tbiases={biasesData}\n\t\t\t\t\tweights={weights}\n\t\t\t\t\trects={rects}\n\t\t\t\t\tplaying={\n\t\t\t\t\t\tplaying\n\t\t\t\t\t\t\t? speed === 0\n\t\t\t\t\t\t\t\t? \"edgeForward\"\n\t\t\t\t\t\t\t\t: \"edgeSlowed\"\n\t\t\t\t\t\t\t: \"edgePaused\"\n\t\t\t\t\t}\n\t\t\t\t\tshow={playing}\n\t\t\t\t\tmode={mode}\n\t\t\t\t\tbackward={this.state.direction}\n\t\t\t\t\tkeyFrameLayer={keyFrameLayer}\n\t\t\t\t\tkeyFrameLoss={keyFrameLoss}\n\t\t\t\t\tsubEpoch={subEpoch}\n\t\t\t\t\tlossSavings={lossSavings}\n\t\t\t\t\tisAnimating={isAnimating}\n\t\t\t\t\tlr={lr}\n\t\t\t\t></NeuralNetworkComponent>\n\t\t\t\t<IconButton\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: \"orange\",\n\t\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\t\tbottom: \"500px\",\n\t\t\t\t\t\tleft: \"100px\",\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tneuralNetworkHelp: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Help />\n\t\t\t\t</IconButton>\n\t\t\t</Box>\n\t\t);\n\n\t\treturn (\n\t\t\t<div id=\"app\">\n\t\t\t\t<Card\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackground: \"#FAFAFA\",\n\t\t\t\t\t\toutlineColor: \"white\",\n\t\t\t\t\t\tpaddingBottom: \"1em\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tclassName=\"regular\"\n\t\t\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\t\tmarginTop={10}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{neuralNetwork}\n\t\t\t\t\t\t\t{scatter}\n\t\t\t\t\t\t\t{controlCenter}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\n\t\t\t\t<Dialog\n\t\t\t\t\tPaperProps={{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tbackgroundColor: \"#F7F7F7\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\topen={controlCenterHelp}\n\t\t\t\t>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.setState({ controlCenterHelp: false });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Close />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</DialogActions>\n\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={controlGif}\n\t\t\t\t\t\t\talt=\"how to use control center\"\n\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t\tThe <em>control</em> center is where you{\" \"}\n\t\t\t\t\t\t\t<em>control</em> the flow of the program. You can\n\t\t\t\t\t\t\tplay, pause, slow down and reset.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t<Box marginBottom={5}>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t\t\tWhat is an Epoch?\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\t\t\tAn epoch is single iteration of training.\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t\t\tWhat is Loss?\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\t\t\tLoss tells you the error of the current\n\t\t\t\t\t\t\t\t\tpredicitions. Lower is better.\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t\t\tHow Do I go into Backpropogation Mode?\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\t\t\tClick on the EPOCH\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t</Dialog>\n\t\t\t\t<Dialog\n\t\t\t\t\tPaperProps={{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tbackgroundColor: \"#F7F7F7\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\topen={customizationHelp}\n\t\t\t\t>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.setState({ customizationHelp: false });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Close />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</DialogActions>\n\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={customGif}\n\t\t\t\t\t\t\talt=\"how to use control center\"\n\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t\tThe <em>customization</em> is where you{\" \"}\n\t\t\t\t\t\t\t<em>customize</em> data, learning rate, and model\n\t\t\t\t\t\t\tshape.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t<Box marginBottom={5}>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t\t\tWhat is an Learning Rate?\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\t\t\tLearning rate roughly translates to the\n\t\t\t\t\t\t\t\t\tmagnitiude of change each time parameters\n\t\t\t\t\t\t\t\t\tare updated. You could think of it as how\n\t\t\t\t\t\t\t\t\tbig your steps are down a gradient.\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\t\t\tThe learning rate is applied to the opposite\n\t\t\t\t\t\t\t\t\tgradient after backpropogation.\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t\t\tWhy would I change learning rate?\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\t\t\tDepending on the shape of the model and the\n\t\t\t\t\t\t\t\t\tamount of data,a higher learning rate could\n\t\t\t\t\t\t\t\t\tallow your model to take less epochs to\n\t\t\t\t\t\t\t\t\treach the target loss. But if the learning\n\t\t\t\t\t\t\t\t\trate is too large, you will never reach the\n\t\t\t\t\t\t\t\t\tminimum of loss that you want.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t</Dialog>\n\n\t\t\t\t<Dialog\n\t\t\t\t\tPaperProps={{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tbackgroundColor: \"#FAFAFA\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\topen={neuralNetworkHelp}\n\t\t\t\t>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.setState({ neuralNetworkHelp: false });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Close />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</DialogActions>\n\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={nnDiagram}\n\t\t\t\t\t\t\talt=\"how to use control center\"\n\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t<Box marginBottom={5}>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">Summary</Typography>\n\n\t\t\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\t\t\tEach grey square with a black outline is a\n\t\t\t\t\t\t\t\t\tneuron. Each connection indicates where the\n\t\t\t\t\t\t\t\t\tinputs travel. The thikness and the color of\n\t\t\t\t\t\t\t\t\teach connection also indicate the weight\n\t\t\t\t\t\t\t\t\tassociated.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\t\t\tAs the weights change, there will be a\n\t\t\t\t\t\t\t\t\tvisible change in stroke size.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t</Dialog>\n\n\t\t\t\t<Dialog\n\t\t\t\t\tPaperProps={{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tbackgroundColor: \"#F7F7F7\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\topen={scatterHelp}\n\t\t\t\t>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.setState({ scatterHelp: false });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Close />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</DialogActions>\n\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<img src={scatterGif} alt=\"fitment\" width=\"100%\" />\n\n\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t<Box marginBottom={5}>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">Summary</Typography>\n\n\t\t\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\t\t\tThe black line represents the current\n\t\t\t\t\t\t\t\t\tpredictions of the neural network.\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\t\t\tEach gray dot is a xy coordinate that\n\t\t\t\t\t\t\t\t\trepresents the input and input label.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MainTool;\n","import React, { Component } from \"react\";\nimport headerSvg from \"./header.svg\";\nimport reactGA from \"react-ga\";\nimport { MainTool, Explanation } from \"./components/exports\";\nimport { Typography } from \"@material-ui/core\";\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\tcomponentDidMount() {\n\t\treactGA.initialize(\"UA-192169202-1\");\n\t\treactGA.pageview(\"/\");\n\t}\n\trender() {\n\t\tconst mainTool = <MainTool />;\n\t\tconst header = (\n\t\t\t<div>\n\t\t\t\t<img src={headerSvg} width=\"100%\" />\n\t\t\t\t<Typography\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\t\tbottom: 200,\n\t\t\t\t\t\tleft: 100,\n\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"h2\"\n\t\t\t\t>\n\t\t\t\t\t<b>How Neural Networks Learn </b>\n\t\t\t\t</Typography>\n\t\t\t\t<Typography\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\t\tbottom: 200,\n\t\t\t\t\t\tleft: 100,\n\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t>\n\t\t\t\t\tLearn backpropogation and optimization with interactive\n\t\t\t\t\ttools\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t);\n\t\tconst acks = (\n\t\t\t<div>\n\t\t\t\t<h1>\n\t\t\t\t\tReserve this space under the main tool for refereces, credit\n\t\t\t\t\tacknowledgements\n\t\t\t\t</h1>\n\t\t\t</div>\n\t\t);\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{header}\n\t\t\t\t<Explanation />\n\t\t\t\t<MainTool />\n\t\t\t\t{acks}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport { Typography } from \"@material-ui/core\";\n\nclass Header extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { width: 2000, height: 1000 };\n\t}\n\n\tasync componentDidMount() {\n\t\tlet w = document.body.clientWidth;\n\t\tthis.setState({ width: w, height: 500 });\n\t\tconst { width, height } = await this.state;\n\t\tconst svg = d3.select(\"#contourBackground\").select(\"#contour\");\n\t\tconst darkness = -8;\n\n\t\tconst data = {\n\t\t\tX: [0, 1, 2, 3, 4],\n\t\t\ty: [4, 3, 3, 1, 0],\n\t\t};\n\t\tlet n = width,\n\t\t\tm = height,\n\t\t\tvalues = new Array(n * m);\n\n\t\tfor (let j = 0.5, k = 0; j < m; ++j) {\n\t\t\tfor (let i = 0.5; i < n; ++i, ++k) {\n\t\t\t\tvalues[k] = loss((i / n) * 10 - 5, (j / m) * 20);\n\t\t\t}\n\t\t}\n\n\t\tfunction loss(m, b) {\n\t\t\tlet x = data.X,\n\t\t\t\ty = data.y;\n\t\t\tlet summed = 0;\n\t\t\tfor (let i = 0; i < data.X.length; i++) {\n\t\t\t\tsummed += Math.pow(m * x[i] + b - y[i], 2);\n\t\t\t}\n\t\t\treturn summed / (2 * x.length);\n\t\t}\n\t\tlet thresholds = d3.range(darkness, 20, 1).map((i) => Math.pow(2, i));\n\t\tlet color = d3.scaleSequentialLog(\n\t\t\td3.extent(thresholds),\n\t\t\td3.interpolateMagma\n\t\t);\n\t\tconst contours = d3.contours().size([n, m]).thresholds(thresholds)(\n\t\t\tvalues\n\t\t);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"fill\", \"none\")\n\t\t\t.selectAll(\"path\")\n\t\t\t.data(contours)\n\t\t\t.join(\"path\")\n\t\t\t.attr(\"fill\", (d) => color(d.value))\n\t\t\t.attr(\"d\", d3.geoPath());\n\t}\n\trender() {\n\t\tconst { width, height } = this.state;\n\t\treturn (\n\t\t\t<div id=\"contourBackground\">\n\t\t\t\t<svg style={{ width, height }} id=\"contour\"></svg>\n\t\t\t\t<Typography\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\t\tbottom: 200,\n\t\t\t\t\t\tleft: 100,\n\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"h2\"\n\t\t\t\t>\n\t\t\t\t\t<b>How Neural Networks Learn </b>\n\t\t\t\t</Typography>\n\t\t\t\t<Typography\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\t\tbottom: 200,\n\t\t\t\t\t\tleft: 100,\n\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t>\n\t\t\t\t\tLearn backpropogation and optimization with interactive\n\t\t\t\t\ttools\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Header;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}